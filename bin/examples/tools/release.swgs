using Core

#dependencies
{
    #import("core", location: "swag@std")
}

func filter(file: File.FileInfo)->bool
{
    if Utf8.contains(file.fullname, "/vendor/"):
        return false
    if Utf8.contains(file.fullname, "/output/"):
        return false
    if Utf8.contains(file.fullname, "/dependencies/"):
        return false
    if Utf8.contains(file.fullname, "/public/"):
        return false
    if Utf8.contains(file.fullname, "/datas/"):
        return true
    if Utf8.contains(file.fullname, "/paint/theme/"):
        return true
    if Utf8.contains(file.fullname, "/shaders/"):
        return true

    var ext = Path.getExtensionLowerCase(file.fullname)
    switch ext
    {
    case ".exe":
        return Utf8.contains(file.fullname, "swag.exe") or
               Utf8.contains(file.fullname, "swag_stats.exe")
    case ".dll", ".lib", ".swg", ".glsl", ".swgs":
        return true
    }

    return false
}

#main
{
    let toolsPath = "c:/perso/swag-lang/swag/tools"
    let dataPath  = Path.getDirectoryName(toolsPath)
    var binPath   = Path.combine(dataPath, "bin")

    // Enumerate list of files to release
    var options: Directory.EnumerationOptions
    options.wantDirectories = false
    options.recurse         = true
    options.filterLambda    = &filter
    var allFiles = try Directory.enumerate(binPath, options)

    // Generate list of files
    var allLines: Array'string
    foreach f in allFiles:
        allLines.add(cast(string) f.fullname[9..])

    let mo = try Directory.getCurrent()
    try Directory.setCurrent(Path.getDirectoryName(Path.getDirectoryName(dataPath)))

    catch File.delete("list.txt")
    try File.writeAllLines("list.txt", allLines)

    // Zip them
    var name = Format.toString("swag-windows-x86-64-v%.%.%.zip", #swagversion, #swagrevision, #swagbuildnum)
    var cmd  = Format.toString("a % @list.txt", name)
    Console.print("7z.exe ", cmd, "\n")
    try Env.doSyncProcess(Path.combine(toolsPath, "7z.exe"), cmd)

    catch File.delete("list.txt")
    try Directory.setCurrent(mo)
}
