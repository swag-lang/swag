#dependencies
{
    #import "gui" location="swag@std"
}

using Core, Gui, Pixel

const GridSize = 32
var g_Grid: [GridSize, GridSize] bool

func onEvent(wnd: *Wnd, evt: *Event)->bool
{
    switch evt.kind
    {
    case Create:
        var rng: Random.DefaultRng
        visit &c: g_Grid
        {
            dref c = rng.nextU32(0, 2) == 0 ? true : false
        }

    case Paint:
        paintEvt := cast(*PaintEvent) evt
        painter := paintEvt.bc.painter
        painter.clear(Argb.Red)
        painter.drawRect(0, 0, 48, 48, Argb.Black, 1)

        loop i: GridSize
        {
            loop j: GridSize
            {
                x := i * 48.0
                y := j * 48.0
                //if g_Grid[i, j]
                //    painter.drawRect(x, y, 48, 48, Argb.Black, 1)
            }
        }

        evt.target.invalidate()
        return true
    }

    return false
}

#run
{
    var app: Application
    surface := try app.createSurface(0, 0, 1024, 1024, hook: &onEvent)
    surface.show()
    app.run()
}