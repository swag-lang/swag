using Core, StrConv

struct atofTest
{
	in:     string
	out:    string
	error:  bool
}

const nil = false
var atoftests: [] atofTest = @[
	{"1", "1", false},
	{"1e23", "1e+23", false},
	{"1E23", "1e+23", false},
    {"100000000000000000000000", "1e+23", false},
    {"1e-100", "1e-100", false},
    {"123456700", "1.234567e+08", false},
    {"99999999999999974834176", "9.999999999999997e+22", false},
	{"100000000000000000000001", "1.0000000000000001e+23", false},
	{"100000000000000008388608", "1.0000000000000001e+23", false},
	{"100000000000000016777215", "1.0000000000000001e+23", false},
	{"100000000000000016777216", "1.0000000000000003e+23", false},
	{"-1", "-1", false},
	{"-0.1", "-0.1", false},
	{"-0", "-0", false},
	{"1e-20", "1e-20", false},
	{"625e-3", "0.625", false},

	{"0", "0", nil},
	{"0e0", "0", nil},
	{"-0e0", "-0", nil},
	{"+0e0", "0", nil},
	{"0e-0", "0", nil},
	{"-0e-0", "-0", nil},
	{"+0e-0", "0", nil},
	{"0e+0", "0", nil},
	{"-0e+0", "-0", nil},
	{"+0e+0", "0", nil},

    {"0e+01234567890123456789", "0", nil},
	{"0.00e-01234567890123456789", "0", nil},
	{"-0e+01234567890123456789", "-0", nil},
	{"-0.00e-01234567890123456789", "-0", nil},

	{"0e291", "0", nil},
	{"0e292", "0", nil},
	{"0e347", "0", nil},
	{"0e348", "0", nil},
	{"-0e291", "-0", nil},
	{"-0e292", "-0", nil},
	{"-0e347", "-0", nil},
	{"-0e348", "-0", nil},

	{"nan", "NaN", nil},
	{"NaN", "NaN", nil},
	{"NAN", "NaN", nil},

	{"inf", "+Inf", nil},
	{"-Inf", "-Inf", nil},
	{"+INF", "+Inf", nil},

	{"1.7976931348623157e308", "1.7976931348623157e+308", nil},
	{"-1.7976931348623157e308", "-1.7976931348623157e+308", nil},

	{"1.7976931348623159e308", "0", true},
	{"-1.7976931348623159e308", "0", true},

    {"1.7976931348623158e308", "1.7976931348623157e+308", nil},
	{"-1.7976931348623158e308", "-1.7976931348623157e+308", nil},
    {"1.797693134862315808e308", "0", true},
	{"-1.797693134862315808e308", "0", true},

    {"1e308", "1e+308", false},
	{"2e308", "0", true},
	{"1e309", "0", true},

	{"1e310", "0", true},
	{"-1e310", "0", true},
	{"1e400", "0", true},
	{"-1e400", "0", true},
	{"1e400000", "0", true},
	{"-1e400000", "0", true},

	{"1e-305", "1e-305", nil},
	{"1e-306", "1e-306", nil},
	{"1e-307", "1e-307", nil},
	{"1e-308", "1e-308", nil},
	{"1e-309", "1e-309", nil},
	{"1e-310", "1e-310", nil},
	{"1e-322", "1e-322", nil},

    {"5e-324", "5e-324", nil},
	{"4e-324", "5e-324", nil},
	{"3e-324", "5e-324", nil},
	{"2e-324", "0", nil},
	{"1e-350", "0", nil},
	{"1e-400000", "0", nil},

	{"1e-4294967296", "0", nil},
	{"1e+4294967296", "0", true},
	{"1e-18446744073709551616", "0", nil},
	{"1e+18446744073709551616", "0", true},

	{"1e", "0", true},
	{"1e-", "0", true},
	{".e-1", "0", true},

	{"2.2250738585072012e-308", "2.2250738585072014e-308", nil},
	{"2.2250738585072011e-308", "2.225073858507201e-308", nil},
    {"4.630813248087435e+307", "4.630813248087435e+307", nil},
    {"22.222222222222222", "22.22222222222222", nil},
    {"2.222222222222222222222222222222222222222222222222e+1", "22.22222222222222", nil},

    {"1.00000000000000011102230246251565404236316680908203126", "1.0000000000000002", nil},
    {"1.00000000000000033306690738754696212708950042724609375", "1.0000000000000004", nil},
    {"1090544144181609348835077142190", "1.0905441441816094e+30", nil},
    {"1.00000000000000011102230246251565404236316680908203124", "1", nil},

    {"1.00000000000000011102230246251565404236316680908203125", "1", nil},
    {"1090544144181609348671888949248", "1.0905441441816093e+30", nil},
]

#test
{
    var cb: ConcatBuffer
    visit t: atoftests
    {
        v := catch atod(t.in)
        @assert(!@err or t.error)
        @assert(!t.error or @err != null)

        cb.clear()
        dtoa(&cb, v.value, "g"'u8, -1, false)

        res := cb.toString()
        if t.out != res
        {
            Console.printf("% %\n", t.out, res)
            @assert(false)
        }
    }
}