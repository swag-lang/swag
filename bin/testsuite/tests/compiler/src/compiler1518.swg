struct A
{
    myTruc: u64
    buffer: [2] u32
}

impl A
{
    #[Swag.Inline]
    func(T) titi(x, y: T) => 1'u32

    #[Swag.Macro]
    func(ptr: bool) toto(using self, stmt: code)
    {
        #assert ptr == true
        loop idx: titi's32(1, 1)
        {
            let shift: u32 = 0
            loop 1
            {
                #macro
                {
                    var @alias0 = cast(bool) (#up self.buffer[#up idx] & #up shift)
                    #up self.myTruc = #up idx + 1
                    #mixin #up stmt
                }
            }
        }
    }
}

//#[Swag.PrintBc]
#test
{
    var x: A
    x.toto'true()
    {

    }

    @assert(x.myTruc == 1)
}