/**
This is the list of all keywords in the language.

# Special keywords
Keywords are predefined, reserved identifiers that have special meanings to the compiler. They can't be used as identifiers in your program.
```swag
if
else
elif
for
while
switch
defer
loop
visit
break
fallthrough
return
case
continue
default
and
or
orelse
unreachable
to
until
do
where

true
false
null
undefined

using
with
cast
acast
dref
retval
try
trycatch
catch
assume
throw
discard

public
internal
private

enum
struct
union
impl
interface
func
closure
mtd
namespace
typealias
namealias
attr
var
let
const
moveref
```
# Reserved keywords
These keywords are reserved by the language, just in case...
```swag
is
in
not
```
# Basic types
These are all the native types of the language. All are reserved keywords too.
```swag
s8
s16
s32
s64
u8
u16
u32
u64
f32
f64
bool
string
rune
any
typeinfo
void
code
cstring
cvarargs
```
# Compiler keywords
Compiler keywords always start with '#'. As user identifiers cannot start the same way, compiler keywords will never collide with user identifiers.
```swag
#global
#type

#run
#ast
#test
#init
#drop
#main
#premain
#message
#dependencies

#include
#load
#assert
#print
#error
#warning
#foreignlib
#import
#mixin
#macro
#placeholder
#if
#else
#elif
#code
#scope
#up
#do

#cfg
#os
#arch
#cpu
#backend
#module
#file
#line
#self
#location
#callerlocation
#callerfunction
#swagversion
#swagrevision
#swagbuildnum
#swagos

#index
#alias0
#alias1
#alias2 // and more generally #aliasN
#mix0
#mix1
#mix2 // and more generally #mixinN
```
# Misc intrinsics
Intrisic keywords always start with '@'. As user identifiers cannot start the same way, intrinsics keywords will never collide with user identifiers.
```swag
@err
@alignof
@args
@assert
@breakpoint
@compiler
@countof
@dataof
@dbgalloc
@defined
@drop
@compilererror
@compilerwarning
@getcontext
@pinfos
@gettag
@hastag
@init
@isbytecode
@isconstexpr
@itftableof
@kindof
@location
@mkany
@mkcallback
@mkinterface
@mkslice
@mkstring
@decltype
@modules
@nameof
@offsetof
@panic
@postcopy
@postmove
@print
@rtflags
@safety
@setcontext
@sizeof
@spread
@stringcmp
@stringof
@sysalloc
@typecmp
@typeof
```
# Intrinsics libc
```swag
@abs
@acos
@alloc
@asin
@atan
@atomadd
@atomand
@atomcmpxchg
@atomor
@atomxchg
@atomxor
@bitcountlz
@bitcountnz
@bitcounttz
@byteswap
@ceil
@cos
@cosh
@cvaarg
@cvaend
@cvastart
@exp
@exp2
@floor
@free
@log
@log10
@log2
@max
@memcmp
@memcpy
@memmove
@memset
@muladd
@min
@pow
@realloc
@rol
@ror
@round
@sin
@sinh
@sqrt
@strcmp
@strlen
@tan
@tanh
@trunc
```
*/

/**
# Modifiers
Modifiers can be applied to some specific keywords or operators to change their behaviours.
```swag
,up
,over
,nodrop
,move
,moveraw
,bit
,unconst
,back
```
*/
