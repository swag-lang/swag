<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Final|x64">
      <Configuration>Final</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{6A603E27-6A0D-4A7F-9E77-EA7912DE76B2}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Swag</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)\.out\</OutDir>
    <IntDir>$(SolutionDir)\.out\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)_d</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)\.out\</OutDir>
    <IntDir>$(SolutionDir)\.out\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)_r</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)\.out\</OutDir>
    <IntDir>$(SolutionDir)\.out\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions);</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <Profile>false</Profile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions);</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <Profile>true</Profile>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Final|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions);</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <Profile>false</Profile>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="Assert.h" />
    <ClInclude Include="Ast.h" />
    <ClInclude Include="AstFlags.h" />
    <ClInclude Include="AstNode.h" />
    <ClInclude Include="Attribute.h" />
    <ClInclude Include="Backend.h" />
    <ClInclude Include="BackendC.h" />
    <ClInclude Include="BackendCCompiler.h" />
    <ClInclude Include="BackendCCompilerVS.h" />
    <ClInclude Include="BackendCFunctionBodyJob.h" />
    <ClInclude Include="BuildParameters.h" />
    <ClInclude Include="BuildPass.h" />
    <ClInclude Include="ByteCode.h" />
    <ClInclude Include="ByteCodeGenJob.h" />
    <ClInclude Include="ByteCodeModuleManager.h" />
    <ClInclude Include="ByteCodeOp.h" />
    <ClInclude Include="ByteCodeOpList.h" />
    <ClInclude Include="ByteCodeRun.h" />
    <ClInclude Include="ByteCodeRunContext.h" />
    <ClInclude Include="CommandLine.h" />
    <ClInclude Include="CommandLineParser.h" />
    <ClInclude Include="Concat.h" />
    <ClInclude Include="ConcatBucket.h" />
    <ClInclude Include="Context.h" />
    <ClInclude Include="DataSegment.h" />
    <ClInclude Include="DependentJobs.h" />
    <ClInclude Include="Diagnostic.h" />
    <ClInclude Include="DocHtmlHelper.h" />
    <ClInclude Include="DocScopeJob.h" />
    <ClInclude Include="EnumerateModuleJob.h" />
    <ClInclude Include="ffi.h" />
    <ClInclude Include="fficonfig.h" />
    <ClInclude Include="ffitarget.h" />
    <ClInclude Include="ffi_common.h" />
    <ClInclude Include="Generic.h" />
    <ClInclude Include="Global.h" />
    <ClInclude Include="ModuleBuildJob.h" />
    <ClInclude Include="DocModuleJob.h" />
    <ClInclude Include="ModuleOutputExportJob.h" />
    <ClInclude Include="ModulePrecompileJob.h" />
    <ClInclude Include="ModuleTestJob.h" />
    <ClInclude Include="Os.h" />
    <ClInclude Include="CompilerTarget.h" />
    <ClInclude Include="ModuleCompileJob.h" />
    <ClInclude Include="ModuleOutputJob.h" />
    <ClInclude Include="OutputFile.h" />
    <ClInclude Include="RaceCondition.h" />
    <ClInclude Include="RegisterList.h" />
    <ClInclude Include="Scope.h" />
    <ClInclude Include="Scoped.h" />
    <ClInclude Include="SourceLocation.h" />
    <ClInclude Include="SwagScope.h" />
    <ClInclude Include="TypeInfo.h" />
    <ClInclude Include="Module.h" />
    <ClInclude Include="ModuleSemanticJob.h" />
    <ClInclude Include="Register.h" />
    <ClInclude Include="Job.h" />
    <ClInclude Include="JobThread.h" />
    <ClInclude Include="LanguageSpec.h" />
    <ClInclude Include="IoThread.h" />
    <ClInclude Include="Log.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="Pool.h" />
    <ClInclude Include="SemanticJob.h" />
    <ClInclude Include="SymTable.h" />
    <ClInclude Include="SyntaxJob.h" />
    <ClInclude Include="SourceFile.h" />
    <ClInclude Include="Stats.h" />
    <ClInclude Include="ThreadManager.h" />
    <ClInclude Include="Tokenizer.h" />
    <ClInclude Include="TypeList.h" />
    <ClInclude Include="TypeManager.h" />
    <ClInclude Include="TypeTable.h" />
    <ClInclude Include="Utf8.h" />
    <ClInclude Include="Utf8Crc.h" />
    <ClInclude Include="Version.h" />
    <ClInclude Include="Workspace.h" />
    <ClInclude Include="OsWin32.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Assert.cpp" />
    <ClCompile Include="Ast.cpp" />
    <ClCompile Include="AstNode.cpp" />
    <ClCompile Include="AstOutput.cpp" />
    <ClCompile Include="Attribute.cpp" />
    <ClCompile Include="Backend.cpp" />
    <ClCompile Include="BackendC.cpp" />
    <ClCompile Include="BackendCCompilerVS.cpp" />
    <ClCompile Include="BackendCData_.cpp" />
    <ClCompile Include="BackendCFunctionBodyJob.cpp" />
    <ClCompile Include="BackendCFunc_.cpp" />
    <ClCompile Include="BackendCMain_.cpp" />
    <ClCompile Include="BackendCRuntime_.cpp" />
    <ClCompile Include="ByteCode.cpp" />
    <ClCompile Include="ByteCodeGenJobAffectOp_.cpp" />
    <ClCompile Include="ByteCodeGenJobBinaryOp_.cpp" />
    <ClCompile Include="ByteCodeGenJobBlock_.cpp" />
    <ClCompile Include="ByteCodeGenJobCast_.cpp" />
    <ClCompile Include="ByteCodeGenJobCompareOp_.cpp" />
    <ClCompile Include="ByteCodeGenJobFunc_.cpp" />
    <ClCompile Include="ByteCodeGenJobIdentifier_.cpp" />
    <ClCompile Include="ByteCodeGenJobExpression_.cpp" />
    <ClCompile Include="ByteCodeGenJob.cpp" />
    <ClCompile Include="ByteCodeGenJobProperty_.cpp" />
    <ClCompile Include="ByteCodeGenJobRef_.cpp" />
    <ClCompile Include="ByteCodeGenJobStruct_.cpp" />
    <ClCompile Include="ByteCodeGenJobUnaryOp_.cpp" />
    <ClCompile Include="ByteCodeGenJobVar_.cpp" />
    <ClCompile Include="ByteCodeModuleManager.cpp" />
    <ClCompile Include="ByteCodeRun.cpp" />
    <ClCompile Include="ByteCodeRunContext.cpp" />
    <ClCompile Include="ByteCodeRunFFI_.cpp" />
    <ClCompile Include="DependentJobs.cpp" />
    <ClCompile Include="closures.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="CommandLine.cpp" />
    <ClCompile Include="CommandLineParser.cpp" />
    <ClCompile Include="Concat.cpp">
      <ShowIncludes Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</ShowIncludes>
      <ShowIncludes Condition="'$(Configuration)|$(Platform)'=='Final|x64'">false</ShowIncludes>
    </ClCompile>
    <ClCompile Include="DocScopeJob.cpp" />
    <ClCompile Include="EnumerateModuleJob.cpp" />
    <ClCompile Include="Job.cpp" />
    <ClCompile Include="Context.cpp" />
    <ClCompile Include="DataSegment.cpp" />
    <ClCompile Include="Diagnostic.cpp" />
    <ClCompile Include="ffi.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="ffi64.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="Generic.cpp" />
    <ClCompile Include="Global.cpp" />
    <ClCompile Include="JobThread.cpp" />
    <ClCompile Include="LanguageSpec.cpp" />
    <ClCompile Include="Module.cpp" />
    <ClCompile Include="ModuleBuildJob.cpp" />
    <ClCompile Include="ModuleCompileJob.cpp" />
    <ClCompile Include="DocModuleJob.cpp" />
    <ClCompile Include="ModuleOutputExportJob.cpp" />
    <ClCompile Include="ModuleOutputJob.cpp" />
    <ClCompile Include="ModulePrecompileJob.cpp" />
    <ClCompile Include="ModuleSemanticJob.cpp" />
    <ClCompile Include="ModuleTestJob.cpp" />
    <ClCompile Include="OsWin32.cpp" />
    <ClCompile Include="OutputFile.cpp" />
    <ClCompile Include="RaceCondition.cpp" />
    <ClCompile Include="Scope.cpp" />
    <ClCompile Include="SemanticJobAffectExpression_.cpp" />
    <ClCompile Include="SemanticJobAttribute_.cpp" />
    <ClCompile Include="SemanticJobBinaryExpression_.cpp" />
    <ClCompile Include="SemanticJobBlock_.cpp" />
    <ClCompile Include="SemanticJobCompareExpression_.cpp" />
    <ClCompile Include="SemanticJobCompiler_.cpp" />
    <ClCompile Include="SemanticJobDeclaration_.cpp" />
    <ClCompile Include="SemanticJobOp_.cpp" />
    <ClCompile Include="SemanticJobProperty_.cpp" />
    <ClCompile Include="SemanticJobRef_.cpp" />
    <ClCompile Include="SemanticJobStruct_.cpp" />
    <ClCompile Include="SemanticJobUnaryExpression_.cpp" />
    <ClCompile Include="SemanticJobVar_.cpp" />
    <ClCompile Include="SemanticJobEnum_.cpp" />
    <ClCompile Include="SemanticJobExpression_.cpp" />
    <ClCompile Include="SemanticJobFunc_.cpp" />
    <ClCompile Include="SemanticJobIdentifier_.cpp" />
    <ClCompile Include="SemanticJob.cpp" />
    <ClCompile Include="SemanticJobType_.cpp" />
    <ClCompile Include="Stats.cpp" />
    <ClCompile Include="SwagScope.cpp" />
    <ClCompile Include="SymTable.cpp" />
    <ClCompile Include="SyntaxJobAttribute_.cpp" />
    <ClCompile Include="SyntaxJobBlock_.cpp" />
    <ClCompile Include="SyntaxJobCompiler_.cpp" />
    <ClCompile Include="SyntaxJobDeclaration_.cpp" />
    <ClCompile Include="SyntaxJobEnum_.cpp" />
    <ClCompile Include="SyntaxJobExpression_.cpp" />
    <ClCompile Include="SyntaxJobFunction_.cpp" />
    <ClCompile Include="SyntaxJobIdentifier_.cpp" />
    <ClCompile Include="SyntaxJobStruct_.cpp" />
    <ClCompile Include="SyntaxJobType_.cpp" />
    <ClCompile Include="SyntaxJobVar_.cpp" />
    <ClCompile Include="TokenizerIdentifier_.cpp" />
    <ClCompile Include="TokenizerNumberLiteral_.cpp" />
    <ClCompile Include="IoThread.cpp" />
    <ClCompile Include="Log.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="prep_cif.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="SyntaxJob.cpp" />
    <ClCompile Include="SourceFile.cpp" />
    <ClCompile Include="Swag.cpp" />
    <ClCompile Include="ThreadManager.cpp" />
    <ClCompile Include="Tokenizer.cpp" />
    <ClCompile Include="TokenizerStringLiteral_.cpp" />
    <ClCompile Include="TokenizerSymbol_.cpp" />
    <ClCompile Include="TypeInfo.cpp" />
    <ClCompile Include="TypeInfoMatch_.cpp" />
    <ClCompile Include="TypeInfoSpecific_.cpp" />
    <ClCompile Include="TypeList.cpp" />
    <ClCompile Include="TypeManager.cpp" />
    <ClCompile Include="TypeManagerCast_.cpp" />
    <ClCompile Include="types.c">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Final|x64'">NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="TypeTable.cpp" />
    <ClCompile Include="Utf8.cpp" />
    <ClCompile Include="Workspace.cpp" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="win64.S">
      <FileType>Document</FileType>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
cl.exe /EP win64.S &gt; win64_plain.asm

ml64.exe /c /Cx /Fo $(SolutionDir)/.out/$(Configuration)/win64.obj win64_plain.asm
</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(SolutionDir)/.out/$(Configuration)/win64.obj</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
cl.exe /EP win64.S &gt; win64_plain.asm

ml64.exe /c /Cx /Fo $(SolutionDir)/.out/$(Configuration)/win64.obj win64_plain.asm
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Final|x64'">
cl.exe /EP win64.S &gt; win64_plain.asm

ml64.exe /c /Cx /Fo $(SolutionDir)/.out/$(Configuration)/win64.obj win64_plain.asm
</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(SolutionDir)/.out/$(Configuration)/win64.obj</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Final|x64'">$(SolutionDir)/.out/$(Configuration)/win64.obj</Outputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include=".clang-format" />
    <ClCompile Include="CopyFileJob.cpp" />
    <ClInclude Include="CopyFileJob.h" />
    <None Include="CopyFileJob.cpp" />
    <None Include="CopyFileJob.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>