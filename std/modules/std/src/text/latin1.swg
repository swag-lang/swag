namespace std.text.latin1
{
	using std.text
    public const charCategory: [] unicode.UnicodeCategory =
    @[
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0000 - 0007
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0008 - 000F
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0010 - 0017
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0018 - 001F
        unicode.UnicodeCategory.SpaceSeparator, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.CurrencySymbol, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation,    // 0020 - 0027
        unicode.UnicodeCategory.OpenPunctuation, unicode.UnicodeCategory.ClosePunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.DashPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation,    // 0028 - 002F
        unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber,    // 0030 - 0037
        unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.DecimalDigitNumber, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.OtherPunctuation,    // 0038 - 003F
        unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter,    // 0040 - 0047
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter,    // 0048 - 004F
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter,    // 0050 - 0057
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.OpenPunctuation, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.ClosePunctuation, unicode.UnicodeCategory.ModifierSymbol, unicode.UnicodeCategory.ConnectorPunctuation,    // 0058 - 005F
        unicode.UnicodeCategory.ModifierSymbol, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 0060 - 0067
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 0068 - 006F
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 0070 - 0077
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.OpenPunctuation, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.ClosePunctuation, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.Control,    // 0078 - 007F
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0080 - 0087
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0088 - 008F
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0090 - 0097
        unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control, unicode.UnicodeCategory.Control,    // 0098 - 009F
        unicode.UnicodeCategory.SpaceSeparator, unicode.UnicodeCategory.OtherPunctuation, unicode.UnicodeCategory.CurrencySymbol, unicode.UnicodeCategory.CurrencySymbol, unicode.UnicodeCategory.CurrencySymbol, unicode.UnicodeCategory.CurrencySymbol, unicode.UnicodeCategory.OtherSymbol, unicode.UnicodeCategory.OtherSymbol,    // 00A0 - 00A7
        unicode.UnicodeCategory.ModifierSymbol, unicode.UnicodeCategory.OtherSymbol, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.InitialQuotePunctuation, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.DashPunctuation, unicode.UnicodeCategory.OtherSymbol, unicode.UnicodeCategory.ModifierSymbol,    // 00A8 - 00AF
        unicode.UnicodeCategory.OtherSymbol, unicode.UnicodeCategory.MathSymbol, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.ModifierSymbol, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.OtherSymbol, unicode.UnicodeCategory.OtherPunctuation,    // 00B0 - 00B7
        unicode.UnicodeCategory.ModifierSymbol, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.FinalQuotePunctuation, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.OtherNumber, unicode.UnicodeCategory.OtherPunctuation,    // 00B8 - 00BF
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter,    // 00C0 - 00C7
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter,    // 00C8 - 00CF
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.MathSymbol,    // 00D0 - 00D7
        unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.UppercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 00D8 - 00DF
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 00E0 - 00E7
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 00E8 - 00EF
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.MathSymbol,    // 00F0 - 00F7
        unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter, unicode.UnicodeCategory.LowercaseLetter,    // 00F8 - 00FF
    ]

	#[swag.inline, swag.constexpr]
    public
    {
        func isAscii(c: u8)         => c <= 0x7F
        func isDigit(c: u8)         => c >= "0"'u8 && c <= "9"'u8
        func isBinDigit(c: u8)      => c == "0"'u8 || c == "1"'u8
        func isHexDigit(c: u8)      => (c >= "0"'u8 && c <= "9"'u8) || (c >= "a"'u8 && c <= "z"'u8) || (c >= "A"'u8 && c <= "Z"'u8)
        func isUpper(c: u8)         => charCategory[c] == unicode.UnicodeCategory.UppercaseLetter
        func isLower(c: u8)         => charCategory[c] == unicode.UnicodeCategory.LowercaseLetter
        func isPunctuation(c: u8)   => unicode.isPunctuation(charCategory[c])

        func isLetter(c: u8)->bool
        {
            return  (c >= "a"'u8 && c <= "z"'u8) ||
                    (c >= "A"'u8 && c <= "Z"'u8) ||
                    (c >= 0x80 && unicode.isLetter(charCategory[c]))
        }

        func isLetterOrDigit(c: u8)->bool
        {
            return  (c >= "a"'u8 && c <= "z"'u8) ||
                    (c >= "A"'u8 && c <= "Z"'u8) ||
                    (c >= "0"'u8 && c <= "9"'u8) ||
                    (c >= 0x80 && unicode.isLetterOrDigit(charCategory[c]))
        }

		func isWhiteSpace(c: u8)->bool
        {
            return  c == " "'u8 ||
                    (c >= "\x09"'u8 && c <= "\x0d"'u8) ||
                    c == "\xa0"'u8 ||
                    c == "\x85"'u8
        }

        func toUpper(c: u8)->u8
        {
            if c >= "a"'u8 && c <= "z"'u8
                return cast(u8) (c & ~0x20)
            return c;
        }

        func toLower(c: u8)->u8
        {
            if c >= "A"'u8 && c <= "Z"'u8
                return cast(u8) (c | 0x20)
            return c;
        }
    }
}