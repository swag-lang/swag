#public

alias GLenum        = s32
alias GLboolean     = u8
alias GLbitfield    = u32
alias GLbyte        = s8
alias GLshort       = s16
alias GLint         = s32
alias GLsizei       = s32
alias GLubyte       = u8
alias GLushort      = u16
alias GLuint        = u32
alias GLfloat       = f32
alias GLclampf      = f32
alias GLdouble      = f64
alias GLclampd      = f64
alias GLvoid        = void

const GL_COLOR_BUFFER_BIT = 0x00004000

const GL_POINTS             = 0x0000's32
const GL_LINES              = 0x0001's32
const GL_LINE_LOOP          = 0x0002's32
const GL_LINE_STRIP         = 0x0003's32
const GL_TRIANGLES          = 0x0004's32
const GL_TRIANGLE_STRIP     = 0x0005's32
const GL_TRIANGLE_FAN       = 0x0006's32
const GL_QUADS              = 0x0007's32
const GL_QUAD_STRIP         = 0x0008's32
const GL_POLYGON            = 0x0009's32

#[swag.foreign("opengl32")]
{
    func glAccum(op: GLenum, value: GLfloat);
    func glAlphaFunc(fc: GLenum, ref: GLclampf);
    func glAreTexturesResident(n: GLsizei, textures: const *GLuint, residences: *GLboolean)->GLboolean;
    func glArrayElement(i: GLint);
    func glBegin(mode: GLenum);
    func glBindTexture(target: GLenum, texture: GLuint);
    func glBitmap(width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: const *GLubyte);
    func glBlendFunc(sfactor: GLenum, dfactor: GLenum);
    func glCallList(list: GLuint);
    func glCallLists(n: GLsizei, type: GLenum, lists: const *GLvoid);
    func glClear(mask: GLbitfield);
    func glClearAccum(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat);
    func glClearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf);
    func glClearDepth(depth: GLclampd);
    func glClearIndex(c: GLfloat);
    func glClearStencil(s: GLint);
    func glClipPlane(plane: GLenum, equation: const *GLdouble);
    func glColor3b(red: GLbyte, green: GLbyte, blue: GLbyte);
    func glColor3bv(v: const *GLbyte);
    func glColor3d(red: GLdouble, green: GLdouble, blue: GLdouble);
    func glColor3dv(v: const *GLdouble);
    func glColor3f(red: GLfloat, green: GLfloat, blue: GLfloat);
    func glColor3fv(v: const *GLfloat);
    func glColor3i(red: GLint, green: GLint, blue: GLint);
    func glColor3iv(v: const *GLint);
    func glColor3s(red: GLshort, green: GLshort, blue: GLshort);
    func glColor3sv(v: const *GLshort);
    func glColor3ub(red: GLubyte, green: GLubyte, blue: GLubyte);
    func glColor3ubv(v: const GLubyte);
    func glColor3ui(red: GLuint, green: GLuint, blue: GLuint);
    func glColor3uiv(v: const *GLuint);
    func glColor3us(red: GLushort, green: GLushort, blue: GLushort);
    func glColor3usv(v: const *GLushort);
    func glColor4b(red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte);
    func glColor4bv(v: const *GLbyte);
    func glColor4d(red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble);
    func glColor4dv(v: const *GLdouble);
    func glColor4f(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat);
    func glColor4fv(v: const *GLfloat);
    func glColor4i(red: GLint, green: GLint, blue: GLint, alpha: GLint);
    func glColor4iv(v: const *GLint);
    func glColor4s(red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort);
    func glColor4sv(v: const *GLshort);
    func glColor4ub(red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte);
    func glColor4ubv(v: const GLubyte);
    func glColor4ui(red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint);
    func glColor4uiv(v: const *GLuint);
    func glColor4us(red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort);
    func glColor4usv(v: const GLushort);
    func glColorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean);
    func glColorMaterial(face: GLenum, mode: GLenum);
    func glColorPointer(size: GLint, type: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glCopyPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, type: GLenum);
    func glCopyTexImage1D(target: GLenum, level: GLint, internalFormat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint);
    func glCopyTexImage2D(target: GLenum, level: GLint, internalFormat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint);
    func glCopyTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei);
    func glCopyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei);
    func glCullFace(mode: GLenum);
    func glDeleteLists(list: GLuint, range: GLsizei);
    func glDeleteTextures(n: GLsizei, textures: const *GLuint);
    func glDepthFunc(fc: GLenum);
    func glDepthMask(flag: GLboolean);
    func glDepthRange(zNear: GLclampd, zFar: GLclampd);
    func glDisable(cap: GLenum);
    func glDisableClientState(array: GLenum);
    func glDrawArrays(mode: GLenum, first: GLint, count: GLsizei);
    func glDrawBuffer(mode: GLenum);
    func glDrawElements(mode: GLenum, count: GLsizei, type: GLenum, indices: const *GLvoid);
    func glDrawPixels(width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: const *GLvoid);
    func glEdgeFlag(flag: GLboolean);
    func glEdgeFlagPointer(stride: GLsizei, pointer: const *GLvoid);
    func glEdgeFlagv(flag: const *GLboolean);
    func glEnable(cap: GLenum);
    func glEnableClientState(array: GLenum);
    func glEnd();
    func glEndList();
    func glEvalCoord1d(u: GLdouble);
    func glEvalCoord1dv(u: const *GLdouble);
    func glEvalCoord1f(u: GLfloat);
    func glEvalCoord1fv(u: const *GLfloat);
    func glEvalCoord2d(u: GLdouble, v: GLdouble);
    func glEvalCoord2dv(u: const *GLdouble);
    func glEvalCoord2f(u: GLfloat, v: GLfloat);
    func glEvalCoord2fv(u: const *GLfloat);
    func glEvalMesh1(mode: GLenum, i1: GLint, i2: GLint);
    func glEvalMesh2(mode: GLenum, i1: GLint, i2: GLint, j1: GLint, j2: GLint);
    func glEvalPoint1(i: GLint);
    func glEvalPoint2(i: GLint, j: GLint);
    func glFeedbackBuffer(size: GLsizei, type: GLenum, buffer: *GLfloat);
    func glFinish();
    func glFlush();
    func glFogf(pname: GLenum, param: GLfloat);
    func glFogfv(pname: GLenum, params: const *GLfloat);
    func glFogi(pname: GLenum, param: GLint);
    func glFogiv(pname: GLenum, params: const *GLint);
    func glFrontFace(mode: GLenum);
    func glFrustum(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble);
    func glGenLists(range: GLsizei)->GLuint;
    func glGenTextures(n: GLsizei, textures: *GLuint);
    func glGetBooleanv(pname: GLenum, params: *GLboolean);
    func glGetClipPlane(plane: GLenum, equation: *GLdouble);
    func glGetDoublev(pname: GLenum, params: *GLdouble);
    func glGetError()->GLenum;
    func glGetFloatv(pname: GLenum, params: *GLfloat);
    func glGetIntegerv(pname: GLenum, params: *GLint);
    func glGetLightfv(light: GLenum, pname: GLenum, params: *GLfloat);
    func glGetLightiv(light: GLenum, pname: GLenum, params: *GLint);
    func glGetMapdv(target: GLenum, query: GLenum, v: *GLdouble);
    func glGetMapfv(target: GLenum, query: GLenum, v: *GLfloat);
    func glGetMapiv(target: GLenum, query: GLenum, v: *GLint);
    func glGetMaterialfv(face: GLenum, pname: GLenum, params: *GLfloat);
    func glGetMaterialiv(face: GLenum, pname: GLenum, params: *GLint);
    func glGetPixelMapfv(map: GLenum, values: *GLfloat);
    func glGetPixelMapuiv(map: GLenum, values: *GLuint);
    func glGetPixelMapusv(map: GLenum, values: *GLushort);
    func glGetPointerv(pname: GLenum, params: **GLvoid);
    func glGetPolygonStipple(mask: *GLubyte);
    func glGetString(name: GLenum)->const *GLubyte;
    func glGetTexEnvfv(target: GLenum, pname: GLenum, params: *GLfloat);
    func glGetTexEnviv(target: GLenum, pname: GLenum, params: *GLint);
    func glGetTexGendv(coord: GLenum, pname: GLenum, params: *GLdouble);
    func glGetTexGenfv(coord: GLenum, pname: GLenum, params: *GLfloat);
    func glGetTexGeniv(coord: GLenum, pname: GLenum, params: *GLint);
    func glGetTexImage(target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: *GLvoid);
    func glGetTexLevelParameterfv(target: GLenum, level: GLint, pname: GLenum, params: *GLfloat);
    func glGetTexLevelParameteriv(target: GLenum, level: GLint, pname: GLenum, params: *GLint);
    func glGetTexParameterfv(target: GLenum, pname: GLenum, params: *GLfloat);
    func glGetTexParameteriv(target: GLenum, pname: GLenum, params: *GLint);
    func glHint(target: GLenum, mode: GLenum);
    func glIndexMask(mask: GLuint);
    func glIndexPointer(type: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glIndexd(c: GLdouble);
    func glIndexdv(c: const *GLdouble);
    func glIndexf(c: GLfloat);
    func glIndexfv(c: const *GLfloat);
    func glIndexi(c: GLint);
    func glIndexiv(c: const *GLint);
    func glIndexs(c: GLshort);
    func glIndexsv(c: const *GLshort);
    func glIndexub(c: GLubyte);
    func glIndexubv(c: const *GLubyte);
    func glInitNames();
    func glInterleavedArrays(format: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glIsEnabled(cap: GLenum)->GLboolean;
    func glIsList(list: GLuint)->GLboolean;
    func glIsTexture(texture: GLuint)->GLboolean;
    func glLightModelf(pname: GLenum, param: GLfloat);
    func glLightModelfv(pname: GLenum, params: const *GLfloat);
    func glLightModeli(pname: GLenum, param: GLint );
    func glLightModeliv(pname: GLenum, params: const *GLint);
    func glLightf(light: GLenum, pname: GLenum, param: GLfloat);
    func glLightfv(light: GLenum, pname: GLenum, params: const *GLfloat);
    func glLighti(light: GLenum, pname: GLenum, param: GLint );
    func glLightiv(light: GLenum, pname: GLenum, params: const *GLint);
    func glLineStipple(factor: GLint, pattern: GLushort);
    func glLineWidth(width: GLfloat);
    func glListBase(base: GLuint);
    func glLoadIdentity();
    func glLoadMatrixd(m: const *GLdouble);
    func glLoadMatrixf(m: const *GLfloat);
    func glLoadName(name: GLuint);
    func glLogicOp(opcode: GLenum);
    func glMap1d(target: GLenum, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: const *GLdouble);
    func glMap1f(target: GLenum, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: const *GLfloat);
    func glMap2d(target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: const *GLdouble);
    func glMap2f(target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: const *GLfloat);
    func glMapGrid1d(un: GLint, u1: GLdouble, u2: GLdouble);
    func glMapGrid1f(un: GLint, u1: GLfloat, u2: GLfloat);
    func glMapGrid2d(un: GLint, u1: GLdouble, u2: GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble);
    func glMapGrid2f(un: GLint, u1: GLfloat, u2: GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat);
    func glMaterialf(face: GLenum, pname: GLenum, param: GLfloat);
    func glMaterialfv(face: GLenum, pname: GLenum, params: const *GLfloat);
    func glMateriali(face: GLenum, pname: GLenum, param: GLint );
    func glMaterialiv(face: GLenum, pname: GLenum, params: const *GLint);
    func glMatrixMode(mode: GLenum);
    func glMultMatrixd(m: const *GLdouble);
    func glMultMatrixf(m: const *GLfloat);
    func glNewList(list: GLuint, mode: GLenum);
    func glNormal3b(nc: GLbyte, ny: GLbyte, nz: GLbyte);
    func glNormal3bv(v: const *GLbyte);
    func glNormal3d(nx: GLdouble, ny: GLdouble, nz: GLdouble);
    func glNormal3dv(v: const *GLdouble);
    func glNormal3f(nx: GLfloat, ny: GLfloat, nz: GLfloat);
    func glNormal3fv(v: const *GLfloat);
    func glNormal3i(nx: GLint, ny: GLint, nz: GLint);
    func glNormal3iv(v: const *GLint);
    func glNormal3s(nx: GLshort, ny: GLshort, nz: GLshort);
    func glNormal3sv(v: const *GLshort);
    func glNormalPointer(type: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glOrtho(left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble);
    func glPassThrough(token: GLfloat);
    func glPixelMapfv(map: GLenum, mapsize: GLsizei, values: const *GLfloat);
    func glPixelMapuiv(map: GLenum, mapsize: GLsizei, values: const *GLuint);
    func glPixelMapusv(map: GLenum, mapsize: GLsizei, values: const *GLushort);
    func glPixelStoref(pname: GLenum, param: GLfloat);
    func glPixelStorei(pname: GLenum, param: GLint );
    func glPixelTransferf(pname: GLenum, param: GLfloat);
    func glPixelTransferi(pname: GLenum, param: GLint );
    func glPixelZoom(xfactor: GLfloat, yfactor: GLfloat);
    func glPointSize(size: GLfloat);
    func glPolygonMode(face: GLenum, mode: GLenum);
    func glPolygonOffset(factor: GLfloat, units: GLfloat);
    func glPolygonStipple(mask: const *GLubyte);
    func glPopAttrib();
    func glPopClientAttrib();
    func glPopMatrix();
    func glPopName();
    func glPrioritizeTextures(n: GLsizei, textures: const *GLuint, priorities: const *GLclampf);
    func glPushAttrib(mask: GLbitfield);
    func glPushClientAttrib(mask: GLbitfield);
    func glPushMatrix();
    func glPushName(name: GLuint);
    func glRasterPos2d(x: GLdouble, y: GLdouble);
    func glRasterPos2dv(v: const *GLdouble);
    func glRasterPos2f(x: GLfloat, y: GLfloat);
    func glRasterPos2fv(v: const *GLfloat);
    func glRasterPos2i(x: GLint, y: GLint);
    func glRasterPos2iv(v: const *GLint);
    func glRasterPos2s(x: GLshort, y: GLshort);
    func glRasterPos2sv(v: const *GLshort);
    func glRasterPos3d(x: GLdouble, y: GLdouble, z: GLdouble);
    func glRasterPos3dv(v: const *GLdouble);
    func glRasterPos3f(x: GLfloat, y: GLfloat, z: GLfloat);
    func glRasterPos3fv(v: const *GLfloat);
    func glRasterPos3i(x: GLint, y: GLint, z: GLint);
    func glRasterPos3iv(v: const *GLint);
    func glRasterPos3s(x: GLshort, y: GLshort, z: GLshort);
    func glRasterPos3sv(v: const *GLshort);
    func glRasterPos4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble);
    func glRasterPos4dv(v: const *GLdouble);
    func glRasterPos4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat);
    func glRasterPos4fv(v: const *GLfloat);
    func glRasterPos4i(x: GLint, y: GLint, z: GLint, w: GLint);
    func glRasterPos4iv(v: const *GLint);
    func glRasterPos4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort);
    func glRasterPos4sv(v: const *GLshort);
    func glReadBuffer(mode: GLenum);
    func glReadPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *GLvoid);
    func glRectd(x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble);
    func glRectdv(v1: const *GLdouble, v2: const *GLdouble);
    func glRectf(x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat);
    func glRectfv(v1: const *GLfloat, v2: const *GLfloat);
    func glRecti(x1: GLint, y1: GLint, x2: GLint, y2: GLint);
    func glRectiv(v1: const *GLint, v2: const *GLint);
    func glRects(x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort);
    func glRectsv(v1: const *GLshort, v2: const *GLshort);
    func glRenderMode(mode: GLenum)->GLint;
    func glRotated(angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble);
    func glRotatef(angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat);
    func glScaled(x: GLdouble, y: GLdouble, z: GLdouble);
    func glScalef(x: GLfloat, y: GLfloat, z: GLfloat);
    func glScissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei);
    func glSelectBuffer(size: GLsizei, buffer: *GLuint);
    func glShadeModel(mode: GLenum);
    func glStencilFunc(fc: GLenum , ref: GLint, mask: GLuint);
    func glStencilMask(mask: GLuint);
    func glStencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum);
    func glTexCoord1d(s: GLdouble);
    func glTexCoord1dv(v: const *GLdouble);
    func glTexCoord1f(s: GLfloat);
    func glTexCoord1fv(v: const *GLfloat);
    func glTexCoord1i(s: GLint);
    func glTexCoord1iv(v: const *GLint);
    func glTexCoord1s(s: GLshort);
    func glTexCoord1sv(v: const *GLshort);
    func glTexCoord2d(s: GLdouble, t: GLdouble);
    func glTexCoord2dv(v: const *GLdouble);
    func glTexCoord2f(s: GLfloat, t: GLfloat);
    func glTexCoord2fv(v: const *GLfloat);
    func glTexCoord2i(s: GLint, t: GLint);
    func glTexCoord2iv(v: const *GLint);
    func glTexCoord2s(s: GLshort, t: GLshort);
    func glTexCoord2sv(v: const *GLshort);
    func glTexCoord3d(s: GLdouble, t: GLdouble, r: GLdouble);
    func glTexCoord3dv(v: const *GLdouble);
    func glTexCoord3f(s: GLfloat, t: GLfloat, r: GLfloat);
    func glTexCoord3fv(v: const *GLfloat);
    func glTexCoord3i(s: GLint, t: GLint, r: GLint);
    func glTexCoord3iv(v: const *GLint);
    func glTexCoord3s(s: GLshort, t: GLshort, r: GLshort);
    func glTexCoord3sv(v: const *GLshort);
    func glTexCoord4d(s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble);
    func glTexCoord4dv(v: const *GLdouble);
    func glTexCoord4f(s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat);
    func glTexCoord4fv(v: const *GLfloat);
    func glTexCoord4i(s: GLint, t: GLint, r: GLint, q: GLint);
    func glTexCoord4iv(v: const *GLint);
    func glTexCoord4s(s: GLshort, t: GLshort, r: GLshort, q: GLshort);
    func glTexCoord4sv(v: const *GLshort);
    func glTexCoordPointer(size: GLint, type: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glTexEnvf(target: GLenum, pname: GLenum, param: GLfloat);
    func glTexEnvfv(target: GLenum, pname: GLenum, params: const *GLfloat);
    func glTexEnvi(target: GLenum, pname: GLenum, param: GLint);
    func glTexEnviv(target: GLenum, pname: GLenum, params: const *GLint);
    func glTexGend(coord: GLenum, pname: GLenum, param: GLdouble);
    func glTexGendv(coord: GLenum, pname: GLenum, params: const *GLdouble);
    func glTexGenf(coord: GLenum, pname: GLenum, param: GLfloat);
    func glTexGenfv(coord: GLenum, pname: GLenum, params: const *GLfloat);
    func glTexGeni(coord: GLenum, pname: GLenum, param: GLint);
    func glTexGeniv(coord: GLenum, pname: GLenum, params: const *GLint);
    func glTexImage1D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: const *GLvoid);
    func glTexImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: const *GLvoid);
    func glTexParameterf(target: GLenum, pname: GLenum, param: GLfloat);
    func glTexParameterfv(target: GLenum, pname: GLenum, params: const  *GLfloat);
    func glTexParameteri(target: GLenum, pname: GLenum, param: GLint );
    func glTexParameteriv(target: GLenum, pname: GLenum, params: const  *GLint);
    func glTexSubImage1D(target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: const *GLvoid);
    func glTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: const *GLvoid);
    func glTranslated(x: GLdouble, y: GLdouble, z: GLdouble);
    func glTranslatef(x: GLfloat, y: GLfloat, z: GLfloat);
    func glVertex2d(x: GLdouble, y: GLdouble);
    func glVertex2dv(v: const *GLdouble);
    func glVertex2f(x: GLfloat, y: GLfloat);
    func glVertex2fv(v: const *GLfloat);
    func glVertex2i(x: GLint, y: GLint);
    func glVertex2iv(v: const *GLint);
    func glVertex2s(x: GLshort, y: GLshort);
    func glVertex2sv(v: const *GLshort);
    func glVertex3d(x: GLdouble, y: GLdouble, z: GLdouble);
    func glVertex3dv(v: const *GLdouble);
    func glVertex3f(x: GLfloat, y: GLfloat, z: GLfloat);
    func glVertex3fv(v: const *GLfloat);
    func glVertex3i(x: GLint, y: GLint, z: GLint);
    func glVertex3iv(v: const *GLint);
    func glVertex3s(x: GLshort, y: GLshort, z: GLshort);
    func glVertex3sv(v: const *GLshort);
    func glVertex4d(x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble);
    func glVertex4dv(v: const *GLdouble);
    func glVertex4f(x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat);
    func glVertex4fv(v: const *GLfloat);
    func glVertex4i(x: GLint, y: GLint, z: GLint, w: GLint);
    func glVertex4iv(v: const *GLint);
    func glVertex4s(x: GLshort, y: GLshort, z: GLshort, w: GLshort);
    func glVertex4sv(v: const *GLshort);
    func glVertexPointer(size: GLint, type: GLenum, stride: GLsizei, pointer: const *GLvoid);
    func glViewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei);
}