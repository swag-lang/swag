<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <ClCompile Include="../src/ThreadManager.cpp">
      <Filter>Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Main.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/Ast.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="../src/SemanticJob.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleSemanticJob.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/pch.cpp" />
    <ClCompile Include="../src/ByteCode.cpp">
      <Filter>Backend\ByteCode</Filter>
    </ClCompile>
    <ClCompile Include="../src/CommandLineParser.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/Scope.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/AstNode.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="../src/CommandLine.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/Generic.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Attribute.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Backend.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/AstOutput.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVM.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Main.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Data.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Function.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVMFunctionBodyJob.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/LLVMSetup.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVMDbg.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/OsWin32.cpp">
      <Filter>Os</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeInfo.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeInfo_Specific.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeManager.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeManager_Cast.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeGen.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeGenStructJob.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Data.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Function.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64FunctionBodyJob.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Main.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64SaveObjJob.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeOptimizer.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Const.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_DeadCode.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_DeadStore.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Dup.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Imm.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Jumps.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_RetCopy.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Reduce.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeOptimizerJob.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Dbg.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLinker.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ModuleDepManager.cpp">
      <Filter>Wmf\DepManager</Filter>
    </ClCompile>
    <ClCompile Include="..\src\FetchModuleFileSystemJob.cpp">
      <Filter>Wmf\DepManager</Filter>
    </ClCompile>
    <ClCompile Include="..\src\RaceCondition.cpp">
      <Filter>Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_Symbol.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_StringLiteral.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_NumberLiteral.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/Tokenizer.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/LanguageSpec.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\FileJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/DependentJobs.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/EnumerateModuleJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleBuildJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/Utf8.cpp">
      <Filter>Core</Filter>
    </ClCompile>
    <ClCompile Include="../src/Concat.cpp">
      <Filter>Core</Filter>
    </ClCompile>
    <ClCompile Include="../src/Context.cpp">
      <Filter>Backend\Runtime</Filter>
    </ClCompile>
    <ClCompile Include="../src/CompilerItf.cpp">
      <Filter>Backend\Runtime</Filter>
    </ClCompile>
    <ClCompile Include="../src/Workspace.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Clean.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_New.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Script.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/Module.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/SourceFile.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/DataSegment.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Assert.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="../src/Diagnostic.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="../src/Log.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Help.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleManager.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeStack.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeRun_FFI.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeRunContext.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeRun.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeGenJob.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCode_Print_.cpp">
      <Filter>Backend\ByteCode</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeRun_Math.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeRun_SelectIf.cpp">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Build.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Module_Run.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\LoadSourceFileJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="..\src\AstNode_Specific.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Module_CompilerMsg.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\PrepCompilerMsgJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ErrorIds.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Call.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Call.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_DupBlocks.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\CallConv.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="..\src\X64Gen.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Emit.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Report.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="../src/Allocator.cpp">
      <Filter>Core</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ErrorContext.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Help.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Eval.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Break.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Value.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Print.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Info.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Trace.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Frame.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Sanity.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Swap.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Naming.cpp">
      <Filter>Report</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleExportJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleGenOutputJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleOutputJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModulePrepOutputJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleRunJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleSaveExportJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_Identifier.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SaveGenJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/Job.cpp">
      <Filter>Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\JobGroup.cpp">
      <Filter>Threading</Filter>
    </ClCompile>
    <ClCompile Include="../src/JobThread.cpp">
      <Filter>Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Statistics.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_Comment.cpp">
      <Filter>Syntax\Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/SyntaxJob.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Ast_New.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Ast_Gen.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\init.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\options.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\os.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\page.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\random.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\segment.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\segment-cache.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\alloc.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\alloc-aligned.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\alloc-override-osx.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\alloc-posix.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\arena.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\bitmap.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\heap.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\alloc-override.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\page-queue.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\mimalloc\stats.c">
      <Filter>Extern\mimalloc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Symbol.cpp">
      <Filter>Semantic\Symbol</Filter>
    </ClCompile>
    <ClCompile Include="../src/SymTable.cpp">
      <Filter>Semantic\Symbol</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SymTableHash.cpp">
      <Filter>Semantic\Symbol</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Profiler.cpp">
      <Filter>Backend\ByteCode\Profiler</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Var.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Attribute.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Block.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Compiler.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Declaration.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Enum.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Expression.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Function.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Identifier.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Struct.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Parser_Type.cpp">
      <Filter>Syntax\Parser</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Emit.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ModuleGenDocJob.cpp">
      <Filter>Jobs</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_ReduceX2.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ComputedValue.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxColor.cpp">
      <Filter>Syntax</Filter>
    </ClCompile>
    <ClCompile Include="..\src\GenDoc.cpp">
      <Filter>GenDoc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\GenDoc_Api.cpp">
      <Filter>GenDoc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\GenDoc_Examples.cpp">
      <Filter>GenDoc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\GenDoc_Pages.cpp">
      <Filter>GenDoc</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Param.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Err.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Loop.cpp">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Display.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeDebugger_Set.cpp">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ScopeSwag.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Access.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_AffectExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Attribute.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_BinaryExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Block.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Collect.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_CompareExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Compiler.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Declaration.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Enum.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Error.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Expression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Function.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Identifier.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Intrinsic.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Literal.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Op.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Ref.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Struct.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Type.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_UnaryExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Var.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Warn.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Semantic_Wait.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticContext.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeManager_Concrete.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeManager_Error.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeManager_Promote.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeManager_Try.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\TypeMatch.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Tags.cpp">
      <Filter>Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Ref.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Safety.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Struct.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_UnaryOp.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Var.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_AffectOp.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_BinaryOp.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Block.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Cast.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_CompareOp.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Err.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Expression.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Function.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Identifier.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Property.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenContext.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGen_Registers.cpp">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="../src/ThreadManager.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/CommandLine.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/Ast.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="../src/AstNode.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="../src/SemanticJob.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleSemanticJob.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/pch.h" />
    <ClInclude Include="../src/Scope.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCode.h">
      <Filter>Backend\ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/CommandLineParser.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOp.h">
      <Filter>Backend\ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOpList.h">
      <Filter>Backend\ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/Version.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/Attribute.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/Backend.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/AstFlags.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="../src/Generic.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVM.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVMFunctionBodyJob.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/LLVMSetup.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVMDbg.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\TypeGenStructJob.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeInfo.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeManager.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="..\src\TypeGen.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64FunctionBodyJob.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendLLVM_Macros.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendX64_Macros.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64SaveObjJob.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptimizer.h">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptimizerJob.h">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptContext.h">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLinker.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ModuleDepManager.h">
      <Filter>Wmf\DepManager</Filter>
    </ClInclude>
    <ClInclude Include="..\src\FetchModuleFileSystemJob.h">
      <Filter>Wmf\DepManager</Filter>
    </ClInclude>
    <ClInclude Include="..\src\RaceCondition.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/Tokenizer.h">
      <Filter>Syntax\Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="../src/TokenIds.h">
      <Filter>Syntax\Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="../src/LanguageSpec.h">
      <Filter>Syntax\Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="..\src\FileJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/DependentJobs.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/EnumerateModuleJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleBuildJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/Utf8.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/VectorNative.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Timer.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Concat.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Runtime.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/Context.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/CompilerItf.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/Workspace.h">
      <Filter>Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/Module.h">
      <Filter>Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/SourceFile.h">
      <Filter>Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/Scoped.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Math.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\LLVMInc.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendParameters.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/DataSegment.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/Assert.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/Diagnostic.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/Log.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/Os.h">
      <Filter>Os</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ErrorIds.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleManager.h">
      <Filter>Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeStack.h">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeRunContext.h">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeRun.h">
      <Filter>Backend\ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeGenJob.h">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Mutex.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="..\src\LoadSourceFileJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="..\src\LangHashTable.h">
      <Filter>Syntax\Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="..\src\PrepCompilerMsgJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="..\src\AstOutput.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="..\src\MapRegTo.h">
      <Filter>Backend\ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Crc32.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ByteCodeInstruction.h">
      <Filter>Backend\ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="..\src\CallConv.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="..\src\X64Gen.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Report.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/Allocator.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ErrorContext.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ErrorList.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ByteCodeDebugger.h">
      <Filter>Backend\ByteCode\Debugger</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Naming.h">
      <Filter>Report</Filter>
    </ClInclude>
    <ClInclude Include="../src/Register.h">
      <Filter>Backend\ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Vector.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendFunctionBodyJobBase.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleExportJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleGenOutputJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleOutputJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModulePrepOutputJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleRunJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleSaveExportJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ComputedValue.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="..\src\SaveGenJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/Job.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="..\src\JobGroup.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/JobThread.h">
      <Filter>Threading</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Statistics.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/SyntaxJob.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Map.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Set.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Path.h">
      <Filter>Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-atomic.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-internal.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-new-delete.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-override.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-track.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\mimalloc-types.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\mimalloc\bitmap.h">
      <Filter>Extern\mimalloc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Symbol.h">
      <Filter>Semantic\Symbol</Filter>
    </ClInclude>
    <ClInclude Include="../src/SymTable.h">
      <Filter>Semantic\Symbol</Filter>
    </ClInclude>
    <ClInclude Include="..\src\SymTableHash.h">
      <Filter>Semantic\Symbol</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Profiler.h">
      <Filter>Backend\ByteCode\Profiler</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Parser.h">
      <Filter>Syntax\Parser</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ModuleGenDocJob.h">
      <Filter>Jobs</Filter>
    </ClInclude>
    <ClInclude Include="..\src\SyntaxColor.h">
      <Filter>Syntax</Filter>
    </ClInclude>
    <ClInclude Include="..\src\GenDoc.h">
      <Filter>GenDoc</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ScopeSwag.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Semantic.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="..\src\SemanticContext.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="..\src\TypeMatch.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ByteCodeGen.h">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ByteCodeGenContext.h">
      <Filter>Backend\ByteCode\Gen</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <Filter Include="Main">
      <UniqueIdentifier>{ec1ce4ee-f636-49c8-b14c-ba31cc1e1e91}</UniqueIdentifier>
    </Filter>
    <Filter Include="Semantic">
      <UniqueIdentifier>{5f62a50f-54d2-4ca7-be2f-7fba0994f861}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend">
      <UniqueIdentifier>{7fe556f7-f7f6-4fd4-b6f3-8b9e91dc51de}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\LLVM">
      <UniqueIdentifier>{c60a90b2-c79e-4690-938f-f6f4ab31461c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\X64">
      <UniqueIdentifier>{8a2a36d9-44c6-423d-8d02-ff5e04508f18}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode">
      <UniqueIdentifier>{5facb5bb-a2a0-45dd-aa6c-20852346b20a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode\Optimize">
      <UniqueIdentifier>{78754e10-947b-4b7b-bdfa-8eb19470f27d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode\Run">
      <UniqueIdentifier>{6addfd73-dbad-40f7-b7cb-5bbaa1cde9cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode\Gen">
      <UniqueIdentifier>{6af8e653-2a30-49e1-a10c-e6fd51ae7787}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode\Debugger">
      <UniqueIdentifier>{5d64ad0d-846a-4092-a35f-d23655afc3d6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Core">
      <UniqueIdentifier>{b65399cb-c115-4690-a5a5-21fe88ba8747}</UniqueIdentifier>
    </Filter>
    <Filter Include="Jobs">
      <UniqueIdentifier>{1bc332e2-b846-4939-bd77-130255d62a18}</UniqueIdentifier>
    </Filter>
    <Filter Include="Os">
      <UniqueIdentifier>{31fa90c8-f664-40b5-8bc5-d3606d6e2ffa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Report">
      <UniqueIdentifier>{70f7c54c-e50c-4523-895c-c808e6cb62b9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Threading">
      <UniqueIdentifier>{e8e10c82-0958-4dec-b1a7-7925f336a87c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Wmf">
      <UniqueIdentifier>{68a1bb4f-01bc-4d77-9593-917fdde3fe6d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Syntax">
      <UniqueIdentifier>{2ec0b045-bdd6-4a7a-a120-2c91b7025073}</UniqueIdentifier>
    </Filter>
    <Filter Include="Syntax\Tokenizer">
      <UniqueIdentifier>{6e271899-858e-4671-8537-9246b9a196ab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Semantic\Type">
      <UniqueIdentifier>{5d3754c6-5cd6-4c17-beb5-5141ff0d58e8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\Runtime">
      <UniqueIdentifier>{512aad17-43cb-4e62-b39d-3200f0ee9ced}</UniqueIdentifier>
    </Filter>
    <Filter Include="Extern">
      <UniqueIdentifier>{c9693071-61f7-47a0-91a4-00e7adb04d7a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Extern\mimalloc">
      <UniqueIdentifier>{49f77145-13a7-4961-8ecf-c11c327ef4a4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Semantic\Symbol">
      <UniqueIdentifier>{a6739d74-e799-42d8-8050-176675ae95f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\ByteCode\Profiler">
      <UniqueIdentifier>{bafae39e-037a-4deb-9b09-3c970c4ff63d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Syntax\Parser">
      <UniqueIdentifier>{5bad38d1-b614-4137-9547-ef563589813e}</UniqueIdentifier>
    </Filter>
    <Filter Include="GenDoc">
      <UniqueIdentifier>{d2110678-479a-4478-8f76-2eb5853fe96c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Wmf\DepManager">
      <UniqueIdentifier>{0953cd61-89b7-4c72-bc1f-72bf1d4c1458}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <Natvis Include="swag.natvis" />
  </ItemGroup>
</Project>