<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <ClCompile Include="../src/JobThread.cpp">
      <Filter>Main\Threading</Filter>
    </ClCompile>
    <ClCompile Include="../src/ThreadManager.cpp">
      <Filter>Main\Threading</Filter>
    </ClCompile>
    <ClCompile Include="../src/Job.cpp">
      <Filter>Main\Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Main.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/SyntaxJob.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="../src/Ast.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="../src/SemanticJob.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleSemanticJob.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/SymTable.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/pch.cpp" />
    <ClCompile Include="../src/ModuleOutputJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCode.cpp">
      <Filter>ByteCode</Filter>
    </ClCompile>
    <ClCompile Include="../src/CommandLineParser.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/Scope.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Declaration.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Type.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_UnaryExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Var.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Identifier.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Enum.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Compiler.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_BinaryExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Attribute.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Identifier.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Function.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Expression.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Enum.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Declaration.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Compiler.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Attribute.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Type.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Var.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Expression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/AstNode.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="../src/CommandLine.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Block.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Block.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_AffectExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/OutputFile.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SyntaxJob_Struct.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Struct.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Ref.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Generic.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_CompareExpression.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Op.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/SwagScope.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Attribute.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Backend.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/AstOutput.cpp">
      <Filter>Lexer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Function.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVM.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Main.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Data.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendLLVM_Function.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVMFunctionBodyJob.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Backend_Export.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendNative_.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/LLVMSetup.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLLVMDbg.cpp">
      <Filter>Backend\LLVM</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendSetupWin32.cpp">
      <Filter>Main\Os</Filter>
    </ClCompile>
    <ClCompile Include="../src/OsWin32.cpp">
      <Filter>Main\Os</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleRunJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/ffi/closures.c">
      <Filter>ByteCode\FFI</Filter>
    </ClCompile>
    <ClCompile Include="../src/ffi/ffi.c">
      <Filter>ByteCode\FFI</Filter>
    </ClCompile>
    <ClCompile Include="../src/ffi/ffi64.c">
      <Filter>ByteCode\FFI</Filter>
    </ClCompile>
    <ClCompile Include="../src/ffi/prep_cif.c">
      <Filter>ByteCode\FFI</Filter>
    </ClCompile>
    <ClCompile Include="../src/ffi/types.c">
      <Filter>ByteCode\FFI</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeInfo.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeInfoMatch_.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeInfoSpecific_.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeManager.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeManagerCast_.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeTable.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/TypeTableJob.cpp">
      <Filter>Semantic\Type</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Data.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Function.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64FunctionBodyJob.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Main.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleExportJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleGenOutputJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModulePrepOutputJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Intrinsic.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleSaveExportJob.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendX64SaveObjJob.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeOptimizer.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Const.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_DeadCode.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_DeadStore.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Dup.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_EmptyFct.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Imm.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Jumps.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\SemanticJob_Collect.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_RetCopy.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Reduce.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeOptimizerJob.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\BackendX64_Dbg.cpp">
      <Filter>Backend\X64</Filter>
    </ClCompile>
    <ClCompile Include="../src/BackendLinker.cpp">
      <Filter>Backend</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ModuleCfgManager.cpp">
      <Filter>Main\CfgManager</Filter>
    </ClCompile>
    <ClCompile Include="..\src\FetchModuleJobFileSystem.cpp">
      <Filter>Main\CfgManager</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Loop.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Err.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Swap.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\RaceCondition.cpp">
      <Filter>Main\Threading</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeOptimizer_Np.cpp">
      <Filter>ByteCode\Optimize</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_Symbol.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_StringLiteral.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_NumberLiteral.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Tokenizer_Identifier.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/Tokenizer.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/LanguageSpec.cpp">
      <Filter>Tokenizer</Filter>
    </ClCompile>
    <ClCompile Include="../src/CopyFileJob.cpp">
      <Filter>Main\Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/DependentJobs.cpp">
      <Filter>Main\Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/EnumerateModuleJob.cpp">
      <Filter>Main\Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/LoadFileJob.cpp">
      <Filter>Main\Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleBuildJob.cpp">
      <Filter>Main\Jobs</Filter>
    </ClCompile>
    <ClCompile Include="../src/Utf8.cpp">
      <Filter>Main\Core</Filter>
    </ClCompile>
    <ClCompile Include="../src/Concat.cpp">
      <Filter>Main\Core</Filter>
    </ClCompile>
    <ClCompile Include="../src/Context.cpp">
      <Filter>Backend\Runtime</Filter>
    </ClCompile>
    <ClCompile Include="../src/CompilerItf.cpp">
      <Filter>Backend\Runtime</Filter>
    </ClCompile>
    <ClCompile Include="../src/Workspace.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Clean.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_New.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Workspace_Script.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/Module.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/File.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/SourceFile.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/DataSegment.cpp">
      <Filter>Semantic</Filter>
    </ClCompile>
    <ClCompile Include="../src/Allocator.cpp">
      <Filter>Main\Global</Filter>
    </ClCompile>
    <ClCompile Include="../src/Assert.cpp">
      <Filter>Main\Global</Filter>
    </ClCompile>
    <ClCompile Include="../src/Diagnostic.cpp">
      <Filter>Main\Global</Filter>
    </ClCompile>
    <ClCompile Include="../src/Log.cpp">
      <Filter>Main\Global</Filter>
    </ClCompile>
    <ClCompile Include="../src/Stats.cpp">
      <Filter>Main\Global</Filter>
    </ClCompile>
    <ClCompile Include="..\src\Help.cpp">
      <Filter>Main</Filter>
    </ClCompile>
    <ClCompile Include="../src/ModuleManager.cpp">
      <Filter>Main\Wmf</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeStack.cpp">
      <Filter>ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeRun_FFI.cpp">
      <Filter>ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeRunContext.cpp">
      <Filter>ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeRun_Dbg.cpp">
      <Filter>ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeRun.cpp">
      <Filter>ByteCode\Run</Filter>
    </ClCompile>
    <ClCompile Include="../src/ByteCodeGenJob.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_AffectOp.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_BinaryOp.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Block.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Cast.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_CompareOp.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Expression.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Function.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Identifier.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Property.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Ref.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Safety.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Struct.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_UnaryOp.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCodeGenJob_Var.cpp">
      <Filter>ByteCode\Gen</Filter>
    </ClCompile>
    <ClCompile Include="..\src\ByteCode_Print_.cpp">
      <Filter>ByteCode</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="../src/JobThread.h">
      <Filter>Main\Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/ThreadManager.h">
      <Filter>Main\Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/CommandLine.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/Job.h">
      <Filter>Main\Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/SyntaxJob.h">
      <Filter>Lexer</Filter>
    </ClInclude>
    <ClInclude Include="../src/Ast.h">
      <Filter>Lexer</Filter>
    </ClInclude>
    <ClInclude Include="../src/AstNode.h">
      <Filter>Lexer</Filter>
    </ClInclude>
    <ClInclude Include="../src/SemanticJob.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleSemanticJob.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/SymTable.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/pch.h" />
    <ClInclude Include="../src/Scope.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleOutputJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCode.h">
      <Filter>ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/CommandLineParser.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOp.h">
      <Filter>ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOpList.h">
      <Filter>ByteCode</Filter>
    </ClInclude>
    <ClInclude Include="../src/Version.h">
      <Filter>Main</Filter>
    </ClInclude>
    <ClInclude Include="../src/Attribute.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/Backend.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/AstFlags.h">
      <Filter>Lexer</Filter>
    </ClInclude>
    <ClInclude Include="../src/OutputFile.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/Generic.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/SwagScope.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVM.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVMFunctionBodyJob.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/LLVMSetup.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLLVMDbg.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendFunctionBodyJobBase.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleRunJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/ComWin32.hpp">
      <Filter>Main\Os</Filter>
    </ClInclude>
    <ClInclude Include="../src/ffi/ffi.h">
      <Filter>ByteCode\FFI</Filter>
    </ClInclude>
    <ClInclude Include="../src/ffi/ffi_common.h">
      <Filter>ByteCode\FFI</Filter>
    </ClInclude>
    <ClInclude Include="../src/ffi/fficonfig.h">
      <Filter>ByteCode\FFI</Filter>
    </ClInclude>
    <ClInclude Include="../src/ffi/ffitarget.h">
      <Filter>ByteCode\FFI</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeTableJob.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeInfo.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeManager.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/TypeTable.h">
      <Filter>Semantic\Type</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64FunctionBodyJob.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64Inst.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleExportJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleGenOutputJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModulePrepOutputJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendLLVMFunctionMacros.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendX64FunctionMacros.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleSaveExportJob.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendX64SaveObjJob.h">
      <Filter>Backend\X64</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptimizer.h">
      <Filter>ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptimizerJob.h">
      <Filter>ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeOptContext.h">
      <Filter>ByteCode\Optimize</Filter>
    </ClInclude>
    <ClInclude Include="../src/BackendLinker.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ModuleCfgManager.h">
      <Filter>Main\CfgManager</Filter>
    </ClInclude>
    <ClInclude Include="..\src\FetchModuleJobFileSystem.h">
      <Filter>Main\CfgManager</Filter>
    </ClInclude>
    <ClInclude Include="..\src\RaceCondition.h">
      <Filter>Main\Threading</Filter>
    </ClInclude>
    <ClInclude Include="../src/Tokenizer.h">
      <Filter>Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="../src/TokenIds.h">
      <Filter>Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="../src/LanguageSpec.h">
      <Filter>Tokenizer</Filter>
    </ClInclude>
    <ClInclude Include="../src/CopyFileJob.h">
      <Filter>Main\Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/DependentJobs.h">
      <Filter>Main\Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/EnumerateModuleJob.h">
      <Filter>Main\Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/LoadFileJob.h">
      <Filter>Main\Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleBuildJob.h">
      <Filter>Main\Jobs</Filter>
    </ClInclude>
    <ClInclude Include="../src/Utf8.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/VectorNative.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Timer.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\HashTable.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Concat.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Runtime.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/Context.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/CompilerItf.h">
      <Filter>Backend\Runtime</Filter>
    </ClInclude>
    <ClInclude Include="../src/Workspace.h">
      <Filter>Main\Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/Module.h">
      <Filter>Main\Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/File.h">
      <Filter>Main\Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/SourceFile.h">
      <Filter>Main\Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/Register.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/RegisterList.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="../src/Scoped.h">
      <Filter>Lexer</Filter>
    </ClInclude>
    <ClInclude Include="..\src\Math.h">
      <Filter>Main\Core</Filter>
    </ClInclude>
    <ClInclude Include="..\src\LLVMInc.h">
      <Filter>Backend\LLVM</Filter>
    </ClInclude>
    <ClInclude Include="..\src\BackendParameters.h">
      <Filter>Backend</Filter>
    </ClInclude>
    <ClInclude Include="../src/DataSegment.h">
      <Filter>Semantic</Filter>
    </ClInclude>
    <ClInclude Include="../src/Allocator.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/Assert.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/Diagnostic.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/Log.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/Stats.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/Os.h">
      <Filter>Main\Os</Filter>
    </ClInclude>
    <ClInclude Include="..\src\ErrorIds.h">
      <Filter>Main\Global</Filter>
    </ClInclude>
    <ClInclude Include="../src/ModuleManager.h">
      <Filter>Main\Wmf</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeStack.h">
      <Filter>ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeRunContext.h">
      <Filter>ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeRun.h">
      <Filter>ByteCode\Run</Filter>
    </ClInclude>
    <ClInclude Include="../src/ByteCodeGenJob.h">
      <Filter>ByteCode\Gen</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <Filter Include="Main">
      <UniqueIdentifier>{ec1ce4ee-f636-49c8-b14c-ba31cc1e1e91}</UniqueIdentifier>
    </Filter>
    <Filter Include="Lexer">
      <UniqueIdentifier>{2ec0b045-bdd6-4a7a-a120-2c91b7025073}</UniqueIdentifier>
    </Filter>
    <Filter Include="Semantic">
      <UniqueIdentifier>{5f62a50f-54d2-4ca7-be2f-7fba0994f861}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend">
      <UniqueIdentifier>{7fe556f7-f7f6-4fd4-b6f3-8b9e91dc51de}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\LLVM">
      <UniqueIdentifier>{c60a90b2-c79e-4690-938f-f6f4ab31461c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\X64">
      <UniqueIdentifier>{8a2a36d9-44c6-423d-8d02-ff5e04508f18}</UniqueIdentifier>
    </Filter>
    <Filter Include="ByteCode">
      <UniqueIdentifier>{5facb5bb-a2a0-45dd-aa6c-20852346b20a}</UniqueIdentifier>
    </Filter>
    <Filter Include="ByteCode\Optimize">
      <UniqueIdentifier>{78754e10-947b-4b7b-bdfa-8eb19470f27d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Semantic\Type">
      <UniqueIdentifier>{5d3754c6-5cd6-4c17-beb5-5141ff0d58e8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Threading">
      <UniqueIdentifier>{e8e10c82-0958-4dec-b1a7-7925f336a87c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\CfgManager">
      <UniqueIdentifier>{0953cd61-89b7-4c72-bc1f-72bf1d4c1458}</UniqueIdentifier>
    </Filter>
    <Filter Include="ByteCode\FFI">
      <UniqueIdentifier>{4e25712b-01db-43ce-b213-34d28464abfd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Tokenizer">
      <UniqueIdentifier>{6e271899-858e-4671-8537-9246b9a196ab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Jobs">
      <UniqueIdentifier>{1bc332e2-b846-4939-bd77-130255d62a18}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Core">
      <UniqueIdentifier>{b65399cb-c115-4690-a5a5-21fe88ba8747}</UniqueIdentifier>
    </Filter>
    <Filter Include="Backend\Runtime">
      <UniqueIdentifier>{512aad17-43cb-4e62-b39d-3200f0ee9ced}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Wmf">
      <UniqueIdentifier>{68a1bb4f-01bc-4d77-9593-917fdde3fe6d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Global">
      <UniqueIdentifier>{70f7c54c-e50c-4523-895c-c808e6cb62b9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Main\Os">
      <UniqueIdentifier>{31fa90c8-f664-40b5-8bc5-d3606d6e2ffa}</UniqueIdentifier>
    </Filter>
    <Filter Include="ByteCode\Run">
      <UniqueIdentifier>{6addfd73-dbad-40f7-b7cb-5bbaa1cde9cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="ByteCode\Gen">
      <UniqueIdentifier>{6af8e653-2a30-49e1-a10c-e6fd51ae7787}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="../src/ffi/win64.S">
      <Filter>ByteCode\FFI</Filter>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <Natvis Include="swag.natvis" />
  </ItemGroup>
</Project>