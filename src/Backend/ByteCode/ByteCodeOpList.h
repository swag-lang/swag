BYTECODE_OP(Nop, 0, "nop")
BYTECODE_OP(PushBP, 0, "")
BYTECODE_OP(PopBP, 0, "")
BYTECODE_OP(PushRR, 0, "push my_result")
BYTECODE_OP(PopRR, 0, "pop my_result")
BYTECODE_OP(DebugNop, 0, "nop")
BYTECODE_OP(Unreachable, 0, "unreachable")
BYTECODE_OP(InternalUnreachable, 0, "unreachable")

BYTECODE_OP(IncSPPostCallCond, OPF_READ_A | OPF_READ_VAL32_B, "if _ra_ popstack _rbu32_")
BYTECODE_OP(IncSPPostCall, OPF_READ_VAL32_A, "popstack _rau32_")
BYTECODE_OP(DecSPBP, 0, "stacksize")
BYTECODE_OP(Ret, 0, "return")

BYTECODE_OP(CloneString, OPF_READ_A | OPF_READ_B | OPF_WRITE_A, "")

BYTECODE_OP(PushRVParam, OPF_PUSH_PARAM | OPF_READ_A | OPF_READ_VAL64_B, "")
BYTECODE_OP(PushRAParamCond, OPF_PUSH_PARAM | OPF_READ_A | OPF_READ_B, "if _ra_ pushparam _rb_")
BYTECODE_OP(PushRAParam, OPF_PUSH_PARAM | OPF_READ_A, "pushparam _ra_")
BYTECODE_OP(PushRAParam2, OPF_PUSH_PARAM | OPF_READ_A | OPF_READ_B, "pushparam _ra_, _rb_")
BYTECODE_OP(PushRAParam3, OPF_PUSH_PARAM | OPF_READ_A | OPF_READ_B | OPF_READ_C, "pushparam _ra_, _rb_, _rc_")
BYTECODE_OP(PushRAParam4, OPF_PUSH_PARAM | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_READ_D, "pushparam _ra_, _rb_, _rc_, _rd_")

BYTECODE_OP(LocalCall, OPF_LOCAL_CALL | OPF_READ_VAL64_A, "call _rax64_")
BYTECODE_OP(LocalCallPop, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_VAL32_C, "call _rax64_; popstack _rcu32_")
BYTECODE_OP(LocalCallPop16, OPF_LOCAL_CALL | OPF_READ_VAL64_A, "call _rax64_; popstack 16")
BYTECODE_OP(LocalCallPop48, OPF_LOCAL_CALL | OPF_READ_VAL64_A, "call _rax64_; popstack 48")
BYTECODE_OP(LocalCallPopParam, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_VAL32_C | OPF_READ_D, "pushparam _rd_; call _rax64_; popstack _rcu32_")
BYTECODE_OP(LocalCallPop0Param2, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 0")
BYTECODE_OP(LocalCallPop16Param2, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 16")
BYTECODE_OP(LocalCallPop48Param2, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 48")
BYTECODE_OP(LocalCallPopRC, OPF_LOCAL_CALL | OPF_READ_VAL64_A | OPF_READ_VAL32_C | OPF_WRITE_D, "_rd_ = call _rax64_; popstack _rcu32_")

BYTECODE_OP(LambdaCall, OPF_LAMBDA_CALL | OPF_READ_A | OPF_READ_VAL64_B, "call [_ra_]")
BYTECODE_OP(LambdaCallPop, OPF_LAMBDA_CALL | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL32_C, "call [_ra_]; popstack _rcu32_")
BYTECODE_OP(LambdaCallPopParam, OPF_LAMBDA_CALL | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL32_C | OPF_READ_D, "pushparam _rd_; call [_ra_]; popstack _rcu32_")

BYTECODE_OP(ForeignCall, OPF_FOREIGN_CALL | OPF_READ_VAL64_A, "call _rax64_")
BYTECODE_OP(ForeignCallPop, OPF_FOREIGN_CALL | OPF_READ_VAL64_A | OPF_READ_VAL32_C, "call _rax64_; popstack _rcu32_")
BYTECODE_OP(ForeignCallPop16, OPF_FOREIGN_CALL | OPF_READ_VAL64_A, "call _rax64_; popstack 16")
BYTECODE_OP(ForeignCallPop48, OPF_FOREIGN_CALL | OPF_READ_VAL64_A, "call _rax64_; popstack 48")
BYTECODE_OP(ForeignCallPopParam, OPF_FOREIGN_CALL | OPF_READ_VAL64_A | OPF_READ_VAL32_C | OPF_READ_D, "pushparam _rd_; call _rax64_; popstack _rcu32_")
BYTECODE_OP(ForeignCallPop0Param2, OPF_FOREIGN_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 0")
BYTECODE_OP(ForeignCallPop16Param2, OPF_FOREIGN_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 16")
BYTECODE_OP(ForeignCallPop48Param2, OPF_FOREIGN_CALL | OPF_READ_VAL64_A | OPF_READ_C | OPF_READ_D, "pushparam _rc_, _rd_; call _rax64_; popstack 48")

BYTECODE_OP(MakeLambda, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = ")

BYTECODE_OP(IntrinsicItfTableOf, OPF_READ_A | OPF_READ_B | OPF_WRITE_C, "_rc_ = @itftableof(_ra_, _rb_)")
BYTECODE_OP(IntrinsicCompilerError, OPF_READ_A | OPF_READ_B | OPF_READ_C, "@compilererror(_ra_, _rb_, _rc_)")
BYTECODE_OP(IntrinsicCompilerWarning, OPF_READ_A | OPF_READ_B | OPF_READ_C, "@compilerwarning(_ra_, _rb_, _rc_)")
BYTECODE_OP(IntrinsicPanic, OPF_READ_A | OPF_READ_B | OPF_READ_C, "@panic(_ra_, _rb_, _rc_)")
BYTECODE_OP(IntrinsicTypeCmp, OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D, "_rd_ = @typecmp(_ra_, _rb_, _rc_)")
BYTECODE_OP(IntrinsicIs, OPF_READ_A | OPF_READ_B | OPF_WRITE_C, "_rc_ = @is(_ra_, _rb_)")
BYTECODE_OP(IntrinsicAs, OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D, "_rd_ = @as(_ra_, _rb_, _rc_)")
BYTECODE_OP(IntrinsicStringCmp, OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_READ_D | OPF_WRITE_D, "_rd_ = @stringcmp(_ra_, _rb_, _rc_, _rd_)")
BYTECODE_OP(IntrinsicDbgAlloc, OPF_WRITE_A, "_ra_ = @dbgalloc()")
BYTECODE_OP(IntrinsicSysAlloc, OPF_WRITE_A, "_ra_ = @sysalloc()")
BYTECODE_OP(IntrinsicRtFlags, OPF_WRITE_A, "_ra_ = @rtflags()")

BYTECODE_OP(IntrinsicAlloc, OPF_WRITE_A | OPF_READ_B, "_ra_ = @alloc(_rb_)")
BYTECODE_OP(IntrinsicRealloc, OPF_WRITE_A | OPF_READ_B | OPF_READ_C, "_ra_ = @realloc(_rb_, _rc_)")
BYTECODE_OP(IntrinsicFree, OPF_READ_A, "@free(_ra_)")
BYTECODE_OP(IntrinsicGetContext, OPF_WRITE_A, "_ra_ = @getcontext()")
BYTECODE_OP(IntrinsicSetContext, OPF_READ_A, "@setcontext(_ra_)")
BYTECODE_OP(IntrinsicGetProcessInfos, OPF_WRITE_A, "_ra_ = @pinfos()")
BYTECODE_OP(IntrinsicCVaStart, OPF_READ_A, "@cvastart(_ra_)")
BYTECODE_OP(IntrinsicCVaEnd, OPF_READ_A, "@cvaend(_ra_)")
BYTECODE_OP(IntrinsicCVaArg, OPF_READ_A | OPF_WRITE_B | OPF_READ_VAL64_C, "_rb_ = @cvaarg(_ra_)")
BYTECODE_OP(IntrinsicArguments, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = @args()")
BYTECODE_OP(IntrinsicModules, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = @modules()")
BYTECODE_OP(IntrinsicGvtd, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = @gvtd()")
BYTECODE_OP(IntrinsicCompiler, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = @compiler()")
BYTECODE_OP(IntrinsicIsByteCode, OPF_WRITE_A, "_ra_ = @isbytecode()")
BYTECODE_OP(IntrinsicMakeCallback, OPF_WRITE_A | OPF_READ_A, "_ra_ = @mkcallback(_ra_)")
BYTECODE_OP(IntrinsicBcBreakpoint, 0, "@breakpoint()")

BYTECODE_OP(InternalInitStackTrace, OPF_READ_A, "init_stack_trace(_ra_)")
BYTECODE_OP(InternalStackTrace, OPF_READ_A, "stack_trace(_ra_)")
BYTECODE_OP(InternalStackTraceConst, OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL32_B, "stack_trace_const(_ra_, _rbu32_)")
BYTECODE_OP(InternalPanic, OPF_READ_VAL64_D, "panic()")
BYTECODE_OP(IntrinsicGetErr, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = @err()")
BYTECODE_OP(InternalSetErr, OPF_READ_A | OPF_READ_B, "push my_result; set_error(_ra_, _rb_)")
BYTECODE_OP(InternalPushErr, 0, "push_error()")
BYTECODE_OP(InternalPopErr, 0, "pop_error()")
BYTECODE_OP(InternalCatchErr, 0, "catch_error()")
BYTECODE_OP(InternalHasErr, OPF_WRITE_A | OPF_READ_B, "_ra_ = has_error(_rb_)")
BYTECODE_OP(InternalGetTlsPtr, OPF_WRITE_A, "_ra_ = get_tls()")
BYTECODE_OP(InternalFailedAssume, OPF_READ_A, "failed_assume(_ra_)")
BYTECODE_OP(JumpIfError, OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B, "if error(_ra_) jump")
BYTECODE_OP(JumpIfNoError, OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B, "if !error(_ra_) jump")

BYTECODE_OP(IntrinsicAtomicAddS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] += _rbs8_")
BYTECODE_OP(IntrinsicAtomicAddS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs16_ = [_ra_]; [_ra_] += _rbs16_")
BYTECODE_OP(IntrinsicAtomicAddS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs32_ = [_ra_]; [_ra_] += _rbs32_")
BYTECODE_OP(IntrinsicAtomicAddS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs64_ = [_ra_]; [_ra_] += _rbs64_")

BYTECODE_OP(IntrinsicAtomicAndS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] &= _rbs8_")
BYTECODE_OP(IntrinsicAtomicAndS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs16_ = [_ra_]; [_ra_] &= _rbs16_")
BYTECODE_OP(IntrinsicAtomicAndS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs32_ = [_ra_]; [_ra_] &= _rbs32_")
BYTECODE_OP(IntrinsicAtomicAndS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs64_ = [_ra_]; [_ra_] &= _rbs64_")

BYTECODE_OP(IntrinsicAtomicOrS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] |= _rbs8_")
BYTECODE_OP(IntrinsicAtomicOrS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs16_ = [_ra_]; [_ra_] |= _rbs16_")
BYTECODE_OP(IntrinsicAtomicOrS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs32_ = [_ra_]; [_ra_] |= _rbs32_")
BYTECODE_OP(IntrinsicAtomicOrS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs64_ = [_ra_]; [_ra_] |= _rbs64_")

BYTECODE_OP(IntrinsicAtomicXorS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] ^= _rbs8_")
BYTECODE_OP(IntrinsicAtomicXorS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs16_ = [_ra_]; [_ra_] ^= _rbs16_")
BYTECODE_OP(IntrinsicAtomicXorS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs32_ = [_ra_]; [_ra_] ^= _rbs32_")
BYTECODE_OP(IntrinsicAtomicXorS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs64_ = [_ra_]; [_ra_] ^= _rbs64_")

BYTECODE_OP(IntrinsicAtomicXchgS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] = _rbs8_")
BYTECODE_OP(IntrinsicAtomicXchgS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] = _rbs8_")
BYTECODE_OP(IntrinsicAtomicXchgS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] = _rbs8_")
BYTECODE_OP(IntrinsicAtomicXchgS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_NOT_PURE, "_rcs8_ = [_ra_]; [_ra_] = _rbs8_")

BYTECODE_OP(IntrinsicAtomicCmpXchgS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D | OPF_NOT_PURE, "_rds8_ = [_ra_]; if [_ra_] == _rbs8_ [_ra_] = _rcs8_")
BYTECODE_OP(IntrinsicAtomicCmpXchgS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D | OPF_NOT_PURE, "_rds16_ = [_ra_]; if [_ra_] == _rbs16_ [_ra_] = _rcs16_")
BYTECODE_OP(IntrinsicAtomicCmpXchgS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D | OPF_NOT_PURE, "_rds32_ = [_ra_]; if [_ra_] == _rbs32_ [_ra_] = _rcs32_")
BYTECODE_OP(IntrinsicAtomicCmpXchgS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_WRITE_D | OPF_NOT_PURE, "_rds64_ = [_ra_]; if [_ra_] == _rbs64_ [_ra_] = _rcs64_")

BYTECODE_OP(JumpIfZero8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau8_ == 0 jump")
BYTECODE_OP(JumpIfZero16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau16_ == 0 jump")
BYTECODE_OP(JumpIfZero32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau32_ == 0 jump")
BYTECODE_OP(JumpIfZero64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau64_ == 0 jump")
BYTECODE_OP(JumpIfNotZero8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau8_ != 0 jump")
BYTECODE_OP(JumpIfNotZero16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau16_ != 0 jump")
BYTECODE_OP(JumpIfNotZero32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau32_ != 0 jump")
BYTECODE_OP(JumpIfNotZero64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau64_ != 0 jump")

BYTECODE_OP(JumpIfFalse, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if !_rau8_ jump")
BYTECODE_OP(JumpIfTrue, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_IMM_A, "if _rau8_ jump")
BYTECODE_OP(JumpIfRTFalse, OPF_JUMP | OPF_READ_VAL32_B, "if !last_call_result jump")
BYTECODE_OP(JumpIfRTTrue, OPF_JUMP | OPF_READ_VAL32_B, "if last_call_result jump")

BYTECODE_OP(JumpIfNotEqual8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ != _rcu8_ jump")
BYTECODE_OP(JumpIfNotEqual16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ != _rcu16_ jump")
BYTECODE_OP(JumpIfNotEqual32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ != _rcu32_ jump")
BYTECODE_OP(JumpIfNotEqual64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ != _rcu64_ jump")
BYTECODE_OP(JumpIfNotEqualF32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ != _rcu32_ jump")
BYTECODE_OP(JumpIfNotEqualF64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ != _rcu64_ jump")

BYTECODE_OP(JumpIfEqual8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ == _rcu8_ jump")
BYTECODE_OP(JumpIfEqual16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ == _rcu16_ jump")
BYTECODE_OP(JumpIfEqual32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ == _rcu32_ jump")
BYTECODE_OP(JumpIfEqual64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ == _rcu64_ jump")
BYTECODE_OP(JumpIfEqualF32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf32_ == _rcf32_ jump")
BYTECODE_OP(JumpIfEqualF64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf64_ == _rcf64_ jump")
BYTECODE_OP(IncJumpIfEqual64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if ++_rau64_ == _rcu64_ jump")

BYTECODE_OP(JumpIfStackEqual8, OPF_8 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] == _rcu32_ jump")
BYTECODE_OP(JumpIfStackNotEqual8, OPF_8 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] != _rcu32_ jump")
BYTECODE_OP(JumpIfStackEqual16, OPF_16 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] == _rcu32_ jump")
BYTECODE_OP(JumpIfStackNotEqual16, OPF_16 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] != _rcu32_ jump")
BYTECODE_OP(JumpIfStackEqual32, OPF_32 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] == _rcu32_ jump")
BYTECODE_OP(JumpIfStackNotEqual32, OPF_32 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] != _rcu32_ jump")
BYTECODE_OP(JumpIfStackEqual64, OPF_64 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] == _rcu64_ jump")
BYTECODE_OP(JumpIfStackNotEqual64, OPF_64 | OPF_JUMP | OPF_READ_VAL32_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if sp[_rau32_] != _rcu64_ jump")

BYTECODE_OP(JumpIfDeRefEqual8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] == _rcu8_ jump")
BYTECODE_OP(JumpIfDeRefNotEqual8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] != _rcu8_ jump")
BYTECODE_OP(JumpIfDeRefEqual16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] == _rcu16_ jump")
BYTECODE_OP(JumpIfDeRefNotEqual16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] != _rcu16_ jump")
BYTECODE_OP(JumpIfDeRefEqual32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] == _rcu32_ jump")
BYTECODE_OP(JumpIfDeRefNotEqual32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] != _rcu32_ jump")
BYTECODE_OP(JumpIfDeRefEqual64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] == _rcu64_ jump")
BYTECODE_OP(JumpIfDeRefNotEqual64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C | OPF_READ_VAL64_D, "if [_rau32_ + _rds64_] != _rcu64_ jump")

BYTECODE_OP(JumpIfLowerS8, OPF_8 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras8_ < _rcs8_ jump")
BYTECODE_OP(JumpIfLowerS16, OPF_16 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras16_ < _rcs16_ jump")
BYTECODE_OP(JumpIfLowerS32, OPF_32 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras32_ < _rcs32_ jump")
BYTECODE_OP(JumpIfLowerS64, OPF_64 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras64_ < _rcs64_ jump")
BYTECODE_OP(JumpIfLowerU8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ < _rcu8_ jump")
BYTECODE_OP(JumpIfLowerU16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ < _rcu16_ jump")
BYTECODE_OP(JumpIfLowerU32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ < _rcu32_ jump")
BYTECODE_OP(JumpIfLowerU64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ < _rcu64_ jump")
BYTECODE_OP(JumpIfLowerF32, OPF_32 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf32_ < _rcf32_ jump")
BYTECODE_OP(JumpIfLowerF64, OPF_64 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf64_ < _rcf64_ jump")

BYTECODE_OP(JumpIfLowerEqS8, OPF_8 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras8_ <= _rcs8_ jump")
BYTECODE_OP(JumpIfLowerEqS16, OPF_16 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras16_ <= _rcs16_ jump")
BYTECODE_OP(JumpIfLowerEqS32, OPF_32 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras32_ <= _rcs32_ jump")
BYTECODE_OP(JumpIfLowerEqS64, OPF_64 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras64_ <= _rcs64_ jump")
BYTECODE_OP(JumpIfLowerEqU8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ <= _rcu8_ jump")
BYTECODE_OP(JumpIfLowerEqU16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ <= _rcu16_ jump")
BYTECODE_OP(JumpIfLowerEqU32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ <= _rcu32_ jump")
BYTECODE_OP(JumpIfLowerEqU64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ <= _rcu64_ jump")
BYTECODE_OP(JumpIfLowerEqF32, OPF_32 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf32_ <= _rcf32_ jump")
BYTECODE_OP(JumpIfLowerEqF64, OPF_64 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf64_ <= _rcf64_ jump")

BYTECODE_OP(JumpIfGreaterS8, OPF_8 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras8_ > _rcs8_ jump")
BYTECODE_OP(JumpIfGreaterS16, OPF_16 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras16_ > _rcs16_ jump")
BYTECODE_OP(JumpIfGreaterS32, OPF_32 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras32_ > _rcs32_ jump")
BYTECODE_OP(JumpIfGreaterS64, OPF_64 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras64_ > _rcs64_ jump")
BYTECODE_OP(JumpIfGreaterU8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ > _rcu8_ jump")
BYTECODE_OP(JumpIfGreaterU16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ > _rcu16_ jump")
BYTECODE_OP(JumpIfGreaterU32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ > _rcu32_ jump")
BYTECODE_OP(JumpIfGreaterU64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ > _rcu64_ jump")
BYTECODE_OP(JumpIfGreaterF32, OPF_32 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf32_ > _rcf32_ jump")
BYTECODE_OP(JumpIfGreaterF64, OPF_64 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf64_ > _rcf64_ jump")

BYTECODE_OP(JumpIfGreaterEqS8, OPF_8 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras8_ >= _rcs8_ jump")
BYTECODE_OP(JumpIfGreaterEqS16, OPF_16 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras16_ >= _rcs16_ jump")
BYTECODE_OP(JumpIfGreaterEqS32, OPF_32 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras32_ >= _rcs32_ jump")
BYTECODE_OP(JumpIfGreaterEqS64, OPF_64 | OPF_SIGNED | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _ras64_ >= _rcs64_ jump")
BYTECODE_OP(JumpIfGreaterEqU8, OPF_8 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau8_ >= _rcu8_ jump")
BYTECODE_OP(JumpIfGreaterEqU16, OPF_16 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau16_ >= _rcu16_ jump")
BYTECODE_OP(JumpIfGreaterEqU32, OPF_32 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau32_ >= _rcu32_ jump")
BYTECODE_OP(JumpIfGreaterEqU64, OPF_64 | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _rau64_ >= _rcu64_ jump")
BYTECODE_OP(JumpIfGreaterEqF32, OPF_32 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf32_ >= _rcf32_ jump")
BYTECODE_OP(JumpIfGreaterEqF64, OPF_64 | OPF_FLOAT | OPF_JUMP | OPF_READ_A | OPF_IMM_A | OPF_READ_VAL32_B | OPF_READ_C | OPF_IMM_C, "if _raf64_ >= _rcf64_ jump")

BYTECODE_OP(JumpDyn8, OPF_8 | OPF_JUMP_DYN | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL64_C | OPF_READ_VAL64_D, "jumpdyn8 _rau32_")
BYTECODE_OP(JumpDyn16, OPF_16 | OPF_JUMP_DYN | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL64_C | OPF_READ_VAL64_D, "jumpdyn16 _rau32_")
BYTECODE_OP(JumpDyn32, OPF_32 | OPF_JUMP_DYN | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL64_C | OPF_READ_VAL64_D, "jumpdyn32 _rau32_")
BYTECODE_OP(JumpDyn64, OPF_64 | OPF_JUMP_DYN | OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL64_C | OPF_READ_VAL64_D, "jumpdyn64 _rau32_")
BYTECODE_OP(Jump, OPF_JUMP | OPF_READ_VAL32_B, "jump")

BYTECODE_OP(DeRef8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_B | OPF_READ_VAL64_C, "_ra_ = [_rb_ + _rcs64_]")
BYTECODE_OP(DeRef16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_B | OPF_READ_VAL64_C, "_ra_ = [_rb_ + _rcs64_]")
BYTECODE_OP(DeRef32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_B | OPF_READ_VAL64_C, "_ra_ = [_rb_ + _rcs64_]")
BYTECODE_OP(DeRef64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_B | OPF_READ_VAL64_C, "_ra_ = [_rb_ + _rcs64_]")
BYTECODE_OP(DeRefStringSlice, OPF_REG_READ | OPF_WRITE_A | OPF_WRITE_B | OPF_READ_A | OPF_READ_VAL64_C, "_ra_ = [_ra_ + _rcs64_]; _rb_ = [_ra_ + _rcs64_ + 8]")

BYTECODE_OP(Mul64byVB64, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ *= _rbu64_")
BYTECODE_OP(Div64byVB64, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ /= _rbu64_")
BYTECODE_OP(Add32byVB32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ += _rbu32_")
BYTECODE_OP(Add64byVB64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ += _rbu64_")
BYTECODE_OP(MulAddVC64, OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_READ_VAL64_C, "_ra_ = _ra_ * (_rb_ + _rcu8_)")

BYTECODE_OP(ZeroToTrue, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A, "_ra_ = _ra_ == 0")
BYTECODE_OP(LowerZeroToTrue, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A, "_ra_ = _ra_ < 0")
BYTECODE_OP(GreaterZeroToTrue, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A, "_ra_ = _ra_ > 0")
BYTECODE_OP(LowerEqZeroToTrue, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A, "_ra_ = _ra_ <= 0")
BYTECODE_OP(GreaterEqZeroToTrue, OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A, "_ra_ = _ra_ >= 0")

BYTECODE_OP(SetImmediate32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = _rbu32_")
BYTECODE_OP(SetImmediate64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = _rbu64_")

BYTECODE_OP(MemCpy8, OPF_8 | OPF_MEMCPY | OPF_READ_A | OPF_READ_B, "memcpy(_ra_, _rb_, 1)")
BYTECODE_OP(MemCpy16, OPF_16 | OPF_MEMCPY | OPF_READ_A | OPF_READ_B, "memcpy(_ra_, _rb_, 2)")
BYTECODE_OP(MemCpy32, OPF_32 | OPF_MEMCPY | OPF_READ_A | OPF_READ_B, "memcpy(_ra_, _rb_, 4)")
BYTECODE_OP(MemCpy64, OPF_64 | OPF_MEMCPY | OPF_READ_A | OPF_READ_B, "memcpy(_ra_, _rb_, 8)")

BYTECODE_OP(IntrinsicMemCpy, OPF_MEMCPY | OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_IMM_C, "@memcpy(_ra_, _rb_, _rcu64_)")
BYTECODE_OP(IntrinsicMemMove, OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_IMM_C, "@memmove(_ra_, _rb_, _rcu64_)")
BYTECODE_OP(IntrinsicMemSet, OPF_READ_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "@memset(_ra_, _rbu64_, _rcu64_)")
BYTECODE_OP(IntrinsicMemCmp, OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_READ_D | OPF_IMM_D, "_ra_ = @memcmp(_rb_, _rc_, _rdu64_)")
BYTECODE_OP(IntrinsicStrLen, OPF_WRITE_A | OPF_READ_B, "_ra_ = @strlen(_rb_)")
BYTECODE_OP(IntrinsicStrCmp, OPF_WRITE_A | OPF_READ_B | OPF_READ_C, "_ra_ = @strcmp(_rb_, _rc_)")

BYTECODE_OP(CopyRBtoRA8, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B, "_ra_ = _rb_")
BYTECODE_OP(CopyRBtoRA16, OPF_16 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B, "_ra_ = _rb_")
BYTECODE_OP(CopyRBtoRA32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B, "_ra_ = _rb_")
BYTECODE_OP(CopyRBtoRA64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B, "_ra_ = _rb_")

BYTECODE_OP(CopyRBtoRA64x2, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_WRITE_C | OPF_READ_D, "_ra_ = _rb_; _rc_ = _rd_")

BYTECODE_OP(ClearRA, OPF_REG_ONLY | OPF_WRITE_A, "_ra_ = 0")
BYTECODE_OP(ClearRAx2, OPF_REG_ONLY | OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = 0")
BYTECODE_OP(ClearRAx3, OPF_REG_ONLY | OPF_WRITE_A | OPF_WRITE_B | OPF_WRITE_C, "_ra_, _rb_, _rc_ = 0")
BYTECODE_OP(ClearRAx4, OPF_REG_ONLY | OPF_WRITE_A | OPF_WRITE_B | OPF_WRITE_C | OPF_WRITE_D, "_ra_, _rb_, _rc_, _rd_ = 0")

BYTECODE_OP(IncrementRA64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_A, "_ra_++")
BYTECODE_OP(DecrementRA32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_A, "_ra_--")
BYTECODE_OP(DecrementRA64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_A, "_ra_--")

BYTECODE_OP(CopyRAtoRR, OPF_READ_A | OPF_IMM_A, "my_result = _rau64_")
BYTECODE_OP(CopyRAtoRRRet, OPF_READ_A | OPF_IMM_A, "return _rau64_")
BYTECODE_OP(CopyRARBtoRR2, OPF_READ_A | OPF_READ_B, "my_result = _ra_, _rb_")
BYTECODE_OP(CopyRRtoRA, OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = my_result + _rbu64_")
BYTECODE_OP(SaveRRtoRA, OPF_WRITE_A, "_ra_ = my_result")

BYTECODE_OP(CopyRTtoRA, OPF_WRITE_A, "_ra_ = last_call_result")
BYTECODE_OP(CopyRT2toRARB, OPF_WRITE_A | OPF_WRITE_B, "_ra_, _rb_ = last_call_result")
BYTECODE_OP(CopyRAtoRT, OPF_READ_A, "last_call_result = _ra_")

BYTECODE_OP(CopySPVaargs, OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_D, "_ra_ = &sp + _rbu32_")

BYTECODE_OP(GetParam64SI, OPF_WRITE_A | OPF_WRITE_B | OPF_READ_VAL32_C, "")
BYTECODE_OP(IntrinsicIsConstExprSI, OPF_WRITE_A | OPF_READ_VAL32_C, "")
BYTECODE_OP(IntrinsicLocationSI, OPF_WRITE_A | OPF_READ_VAL32_C, "")

BYTECODE_OP(GetFromStack8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = sp[_rbu32_]")
BYTECODE_OP(GetFromStack16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = sp[_rbu32_]")
BYTECODE_OP(GetFromStack32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = sp[_rbu32_]")
BYTECODE_OP(GetFromStack64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = sp[_rbu32_]")

BYTECODE_OP(GetFromStack8x2, OPF_8 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_WRITE_C | OPF_READ_VAL32_D, "_ra_ = sp[_rbu32_]; _rc_ = sp[_rdu32_]")
BYTECODE_OP(GetFromStack16x2, OPF_16 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_WRITE_C | OPF_READ_VAL32_D, "_ra_ = sp[_rbu32_]; _rc_ = sp[_rdu32_]")
BYTECODE_OP(GetFromStack32x2, OPF_32 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_WRITE_C | OPF_READ_VAL32_D, "_ra_ = sp[_rbu32_]; _rc_ = sp[_rdu32_]")
BYTECODE_OP(GetFromStack64x2, OPF_64 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_WRITE_C | OPF_READ_VAL32_D, "_ra_ = sp[_rbu32_]; _rc_ = sp[_rdu32_]")

BYTECODE_OP(GetIncFromStack64, OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_C, "_ra_ = sp[_rbu32_] + _rcu64_")
BYTECODE_OP(GetIncFromStack64DeRef8, OPF_8 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_C, "_ra_ = [sp[_rbu32_] + _rcu64_]")
BYTECODE_OP(GetIncFromStack64DeRef16, OPF_16 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_C, "_ra_ = [sp[_rbu32_] + _rcu64_]")
BYTECODE_OP(GetIncFromStack64DeRef32, OPF_32 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_C, "_ra_ = [sp[_rbu32_] + _rcu64_]")
BYTECODE_OP(GetIncFromStack64DeRef64, OPF_64 | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_READ_VAL64_C, "_ra_ = [sp[_rbu32_] + _rcu64_]")

BYTECODE_OP(GetParam8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = param(_rbh32_) & 0xFF")
BYTECODE_OP(GetParam16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = param(_rbh32_) & 0xFFFF")
BYTECODE_OP(GetParam32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = param(_rbh32_) & 0xFFFFFFFF")
BYTECODE_OP(GetParam64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = param(_rbh32_)")
BYTECODE_OP(GetParam64x2, OPF_WRITE_A | OPF_READ_VAL64_B | OPF_WRITE_C | OPF_READ_VAL64_D, "_ra_ = param(_rbh32_); _rc_ = param(_rdh32_)")
BYTECODE_OP(GetIncParam64, OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B | OPF_READ_VAL64_D, "_ra_ = param(_rbh32_) + _rdu64_")

BYTECODE_OP(GetParam64DeRef8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = [param(_rbh32_)]")
BYTECODE_OP(GetParam64DeRef16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = [param(_rbh32_)]")
BYTECODE_OP(GetParam64DeRef32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = [param(_rbh32_)]")
BYTECODE_OP(GetParam64DeRef64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ = [param(_rbh32_)]")

BYTECODE_OP(GetIncParam64DeRef8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B | OPF_READ_VAL64_D, "_ra_ = [param(_rbh32_) + _rdu64_]")
BYTECODE_OP(GetIncParam64DeRef16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B | OPF_READ_VAL64_D, "_ra_ = [param(_rbh32_) + _rdu64_]")
BYTECODE_OP(GetIncParam64DeRef32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B | OPF_READ_VAL64_D, "_ra_ = [param(_rbh32_) + _rdu64_]")
BYTECODE_OP(GetIncParam64DeRef64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL64_B | OPF_READ_VAL64_D, "_ra_ = [param(_rbh32_) + _rdu64_]")

BYTECODE_OP(CopyStack8, OPF_8 | OPF_READ_VAL32_A | OPF_READ_VAL32_B, "sp[_rau32_] = sp[_rbu32_]")
BYTECODE_OP(CopyStack16, OPF_16 | OPF_READ_VAL32_A | OPF_READ_VAL32_B, "sp[_rau32_] = sp[_rbu32_]")
BYTECODE_OP(CopyStack32, OPF_32 | OPF_READ_VAL32_A | OPF_READ_VAL32_B, "sp[_rau32_] = sp[_rbu32_]")
BYTECODE_OP(CopyStack64, OPF_64 | OPF_READ_VAL32_A | OPF_READ_VAL32_B, "sp[_rau32_] = sp[_rbu32_]")

BYTECODE_OP(MakeStackPointer, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = sp + _rbu32_")
BYTECODE_OP(MakeStackPointerx2, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B | OPF_WRITE_C | OPF_READ_VAL32_D, "_ra_ = sp + _rbu32_; _rc_ = sp + _rdu32_")
BYTECODE_OP(MakeStackPointerRT, OPF_REG_ONLY | OPF_READ_VAL32_A, "result_ptr = sp + _rau32_")

BYTECODE_OP(GetFromCompilerSeg8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cmp[_rbu32_]")
BYTECODE_OP(GetFromCompilerSeg16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cmp[_rbu32_]")
BYTECODE_OP(GetFromCompilerSeg32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cmp[_rbu32_]")
BYTECODE_OP(GetFromCompilerSeg64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cmp[_rbu32_]")

BYTECODE_OP(GetFromBssSeg8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = bss[_rbu32_]")
BYTECODE_OP(GetFromBssSeg16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = bss[_rbu32_]")
BYTECODE_OP(GetFromBssSeg32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = bss[_rbu32_]")
BYTECODE_OP(GetFromBssSeg64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = bss[_rbu32_]")

BYTECODE_OP(GetFromMutableSeg8, OPF_8 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = dat[_rbu32_]")
BYTECODE_OP(GetFromMutableSeg16, OPF_16 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = dat[_rbu32_]")
BYTECODE_OP(GetFromMutableSeg32, OPF_32 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = dat[_rbu32_]")
BYTECODE_OP(GetFromMutableSeg64, OPF_64 | OPF_REG_READ | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = dat[_rbu32_]")

BYTECODE_OP(MakeCompilerSegPointer, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cmp + _rbu32_")
BYTECODE_OP(MakeBssSegPointer, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = bss + _rbu32_")
BYTECODE_OP(MakeMutableSegPointer, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = dat + _rbu32_")
BYTECODE_OP(MakeConstantSegPointer, OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ = cst + _rbu32_")

BYTECODE_OP(BinOpPlusS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ + _rbs8_")
BYTECODE_OP(BinOpPlusS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ + _rbs16_")
BYTECODE_OP(BinOpPlusS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ + _rbs32_")
BYTECODE_OP(BinOpPlusS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ + _rbs64_")
BYTECODE_OP(BinOpPlusU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ + _rbu8_")
BYTECODE_OP(BinOpPlusU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ + _rbu16_")
BYTECODE_OP(BinOpPlusU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ + _rbu32_")
BYTECODE_OP(BinOpPlusU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ + _rbu64_")
BYTECODE_OP(BinOpPlusF32_Safe, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ + _rbf32_")
BYTECODE_OP(BinOpPlusF64_Safe, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ + _rbf64_")

BYTECODE_OP(BinOpPlusS8_Safe, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ + _rbs8_")
BYTECODE_OP(BinOpPlusS16_Safe, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ + _rbs16_")
BYTECODE_OP(BinOpPlusS32_Safe, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ + _rbs32_")
BYTECODE_OP(BinOpPlusS64_Safe, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ + _rbs64_")
BYTECODE_OP(BinOpPlusU8_Safe, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ + _rbu8_")
BYTECODE_OP(BinOpPlusU16_Safe, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ + _rbu16_")
BYTECODE_OP(BinOpPlusU32_Safe, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ + _rbu32_")
BYTECODE_OP(BinOpPlusU64_Safe, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ + _rbu64_")

BYTECODE_OP(BinOpMinusS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ - _rbs8_")
BYTECODE_OP(BinOpMinusS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ - _rbs16_")
BYTECODE_OP(BinOpMinusS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ - _rbs32_")
BYTECODE_OP(BinOpMinusS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ - _rbs64_")
BYTECODE_OP(BinOpMinusU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ - _rbu8_")
BYTECODE_OP(BinOpMinusU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ - _rbu16_")
BYTECODE_OP(BinOpMinusU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ - _rbu32_")
BYTECODE_OP(BinOpMinusU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ - _rbu64_")
BYTECODE_OP(BinOpMinusF32_Safe, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ - _rbf32_")
BYTECODE_OP(BinOpMinusF64_Safe, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ - _rbf64_")

BYTECODE_OP(BinOpMinusS8_Safe, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ - _rbs8_")
BYTECODE_OP(BinOpMinusS16_Safe, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ - _rbs16_")
BYTECODE_OP(BinOpMinusS32_Safe, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ - _rbs32_")
BYTECODE_OP(BinOpMinusS64_Safe, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ - _rbs64_")
BYTECODE_OP(BinOpMinusU8_Safe, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ - _rbu8_")
BYTECODE_OP(BinOpMinusU16_Safe, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ - _rbu16_")
BYTECODE_OP(BinOpMinusU32_Safe, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ - _rbu32_")
BYTECODE_OP(BinOpMinusU64_Safe, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ - _rbu64_")

BYTECODE_OP(BinOpMulS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ * _rbs8_")
BYTECODE_OP(BinOpMulS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ * _rbs16_")
BYTECODE_OP(BinOpMulS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ * _rbs32_")
BYTECODE_OP(BinOpMulS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ * _rbs64_")
BYTECODE_OP(BinOpMulU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ * _rbu8_")
BYTECODE_OP(BinOpMulU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ * _rbu16_")
BYTECODE_OP(BinOpMulU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ * _rbu32_")
BYTECODE_OP(BinOpMulU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ * _rbu64_")
BYTECODE_OP(BinOpMulF32_Safe, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ * _rbf32_")
BYTECODE_OP(BinOpMulF64_Safe, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ * _rbf64_")

BYTECODE_OP(BinOpMulS8_Safe, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ * _rbs8_")
BYTECODE_OP(BinOpMulS16_Safe, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ * _rbs16_")
BYTECODE_OP(BinOpMulS32_Safe, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ * _rbs32_")
BYTECODE_OP(BinOpMulS64_Safe, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ * _rbs64_")
BYTECODE_OP(BinOpMulU8_Safe, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ * _rbu8_")
BYTECODE_OP(BinOpMulU16_Safe, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ * _rbu16_")
BYTECODE_OP(BinOpMulU32_Safe, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ * _rbu32_")
BYTECODE_OP(BinOpMulU64_Safe, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ * _rbu64_")

BYTECODE_OP(BinOpModuloS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ % _rbs8_")
BYTECODE_OP(BinOpModuloS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ % _rbs16_")
BYTECODE_OP(BinOpModuloS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ % _rbs32_")
BYTECODE_OP(BinOpModuloS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ % _rbs64_")
BYTECODE_OP(BinOpModuloU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ % _rbu8_")
BYTECODE_OP(BinOpModuloU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ % _rbu16_")
BYTECODE_OP(BinOpModuloU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ % _rbu32_")
BYTECODE_OP(BinOpModuloU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ % _rbu64_")

BYTECODE_OP(BinOpDivS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ / _rbs8_")
BYTECODE_OP(BinOpDivS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ / _rbs16_")
BYTECODE_OP(BinOpDivS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ / _rbs32_")
BYTECODE_OP(BinOpDivS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ / _rbs64_")
BYTECODE_OP(BinOpDivU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ / _rbu8_")
BYTECODE_OP(BinOpDivU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ / _rbu16_")
BYTECODE_OP(BinOpDivU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ / _rbu32_")
BYTECODE_OP(BinOpDivU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ / _rbu64_")
BYTECODE_OP(BinOpDivF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ / _rbf32_")
BYTECODE_OP(BinOpDivF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ / _rbf32_")

BYTECODE_OP(BinOpBitmaskAnd8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ & _rbu8_")
BYTECODE_OP(BinOpBitmaskAnd16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ & _rbu16_")
BYTECODE_OP(BinOpBitmaskAnd32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ & _rbu32_")
BYTECODE_OP(BinOpBitmaskAnd64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ & _rbu64_")

BYTECODE_OP(BinOpBitmaskOr8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ | _rbu8_")
BYTECODE_OP(BinOpBitmaskOr16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ | _rbu16_")
BYTECODE_OP(BinOpBitmaskOr32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ | _rbu32_")
BYTECODE_OP(BinOpBitmaskOr64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ | _rbu64_")

BYTECODE_OP(BinOpXor8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ ^ _rbu8_")
BYTECODE_OP(BinOpXor16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ ^ _rbu16_")
BYTECODE_OP(BinOpXor32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ ^ _rbu32_")
BYTECODE_OP(BinOpXor64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ ^ _rbu64_")

BYTECODE_OP(BinOpShiftLeftS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ << _rbu32_")
BYTECODE_OP(BinOpShiftLeftU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ << _rbu32_")

BYTECODE_OP(BinOpShiftRightS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightU8, OPF_8 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightU16, OPF_16 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightU32, OPF_32 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ >> _rbu32_")
BYTECODE_OP(BinOpShiftRightU64, OPF_64 | OPF_REG_ONLY | OPF_FACTOR | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ >> _rbu32_")

BYTECODE_OP(NegBool, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = !_rbu8_")
BYTECODE_OP(NegS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = -_rbu32_")
BYTECODE_OP(NegS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = -_rbu64_")
BYTECODE_OP(NegF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = -_rbf32_")
BYTECODE_OP(NegF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = -_rbf64_")

BYTECODE_OP(InvertU8, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = ~_rbu8_")
BYTECODE_OP(InvertU16, OPF_16 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = ~_rbu16_")
BYTECODE_OP(InvertU32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = ~_rbu32_")
BYTECODE_OP(InvertU64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = ~_rbu64_")

BYTECODE_OP(CompareOpEqual8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ == _rbu8_")
BYTECODE_OP(CompareOpEqual16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ == _rbu16_")
BYTECODE_OP(CompareOpEqual32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ == _rbu32_")
BYTECODE_OP(CompareOpEqual64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ == _rbu64_")
BYTECODE_OP(CompareOpEqualF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ == _rbf32_")
BYTECODE_OP(CompareOpEqualF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ == _rbf64_")

BYTECODE_OP(CompareOpNotEqual8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ != _rbu8_")
BYTECODE_OP(CompareOpNotEqual16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ != _rbu16_")
BYTECODE_OP(CompareOpNotEqual32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ != _rbu32_")
BYTECODE_OP(CompareOpNotEqual64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ != _rbu64_")
BYTECODE_OP(CompareOpNotEqualF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ != _rbf32_")
BYTECODE_OP(CompareOpNotEqualF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ != _rbf64_")

BYTECODE_OP(CompareOp3Way8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ <=> _rbu8_")
BYTECODE_OP(CompareOp3Way16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ <=> _rbu16_")
BYTECODE_OP(CompareOp3Way32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ <=> _rbu32_")
BYTECODE_OP(CompareOp3Way64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ <=> _rbu64_")
BYTECODE_OP(CompareOp3WayF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ <=> _rbf32_")
BYTECODE_OP(CompareOp3WayF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ <=> _rbf64_")

BYTECODE_OP(CompareOpLowerS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ < _rbs8_")
BYTECODE_OP(CompareOpLowerS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ < _rbs16_")
BYTECODE_OP(CompareOpLowerS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ < _rbs32_")
BYTECODE_OP(CompareOpLowerS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ < _rbs64_")
BYTECODE_OP(CompareOpLowerU8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ < _rbu8_")
BYTECODE_OP(CompareOpLowerU16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ < _rbu16_")
BYTECODE_OP(CompareOpLowerU32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ < _rbu32_")
BYTECODE_OP(CompareOpLowerU64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ < _rbu64_")
BYTECODE_OP(CompareOpLowerF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ < _rbf32_")
BYTECODE_OP(CompareOpLowerF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ < _rbf64_")

BYTECODE_OP(CompareOpLowerEqS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ <= _rbs8_")
BYTECODE_OP(CompareOpLowerEqS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ <= _rbs16_")
BYTECODE_OP(CompareOpLowerEqS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ <= _rbs32_")
BYTECODE_OP(CompareOpLowerEqS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ <= _rbs64_")
BYTECODE_OP(CompareOpLowerEqU8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ <= _rbu8_")
BYTECODE_OP(CompareOpLowerEqU16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ <= _rbu16_")
BYTECODE_OP(CompareOpLowerEqU32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ <= _rbu32_")
BYTECODE_OP(CompareOpLowerEqU64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ <= _rbu64_")
BYTECODE_OP(CompareOpLowerEqF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ <= _rbf32_")
BYTECODE_OP(CompareOpLowerEqF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ <= _rbf64_")

BYTECODE_OP(CompareOpGreaterS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ > _rbs8_")
BYTECODE_OP(CompareOpGreaterS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ > _rbs16_")
BYTECODE_OP(CompareOpGreaterS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ > _rbs32_")
BYTECODE_OP(CompareOpGreaterS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ > _rbs64_")
BYTECODE_OP(CompareOpGreaterU8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ > _rbu8_")
BYTECODE_OP(CompareOpGreaterU16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ > _rbu16_")
BYTECODE_OP(CompareOpGreaterU32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ > _rbu32_")
BYTECODE_OP(CompareOpGreaterU64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ > _rbu64_")
BYTECODE_OP(CompareOpGreaterF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ > _rbf32_")
BYTECODE_OP(CompareOpGreaterF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ > _rbf64_")

BYTECODE_OP(CompareOpGreaterEqS8, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras8_ >= _rbs8_")
BYTECODE_OP(CompareOpGreaterEqS16, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras16_ >= _rbs16_")
BYTECODE_OP(CompareOpGreaterEqS32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras32_ >= _rbs32_")
BYTECODE_OP(CompareOpGreaterEqS64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _ras64_ >= _rbs64_")
BYTECODE_OP(CompareOpGreaterEqU8, OPF_8 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau8_ >= _rbu8_")
BYTECODE_OP(CompareOpGreaterEqU16, OPF_16 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau16_ >= _rbu16_")
BYTECODE_OP(CompareOpGreaterEqU32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau32_ >= _rbu32_")
BYTECODE_OP(CompareOpGreaterEqU64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _rau64_ >= _rbu64_")
BYTECODE_OP(CompareOpGreaterEqF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf32_ >= _rbf32_")
BYTECODE_OP(CompareOpGreaterEqF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_A | OPF_IMM_B, "_rc_ = _raf64_ >= _rbf64_")

BYTECODE_OP(ClearMaskU32, OPF_32 | OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL32_B, "_ra_ &= _rbx32_")
BYTECODE_OP(ClearMaskU64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_WRITE_A | OPF_READ_VAL64_B, "_ra_ &= _rbx64_")

BYTECODE_OP(SetZeroStack8, OPF_8 | OPF_READ_VAL32_A, "sp[_rau32_] = 0")
BYTECODE_OP(SetZeroStack16, OPF_16 | OPF_READ_VAL32_A, "sp[_rau32_] = 0")
BYTECODE_OP(SetZeroStack32, OPF_32 | OPF_READ_VAL32_A, "sp[_rau32_] = 0")
BYTECODE_OP(SetZeroStack64, OPF_64 | OPF_READ_VAL32_A, "sp[_rau32_] = 0")
BYTECODE_OP(SetZeroStackX, OPF_READ_VAL32_A | OPF_READ_VAL32_B, "clear(sp + _rau32_, _rbu32_)")

BYTECODE_OP(SetZeroAtPointer8, OPF_8 | OPF_READ_A | OPF_READ_VAL32_B, "[_ra_ + _rbu32_] = 0")
BYTECODE_OP(SetZeroAtPointer16, OPF_16 | OPF_READ_A | OPF_READ_VAL32_B, "[_ra_ + _rbu32_] = 0")
BYTECODE_OP(SetZeroAtPointer32, OPF_32 | OPF_READ_A | OPF_READ_VAL32_B, "[_ra_ + _rbu32_] = 0")
BYTECODE_OP(SetZeroAtPointer64, OPF_64 | OPF_READ_A | OPF_READ_VAL32_B, "[_ra_ + _rbu32_] = 0")

BYTECODE_OP(SetZeroAtPointerX, OPF_READ_A | OPF_READ_VAL64_B | OPF_READ_VAL64_C, "clear(_ra_ + _rcs64_, _rbu64_)")
BYTECODE_OP(SetZeroAtPointerXRB, OPF_READ_A | OPF_READ_B | OPF_READ_VAL64_C, "clear(_ra_, _rb_ * _rcu64_)")

BYTECODE_OP(ClearRR8, OPF_8 | OPF_READ_VAL64_C, "[my_result + _rcs64_] = 0")
BYTECODE_OP(ClearRR16, OPF_16 | OPF_READ_VAL64_C, "[my_result + _rcs64_] = 0")
BYTECODE_OP(ClearRR32, OPF_32 | OPF_READ_VAL64_C, "[my_result + _rcs64_] = 0")
BYTECODE_OP(ClearRR64, OPF_64 | OPF_READ_VAL64_C, "[my_result + _rcs64_] = 0")
BYTECODE_OP(ClearRRX, OPF_READ_VAL64_B | OPF_READ_VAL64_C, "clear(my_result + _rcs64_, _rbu64_)")

BYTECODE_OP(SetAtPointer8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] = _rbu8_")
BYTECODE_OP(SetAtPointer16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] = _rbu16_")
BYTECODE_OP(SetAtPointer32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] = _rbu32_")
BYTECODE_OP(SetAtPointer64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] = _rbu64_")

BYTECODE_OP(SetAtStackPointer8, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] = _rbu8_")
BYTECODE_OP(SetAtStackPointer16, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] = _rbu16_")
BYTECODE_OP(SetAtStackPointer32, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] = _rbu32_")
BYTECODE_OP(SetAtStackPointer64, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] = _rbu64_")

BYTECODE_OP(SetAtStackPointer8x2, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C | OPF_READ_D | OPF_IMM_D, "sp[_rau32_] = _rbu8_; sp[_rcu32_] = _rdu8_")
BYTECODE_OP(SetAtStackPointer16x2, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C | OPF_READ_D | OPF_IMM_D, "sp[_rau32_] = _rbu16_; sp[_rcu32_] = _rdu16_")
BYTECODE_OP(SetAtStackPointer32x2, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C | OPF_READ_D | OPF_IMM_D, "sp[_rau32_] = _rbu32_; sp[_rcu32_] = _rdu32_")
BYTECODE_OP(SetAtStackPointer64x2, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C | OPF_READ_D | OPF_IMM_D, "sp[_rau32_] = _rbu64_; sp[_rcu32_] = _rdu64_")

BYTECODE_OP(IncPointer64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_B, "_rc_ = _ra_ + _rbs64_")
BYTECODE_OP(IncMulPointer64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_B | OPF_READ_VAL64_D, "_rc_ = _ra_ + (_rbs64_ * _rdu64_)")
BYTECODE_OP(DecPointer64, OPF_64 | OPF_REG_ONLY | OPF_READ_A | OPF_READ_B | OPF_WRITE_C | OPF_IMM_B, "_rc_ = _ra_ - _rbs64_")

BYTECODE_OP(CastBool8, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(bool) _rb_")
BYTECODE_OP(CastBool16, OPF_16 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(bool) _rb_")
BYTECODE_OP(CastBool32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(bool) _rb_")
BYTECODE_OP(CastBool64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(bool) _rb_")

BYTECODE_OP(CastS8S16, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s16) _rb_")

BYTECODE_OP(CastS8S32, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s32) _rb_")
BYTECODE_OP(CastS16S32, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s32) _rb_")
BYTECODE_OP(CastF32S32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s32) _rb_")

BYTECODE_OP(CastS8S64, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s64) _rb_")
BYTECODE_OP(CastS16S64, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s64) _rb_")
BYTECODE_OP(CastS32S64, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s64) _rb_")
BYTECODE_OP(CastF64S64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(s64) _rb_")

BYTECODE_OP(CastS8F32, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastS16F32, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastS32F32, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastS64F32, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastU8F32, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastU16F32, OPF_16 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastU32F32, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastU64F32, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")
BYTECODE_OP(CastF64F32, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f32) _rb_")

BYTECODE_OP(CastS8F64, OPF_8 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastS16F64, OPF_16 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastS32F64, OPF_32 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastS64F64, OPF_64 | OPF_SIGNED | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastU8F64, OPF_8 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastU16F64, OPF_16 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastU32F64, OPF_32 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastU64F64, OPF_64 | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")
BYTECODE_OP(CastF32F64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = cast(f64) _rb_")

BYTECODE_OP(AffectOpPlusEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbs8_")
BYTECODE_OP(AffectOpPlusEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbs16_")
BYTECODE_OP(AffectOpPlusEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbs32_")
BYTECODE_OP(AffectOpPlusEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbs64_")
BYTECODE_OP(AffectOpPlusEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbu8_")
BYTECODE_OP(AffectOpPlusEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbu16_")
BYTECODE_OP(AffectOpPlusEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbu32_")
BYTECODE_OP(AffectOpPlusEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] += _rbu64_")
BYTECODE_OP(AffectOpPlusEqF32_Safe, OPF_32 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbf32_")
BYTECODE_OP(AffectOpPlusEqF64_Safe, OPF_64 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbf64_")

BYTECODE_OP(AffectOpPlusEqS8_Safe, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbs8_")
BYTECODE_OP(AffectOpPlusEqS16_Safe, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbs16_")
BYTECODE_OP(AffectOpPlusEqS32_Safe, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbs32_")
BYTECODE_OP(AffectOpPlusEqS64_Safe, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbs64_")
BYTECODE_OP(AffectOpPlusEqU8_Safe, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbu8_")
BYTECODE_OP(AffectOpPlusEqU16_Safe, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbu16_")
BYTECODE_OP(AffectOpPlusEqU32_Safe, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbu32_")
BYTECODE_OP(AffectOpPlusEqU64_Safe, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] += _rbu64_")

BYTECODE_OP(AffectOpPlusEqS8_SSafe, OPF_8 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu8_")
BYTECODE_OP(AffectOpPlusEqS16_SSafe, OPF_16 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu16_")
BYTECODE_OP(AffectOpPlusEqS32_SSafe, OPF_32 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu32_")
BYTECODE_OP(AffectOpPlusEqS64_SSafe, OPF_64 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu64_")
BYTECODE_OP(AffectOpPlusEqU8_SSafe, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu8_")
BYTECODE_OP(AffectOpPlusEqU16_SSafe, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu16_")
BYTECODE_OP(AffectOpPlusEqU32_SSafe, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu32_")
BYTECODE_OP(AffectOpPlusEqU64_SSafe, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbu64_")
BYTECODE_OP(AffectOpPlusEqF32_SSafe, OPF_32 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbf32_")
BYTECODE_OP(AffectOpPlusEqF64_SSafe, OPF_64 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] += _rbf64_")

BYTECODE_OP(AffectOpMinusEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbs8_")
BYTECODE_OP(AffectOpMinusEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbs16_")
BYTECODE_OP(AffectOpMinusEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbs32_")
BYTECODE_OP(AffectOpMinusEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbs64_")
BYTECODE_OP(AffectOpMinusEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbu8_")
BYTECODE_OP(AffectOpMinusEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbu16_")
BYTECODE_OP(AffectOpMinusEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbu32_")
BYTECODE_OP(AffectOpMinusEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] -= _rbu64_")

BYTECODE_OP(AffectOpMinusEqS8_Safe, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbs8_")
BYTECODE_OP(AffectOpMinusEqS16_Safe, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbs16_") 
BYTECODE_OP(AffectOpMinusEqS32_Safe, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbs32_") 
BYTECODE_OP(AffectOpMinusEqS64_Safe, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbs64_") 
BYTECODE_OP(AffectOpMinusEqU8_Safe, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbu8_") 
BYTECODE_OP(AffectOpMinusEqU16_Safe, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbu16_") 
BYTECODE_OP(AffectOpMinusEqU32_Safe, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbu32_") 
BYTECODE_OP(AffectOpMinusEqU64_Safe, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbu64_") 
BYTECODE_OP(AffectOpMinusEqF32_Safe, OPF_32 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbf32_")
BYTECODE_OP(AffectOpMinusEqF64_Safe, OPF_64 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] -= _rbf64_")

BYTECODE_OP(AffectOpMinusEqS8_SSafe, OPF_8 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu8_")
BYTECODE_OP(AffectOpMinusEqS16_SSafe, OPF_16 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu16_")
BYTECODE_OP(AffectOpMinusEqS32_SSafe, OPF_32 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu32_")
BYTECODE_OP(AffectOpMinusEqS64_SSafe, OPF_64 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu64_")
BYTECODE_OP(AffectOpMinusEqU8_SSafe, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu8_")
BYTECODE_OP(AffectOpMinusEqU16_SSafe, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu16_")
BYTECODE_OP(AffectOpMinusEqU32_SSafe, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu32_")
BYTECODE_OP(AffectOpMinusEqU64_SSafe, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbu64_")
BYTECODE_OP(AffectOpMinusEqF32_SSafe, OPF_32 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbf32_")
BYTECODE_OP(AffectOpMinusEqF64_SSafe, OPF_64 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] -= _rbf64_")

BYTECODE_OP(AffectOpMulEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbs8_")
BYTECODE_OP(AffectOpMulEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbs16_")
BYTECODE_OP(AffectOpMulEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbs32_")
BYTECODE_OP(AffectOpMulEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbs64_")
BYTECODE_OP(AffectOpMulEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbu8_")
BYTECODE_OP(AffectOpMulEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbu16_")
BYTECODE_OP(AffectOpMulEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbu32_")
BYTECODE_OP(AffectOpMulEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] *= _rbu64_")

BYTECODE_OP(AffectOpMulEqS8_Safe, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbs8_")
BYTECODE_OP(AffectOpMulEqS16_Safe, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbs16_") 
BYTECODE_OP(AffectOpMulEqS32_Safe, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbs32_") 
BYTECODE_OP(AffectOpMulEqS64_Safe, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbs64_") 
BYTECODE_OP(AffectOpMulEqU8_Safe, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbu8_") 
BYTECODE_OP(AffectOpMulEqU16_Safe, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbu16_") 
BYTECODE_OP(AffectOpMulEqU32_Safe, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbu32_") 
BYTECODE_OP(AffectOpMulEqU64_Safe, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbu64_") 
BYTECODE_OP(AffectOpMulEqF32_Safe, OPF_32 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbf32_")
BYTECODE_OP(AffectOpMulEqF64_Safe, OPF_64 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B | OPF_READ_VAL32_C, "[_ra_ + _rcu32_] *= _rbf64_")

BYTECODE_OP(AffectOpMulEqS8_SSafe, OPF_8 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu8_")
BYTECODE_OP(AffectOpMulEqS16_SSafe, OPF_16 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu16_")
BYTECODE_OP(AffectOpMulEqS32_SSafe, OPF_32 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu32_")
BYTECODE_OP(AffectOpMulEqS64_SSafe, OPF_64 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu64_")
BYTECODE_OP(AffectOpMulEqU8_SSafe, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu8_")
BYTECODE_OP(AffectOpMulEqU16_SSafe, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu16_")
BYTECODE_OP(AffectOpMulEqU32_SSafe, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu32_")
BYTECODE_OP(AffectOpMulEqU64_SSafe, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbu64_")
BYTECODE_OP(AffectOpMulEqF32_SSafe, OPF_32 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbf32_")
BYTECODE_OP(AffectOpMulEqF64_SSafe, OPF_64 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] *= _rbf64_")

BYTECODE_OP(AffectOpDivEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbs8_")
BYTECODE_OP(AffectOpDivEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbs16_")
BYTECODE_OP(AffectOpDivEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbs32_")
BYTECODE_OP(AffectOpDivEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbs64_")
BYTECODE_OP(AffectOpDivEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbu8_")
BYTECODE_OP(AffectOpDivEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbu16_")
BYTECODE_OP(AffectOpDivEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbu32_")
BYTECODE_OP(AffectOpDivEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbu64_")
BYTECODE_OP(AffectOpDivEqF32, OPF_32 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbf32_")
BYTECODE_OP(AffectOpDivEqF64, OPF_64 | OPF_FLOAT | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] /= _rbf64_")

BYTECODE_OP(AffectOpDivEqS8_SSafe, OPF_8 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbs8_")
BYTECODE_OP(AffectOpDivEqS16_SSafe, OPF_16 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbs16_")
BYTECODE_OP(AffectOpDivEqS32_SSafe, OPF_32 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbs32_")
BYTECODE_OP(AffectOpDivEqS64_SSafe, OPF_64 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbs64_")
BYTECODE_OP(AffectOpDivEqU8_SSafe, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbu8_")
BYTECODE_OP(AffectOpDivEqU16_SSafe, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbu16_")
BYTECODE_OP(AffectOpDivEqU32_SSafe, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbu32_")
BYTECODE_OP(AffectOpDivEqU64_SSafe, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbu64_")
BYTECODE_OP(AffectOpDivEqF32_SSafe, OPF_32 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbf32_")
BYTECODE_OP(AffectOpDivEqF64_SSafe, OPF_64 | OPF_FLOAT | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] /= _rbf64_")

BYTECODE_OP(AffectOpModuloEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbs8_")
BYTECODE_OP(AffectOpModuloEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbs16_")
BYTECODE_OP(AffectOpModuloEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbs32_")
BYTECODE_OP(AffectOpModuloEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbs64_")
BYTECODE_OP(AffectOpModuloEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbu8_")
BYTECODE_OP(AffectOpModuloEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbu16_")
BYTECODE_OP(AffectOpModuloEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbu32_")
BYTECODE_OP(AffectOpModuloEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] %= _rbu64_")

BYTECODE_OP(AffectOpModuloEqS8_SSafe, OPF_8 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbs8_")
BYTECODE_OP(AffectOpModuloEqS16_SSafe, OPF_16 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbs16_")
BYTECODE_OP(AffectOpModuloEqS32_SSafe, OPF_32 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbs32_")
BYTECODE_OP(AffectOpModuloEqS64_SSafe, OPF_64 | OPF_SIGNED | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbs64_")
BYTECODE_OP(AffectOpModuloEqU8_SSafe, OPF_8 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbu8_")
BYTECODE_OP(AffectOpModuloEqU16_SSafe, OPF_16 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbu16_")
BYTECODE_OP(AffectOpModuloEqU32_SSafe, OPF_32 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbu32_")
BYTECODE_OP(AffectOpModuloEqU64_SSafe, OPF_64 | OPF_READ_VAL32_A | OPF_READ_B | OPF_IMM_B, "sp[_rau32_] %= _rbu64_")

BYTECODE_OP(AffectOpAndEq8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] &= _rbu8_")
BYTECODE_OP(AffectOpAndEq16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] &= _rbu16_")
BYTECODE_OP(AffectOpAndEq32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] &= _rbu32_")
BYTECODE_OP(AffectOpAndEq64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] &= _rbu64_")

BYTECODE_OP(AffectOpOrEq8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] |= _rbu8_")
BYTECODE_OP(AffectOpOrEq16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] |= _rbu16_")
BYTECODE_OP(AffectOpOrEq32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] |= _rbu32_")
BYTECODE_OP(AffectOpOrEq64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] |= _rbu64_")

BYTECODE_OP(AffectOpXorEq8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] ^= _rbu8_")
BYTECODE_OP(AffectOpXorEq16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] ^= _rbu16_")
BYTECODE_OP(AffectOpXorEq32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] ^= _rbu32_")
BYTECODE_OP(AffectOpXorEq64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] ^= _rbu64_")

BYTECODE_OP(AffectOpShiftLeftEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")
BYTECODE_OP(AffectOpShiftLeftEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] <<= _rbu32_")

BYTECODE_OP(AffectOpShiftRightEqS8, OPF_8 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqS16, OPF_16 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqS32, OPF_32 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqS64, OPF_64 | OPF_SIGNED | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqU8, OPF_8 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqU16, OPF_16 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqU32, OPF_32 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")
BYTECODE_OP(AffectOpShiftRightEqU64, OPF_64 | OPF_READ_A | OPF_READ_B | OPF_IMM_B, "[_ra_] >>= _rbu32_")

BYTECODE_OP(IntrinsicMulAddF32, OPF_32 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_READ_D | OPF_IMM_B | OPF_IMM_C | OPF_IMM_D, "_ra_ = (_rbf32_ * _rcf32_) + _rdf32_")
BYTECODE_OP(IntrinsicMulAddF64, OPF_64 | OPF_FLOAT | OPF_REG_ONLY | OPF_FACTOR | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_READ_D | OPF_IMM_B | OPF_IMM_C | OPF_IMM_D, "_ra_ = (_rbf64_ * _rcf64_) + _rdf64_")

BYTECODE_OP(IntrinsicS8x1, OPF_8 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbs8_)")
BYTECODE_OP(IntrinsicS16x1, OPF_16 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbs16_)")
BYTECODE_OP(IntrinsicS32x1, OPF_32 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbs32_)")
BYTECODE_OP(IntrinsicS64x1, OPF_64 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbs64_)")
BYTECODE_OP(IntrinsicF32x1, OPF_32 | OPF_FLOAT | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbf32_)")
BYTECODE_OP(IntrinsicF64x1, OPF_64 | OPF_FLOAT | OPF_WRITE_A | OPF_READ_B | OPF_IMM_B, "_ra_ = _w0_(_rbf64_)")
BYTECODE_OP(IntrinsicS8x2, OPF_8 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbs8_, _rcs8_)")
BYTECODE_OP(IntrinsicS16x2, OPF_16 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbs16_, _rcs16_)")
BYTECODE_OP(IntrinsicS32x2, OPF_32 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbs32_, _rcs32_)")
BYTECODE_OP(IntrinsicS64x2, OPF_64 | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbs64_, _rcs64_)")
BYTECODE_OP(IntrinsicU8x2, OPF_8 | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbu8_, _rcu8_)")
BYTECODE_OP(IntrinsicU16x2, OPF_16 | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbu16_, _rcu16_)")
BYTECODE_OP(IntrinsicU32x2, OPF_32 | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbu32_, _rcu32_)")
BYTECODE_OP(IntrinsicU64x2, OPF_64 | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbu64_, _rcu64_)")
BYTECODE_OP(IntrinsicF32x2, OPF_32 | OPF_FLOAT | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbf32_, _rcf32_)")
BYTECODE_OP(IntrinsicF64x2, OPF_64 | OPF_FLOAT | OPF_SIGNED | OPF_WRITE_A | OPF_READ_B | OPF_READ_C | OPF_IMM_B | OPF_IMM_C, "_ra_ = _w0_(_rbf64_, _rcf64_)")

BYTECODE_OP(End, 0, "")
