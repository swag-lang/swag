#include "pch.h"
#include "Report/ErrorIds.h"

namespace
{
#undef SWAG_ERROR
#define SWAG_ERROR(__enum) #__enum
    const char* g_ErrList[] = {
#include "ErrorList.h"

    };
}

Utf8 g_E[MaxErrors];
#undef SWAG_ERROR
#define SWAG_ERROR(__n, __msg)                 \
    do                                         \
    {                                          \
        SWAG_ASSERT(g_E[(int) (__n)].empty()); \
        g_E[(int) (__n)] = __msg;              \
    } while (0)

void initErrors()
{
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Fat0001, "[cmdline] [[%s]] needs [[true]] or [[false]], got [[%s]]");
    SWAG_ERROR(Fat0002, "[cmdline] [[%s]] needs string argument");
    SWAG_ERROR(Fat0003, "[cmdline] [[%s]] needs integer argument, got [[%s]]");
    SWAG_ERROR(Fat0004, "[cmdline] [[%s]] needs integer argument");
    SWAG_ERROR(Fat0005, "[cmdline] [[%s]] requires [[%s]]");
    SWAG_ERROR(Fat0006, "[cmdline] [[--stack-size]] out of range (%s provided, range [%s, %s])");
    SWAG_ERROR(Fat0007, "[cmdline] unknown argument [[%s]]");
    SWAG_ERROR(Fat0008, "[cmdline] [[--arch]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0009, "[cmdline] [[--os]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0010, "[fatal] cache directory [[%s]] not found");
    SWAG_ERROR(Fat0011, "[fatal] dependency module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0012, "[fatal] duplicate module name [[%s]] in workspace (path [[%s]])");
    SWAG_ERROR(Fat0013, "[fatal] workspace folder [[--workspace]] required");
    SWAG_ERROR(Fat0014, "[fatal] compiler bootstrap issues");
    SWAG_ERROR(Fat0015, "[fatal] compiler runtime issues");
    SWAG_ERROR(Fat0016, "[fatal] cache directory [[%s]] creation failed");
    SWAG_ERROR(Fat0017, "[fatal] directory [[%s]] creation failed");
    SWAG_ERROR(Fat0018, "[fatal] file [[%s]] creation failed");
    SWAG_ERROR(Fat0019, "[fatal] public directory [[%s]] creation failed");
    SWAG_ERROR(Fat0020, "[fatal] script file [[%s]] creation failed");
    SWAG_ERROR(Fat0021, "[fatal] target directory [[%s]] creation failed");
    SWAG_ERROR(Fat0022, "[fatal] directory [[%s]] deletion failed");
    SWAG_ERROR(Fat0023, "[fatal] file [[%s]] deletion failed");
    SWAG_ERROR(Fat0024, "[fatal] [[--tag:%s]] value invalid (%s)");
    SWAG_ERROR(Fat0025, "[fatal] script file extension must be [[.swgs]], got [[%s]]");
    SWAG_ERROR(Fat0026, "[fatal] [[Swag]] command [[%s]] invalid");
    SWAG_ERROR(Fat0027, "[fatal] workspace [[%s]] invalid: missing [[modules/]] or [[tests/]]");
    SWAG_ERROR(Fat0028, "[fatal] module [[%s]] already exists in [[/modules]]");
    SWAG_ERROR(Fat0029, "[fatal] module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0030, "[fatal] file [[%s]] not found");
    SWAG_ERROR(Fat0031, "[fatal] script file missing (use [[--file:<filename>.swgs]])");
    SWAG_ERROR(Fat0032, "[fatal] compile tag value [[%s]] unexpected (use [[--tag:%s]])");
    SWAG_ERROR(Fat0033, "[fatal] compile tag type [[%s]] unknown (use [[--tag:%s]])");
    SWAG_ERROR(Fat0034, "[fatal] workspace folder [[%s]] already exists");
    SWAG_ERROR(Fat0035, "[fatal] workspace folder [[%s]] not found");
    SWAG_ERROR(Fat0036, "[fatal] windows sdk folder not found");
    SWAG_ERROR(Fat0037, "[fatal] file or folder to format missing (use [[--file]])");
    SWAG_ERROR(Fat0038, "[fatal] [[%s]] is not valid swag file");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Saf0001, "[safety] invalid cast from [[any]] to [[%s]]                                $ note: raised because [[#[Swag.Safety(\"dyncast\")]]] is true");
    SWAG_ERROR(Saf0002, "[safety] null value cannot cast to [[%s]]                                   $ note: raised because [[#[Swag.Safety(\"dyncast\")]]] is true");
    SWAG_ERROR(Saf0003, "[safety] invalid boolean value used                                         $ note: raised because [[#[Swag.Safety(\"bool\")]]] is true");
    SWAG_ERROR(Saf0004, "[safety] index access outside bounds                                        $ note: raised because [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0005, "[safety] lower bound exceeds upper bound                                    $ note: raised because [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0006, "[safety] lower bound exceeds upper bound                                    $ note: raised because [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0007, "[safety] upper bound exceeds array bounds                                   $ note: raised because [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0008, "[safety] [[@abs]] overflow (type [[%s]])                                    $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0009, "[safety] [[@acos]] invalid argument (type [[%s]])                           $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0010, "[safety] [[@asin]] invalid argument (type [[%s]])                           $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0011, "[safety] [[@log]] invalid argument (type [[%s]])                            $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0012, "[safety] [[@log10]] invalid argument (type [[%s]])                          $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0013, "[safety] [[@log2]] invalid argument (type [[%s]])                           $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0014, "[safety] [[@sqrt]] invalid argument (type [[%s]])                           $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0015, "[safety] [[@pow]] invalid argument (type [[%s]])                            $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0016, "[safety] division by zero                                                   $ note: raised because [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0017, "[safety] NaN (Not a Number) value used                                      $ note: raised because [[#[Swag.Safety(\"nan\")]]] is true");
    SWAG_ERROR(Saf0018, "[safety] null pointer dereferenced                                          $ note: raised because [[#[Swag.Safety(\"null\")]]] is true");
    SWAG_ERROR(Saf0019, "[safety] non-existent error thrown                                          $ note: raised because [[#[Swag.Safety(\"null\")]]] is true");
    SWAG_ERROR(Saf0020, "[safety] negative value [[%I64d]] cannot cast to unsigned [[%s]]            $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0021, "[safety] negative type [[%s]] cannot cast to unsigned [[%s]]                $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0022, "[safety] negative value [[%g]] cannot cast to unsigned [[%s]]               $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0023, "[safety] value [[%s]] ([[%I64u]]) exceeds [[%s]] limits                     $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0024, "[safety] value [[%I64u]] exceeds [[%s]] limits                              $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0025, "[safety] value [[%I64d]] exceeds [[%s]] limits                              $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0026, "[safety] value [[%g]] exceeds [[%s]] limits                                 $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0027, "[safety] operation [['%s']] overflow (type [[%s]])                          $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0028, "[safety] truncation from [[%s]] to [[%s]] not allowed                       $ note: raised because [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0029, "[safety] unexpected switch value                                            $ note: raised because [[#[Swag.Safety(\"switch\")]]] is true");
    SWAG_ERROR(Saf0030, nullptr);
    SWAG_ERROR(Saf0031, nullptr);
    SWAG_ERROR(Saf0032, nullptr);
    SWAG_ERROR(Saf0033, nullptr);
    SWAG_ERROR(Saf0034, nullptr);
    SWAG_ERROR(Saf0035, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(San0001, "[sanity] null argument to [[%s]]");
    SWAG_ERROR(San0002, "[sanity] division by zero");
    SWAG_ERROR(San0003, "[sanity] null return");
    SWAG_ERROR(San0004, "[sanity] return of stack memory");
    SWAG_ERROR(San0006, "[sanity] null pointer dereference");
    SWAG_ERROR(San0007, "[sanity] stack overwrite at offset [[%lld]] (stack size [[%lld]])");
    SWAG_ERROR(San0008, "[sanity] use of uninitialized memory");
    SWAG_ERROR(San0010, "[sanity] overflow in [['%s']] (type [[%s]])");
    SWAG_ERROR(San0005, nullptr);
    SWAG_ERROR(San0009, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Wrn0001, "%s");
    SWAG_ERROR(Wrn0002, "%s [[%s]] is deprecated ([[#[Swag.Deprecated]]])                  $ ");
    SWAG_ERROR(Wrn0003, "variable [[%s]] is never modified after declaration               $ hint: declare it with [[let]] instead of [[var]] to mark it immutable");
    SWAG_ERROR(Wrn0004, "variable [[%s]] initialized to a default value and never used     $ note: consider removing this variable if it serves no purpose");
    SWAG_ERROR(Wrn0005, "statement cannot be executed                                      $ ");
    SWAG_ERROR(Wrn0006, "%s [[%s]] is declared but never used                              $ ");
    SWAG_ERROR(Wrn0007, "[[break]] has no effect in this context                           $ note: [[break]] is only needed in empty [[case]] blocks");
    SWAG_ERROR(Wrn0008, "[[if]] after [[else]] can be condensed                            $ hint: replace [[else: if]] with [[elif]]");
    SWAG_ERROR(Wrn0009, "[[#if]] after [[#else]] can be condensed                          $ hint: replace [[#else: #if]] with [[#elif]]");
    SWAG_ERROR(Wrn0010, "[[if]] can be simplified with [[where]]                           $ ");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Err0001, "%s");
    SWAG_ERROR(Err0002, "%s");
    SWAG_ERROR(Err0003, "%s");

    SWAG_ERROR(Err0004, "%s [[%s]] already defined %s                                                                           $ ");
    SWAG_ERROR(Err0005, "multiple [[#global export]] directives found in the same file                                          $ ");
    SWAG_ERROR(Err0006, "more than one [[#main]] function defined in this module                                                $ ");
    SWAG_ERROR(Err0007, "multiple [[default]] clauses found in the same [[switch]] statement                                    $ ");
    SWAG_ERROR(Err0008, "[[%s]] cannot appear after [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0009, "enum [[%s]] already defined                                                                            $ ");
    SWAG_ERROR(Err0010, "enum value [[%s]] duplicates another with the same underlying value                                    $ ");
    SWAG_ERROR(Err0011, "field [[%s]] conflicts with an existing field                                                          $ ");
    SWAG_ERROR(Err0012, "generic symbol [[%s]] already defined                                                                  $ ");
    SWAG_ERROR(Err0013, "integer value [[%d]] already used in another [[case]]                                                  $ ");
    SWAG_ERROR(Err0014, "floating value [[%f]] already used in another [[case]]                                                 $ ");
    SWAG_ERROR(Err0015, "symbol value [[%s]] already used in another [[case]]                                                   $ ");
    SWAG_ERROR(Err0016, "string value [[\"%s\"]] already used in another [[case]]                                               $ ");
    SWAG_ERROR(Err0017, "[[null]] case already defined                                                                          $ ");
    SWAG_ERROR(Err0018, "%s [[%s]] conflicts with an existing symbol                                                            $ ");
    SWAG_ERROR(Err0019, "[[using]] applies to multiple variables of type [[%s]]                                                 $ ");
    SWAG_ERROR(Err0020, "cast from [[%s]] to [[%s]] resolves to multiple possibilities                                          $ ");
    SWAG_ERROR(Err0021, "enum value [[%s]] resolves to multiple matches                                                         $ ");
    SWAG_ERROR(Err0022, "cast from [[%s]] to interface [[%s]] resolves ambiguously                                              $ ");
    SWAG_ERROR(Err0023, "symbol [[%s]] resolves to multiple definitions                                                         $ ");
    SWAG_ERROR(Err0024, "%s [[%s]] resolves to multiple definitions                                                             $ ");
    SWAG_ERROR(Err0025, "generic %s [[%s]] resolves to multiple definitions                                                     $ ");
    SWAG_ERROR(Err0026, "unclear or conflicting parameter declaration in lambda                                                 $ ");
    SWAG_ERROR(Err0027, "stack size exceeds [[%s]] limit set by [[--stack-size]]                                                $ ");
    SWAG_ERROR(Err0028, "capture size [[%u]] bytes exceeds limit [[%u]] bytes                                                   $ ");
    SWAG_ERROR(Err0029, "[[#assert]] expression evaluated to false                                                              $ ");
    SWAG_ERROR(Err0030, "cannot convert function return slice (type [[%s]]) into a compile-time value                           $ ");
    SWAG_ERROR(Err0031, "cannot convert function return value (type [[%s]]) into constant array: [[opCount]] returned [[0]]     $ ");
    SWAG_ERROR(Err0032, "cannot convert function return value (type [[%s]]) into constant array: [[opSlice]] returned empty slice $ ");
    SWAG_ERROR(Err0033, "type [[%s]] is not a compile-time constant expression                                                  $ ");
    SWAG_ERROR(Err0034, "[[#include]] filename is not a compile-time constant                                                   $ ");
    SWAG_ERROR(Err0035, "[[%s]] argument is not a compile-time constant                                                         $ ");
    SWAG_ERROR(Err0036, "[[%s]] message is not a compile-time constant                                                          $ ");
    SWAG_ERROR(Err0037, "[[case]] expression is not a compile-time constant                                                     $ note: a [[switch]] statement marked with the [[#[Swag.Complete]]] attribute requires constant case values");
    SWAG_ERROR(Err0038, "array dimension is not a compile-time constant                                                         $ ");
    SWAG_ERROR(Err0039, "attribute parameter is not a compile-time constant                                                     $ ");
    SWAG_ERROR(Err0040, "expression is not a compile-time constant                                                              $ ");
    SWAG_ERROR(Err0041, "parameter [[%s]] of type [[%s]] is not a compile-time constant                                         $ ");
    SWAG_ERROR(Err0042, "initialization is not a compile-time constant                                                          $ ");
    SWAG_ERROR(Err0043, "initialization is not a compile-time constant                                                          $ hint: add the [[#[Swag.ConstExpr]]] attribute to [[opAffect]] to allow this");
    SWAG_ERROR(Err0044, "operation on [[%s]] is not a compile-time constant                                                     $ hint: add the [[#[Swag.ConstExpr]]] attribute to the struct to allow this");
    SWAG_ERROR(Err0045, "[[#[Swag.Compiler]]] and [[#[Swag.Tls]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0046, "[[#[Swag.Inline]]] and [[#[Swag.NoInline]]] cannot be combined                                         $ ");
    SWAG_ERROR(Err0047, "[[#[Swag.Macro]]] and [[#[Swag.Inline]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0048, "[[#[Swag.Macro]]] and [[#[Swag.Mixin]]] cannot be combined                                             $ ");
    SWAG_ERROR(Err0049, "[[#[Swag.Macro]]] and [[#[Swag.NoInline]]] cannot be combined                                          $ ");
    SWAG_ERROR(Err0050, "[[#[Swag.Mixin]]] and [[#[Swag.Inline]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0051, "[[#[Swag.Mixin]]] and [[#[Swag.NoInline]]] cannot be combined                                          $ ");
    SWAG_ERROR(Err0052, "[[%s]] and [[%s]] cannot be combined                                                                   $ ");
    SWAG_ERROR(Err0053, "divider evaluated to 0                                                                                 $ ");
    SWAG_ERROR(Err0054, "result exceeds range of [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0055, "[[%s]] applied multiple times; [[Swag.AttrMulti]] not specified                                        $ ");
    SWAG_ERROR(Err0056, "struct initialized with both type syntax and assignment                                                $ ");
    SWAG_ERROR(Err0057, "multiple [[%s]] modifiers detected                                                                     $ ");
    SWAG_ERROR(Err0058, "multiple [[%s]] arguments detected                                                                     $ ");
    SWAG_ERROR(Err0059, "operator [['%s']] defined multiple times                                                               $ ");
    SWAG_ERROR(Err0061, "[[case]] statement has no content                                                                      $ ");
    SWAG_ERROR(Err0062, "[[default]] statement has no content                                                                   $ ");
    SWAG_ERROR(Err0063, "[[switch]] statement has no body                                                                       $ hint: add one or more [[case]] statements, or remove the [[switch]]");
    SWAG_ERROR(Err0064, "array literal contains no elements                                                                     $ ");
    SWAG_ERROR(Err0065, "attribute has no specified value                                                                       $ hint: specify the attribute name or remove it");
    SWAG_ERROR(Err0066, "binary literal contains no digits [[0]] or [[1]]                                                       $ ");
    SWAG_ERROR(Err0067, "expression [[()]] contains nothing                                                                     $ ");
    SWAG_ERROR(Err0068, "float exponent value is missing                                                                        $ ");
    SWAG_ERROR(Err0069, "hexadecimal literal contains no digits ([[0-9]], [[A-F]], [[a-f]])                                     $ ");
    SWAG_ERROR(Err0070, "[[;]] alone forms an invalid empty statement                                                           $ hint: use [[{}]] instead to create an empty block");
    SWAG_ERROR(Err0071, "error escapes from [[defer]] or [[defer<err>]] block                                                   $ ");
    SWAG_ERROR(Err0072, "%s [[%s]] resides in a different stack frame                                                           $ ");
    SWAG_ERROR(Err0073, "unexpected $$TKN$$, expected [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0074, "interface member [[%s]] lacks [[;]] or default implementation                                          $ ");
    SWAG_ERROR(Err0075, "missing [[{]] to start function body, found $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0076, "missing [[{]] to start %s body, found [[;]]                                                            $ ");
    SWAG_ERROR(Err0077, "missing [[{]] to start [[#inject]] block, found $$TKN$$                                                $ ");
    SWAG_ERROR(Err0078, "%s [[%s]] violates [[%s]] constraint                                                                   $ ");
    SWAG_ERROR(Err0080, "partial type alias ([[%s]]) cannot instantiate generic struct                                          $ ");
    SWAG_ERROR(Err0081, "generic function [[%s]] lacks required generic arguments                                               $ ");
    SWAG_ERROR(Err0082, "generic struct [[%s]] lacks required generic arguments                                                 $ ");
    SWAG_ERROR(Err0083, "[[@postcopy]] on [[%s]] disallowed by [[#[Swag.NoCopy]]]                                               $ ");
    SWAG_ERROR(Err0084, "[[opDrop]] for [[%s]] disallowed by [[#[Swag.ConstExpr]]]                                              $ ");
    SWAG_ERROR(Err0085, "[[opPostCopy]] for [[%s]] disallowed by [[#[Swag.NoCopy]]]                                             $ ");
    SWAG_ERROR(Err0086, "[[compileString]] not accessible in this context                                                       $ note: meta-programming is not permitted at this compiler stage");
    SWAG_ERROR(Err0087, "direct call to [[opDrop]] is invalid                                                                   $ hint: use [[@drop]] instead");
    SWAG_ERROR(Err0088, "direct call to [[opPostCopy]] is invalid                                                               $ hint: use [[@postcopy]] instead");
    SWAG_ERROR(Err0089, "direct call to [[opPostMove]] is invalid                                                               $ hint: use [[@postmove]] instead");
    SWAG_ERROR(Err0090, "[[%s]] is marked [[#[Swag.NoCopy]]] and cannot be copied                                               $ ");
    SWAG_ERROR(Err0091, "[[%s]] is immutable and cannot be modified                                                             $ ");
    SWAG_ERROR(Err0092, "global [[%s]] is zero-initialized and immutable at compile-time                                        $ ");
    SWAG_ERROR(Err0093, "left expression is immutable and cannot receive a value                                                $ ");
    SWAG_ERROR(Err0094, "missing [[,]] or [[:]] before $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0095, "missing expression after [[,]] before $$TKN$$                                                          $ hint: add a case expression or remove the trailing [[,]]");
    SWAG_ERROR(Err0096, "missing [[,]] or [['|']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0097, "missing alias name after [[,]] before $$TKN$$                                                          $ hint: add an alias name or remove the trailing [[,]]");
    SWAG_ERROR(Err0098, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0099, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0100, "missing [[,]] or [[']']] before $$TKN$$                                                                $ hint: add a dimension or close the list with [[']']]");
    SWAG_ERROR(Err0101, "missing dimension after [[,]] before $$TKN$$                                                           $ hint: add a dimension or remove the trailing [[,]]");
    SWAG_ERROR(Err0102, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0103, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0104, "missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0105, "missing attribute after [[,]] before $$TKN$$                                                           $ hint: add an attribute or remove the trailing [[,]]");
    SWAG_ERROR(Err0106, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0107, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add a generic argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0108, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0109, "missing index after [[,]] before $$TKN$$                                                               $ hint: add an index or remove the trailing [[,]]");
    SWAG_ERROR(Err0110, "missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0111, "missing [[,]] or [['}']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0112, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0113, "missing parameter after [[,]] before $$TKN$$                                                           $ hint: add a parameter or remove the trailing [[,]]");
    SWAG_ERROR(Err0114, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0115, "missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0116, "missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0117, "[[while]] condition always evaluates to [[true]]                                                       $ hint: use [[for { ... }]] for an intentional infinite loop");
    SWAG_ERROR(Err0118, "[[%s]] is not a valid [[#alias]] variable name                                                         $ hint: use [[#alias0]], [[#alias1]], and so on");
    SWAG_ERROR(Err0119, "[[#alignof]] applied to generic expression                                                             $ ");
    SWAG_ERROR(Err0120, "invalid $$TKN$$ inside [[#inject]] replacement block                                                   $ note: [[#inject]] only accepts [[break]] or [[continue]] as valid keywords");
    SWAG_ERROR(Err0121, "[[%s]] is not a valid [[#uniq]] variable name                                                          $ hint: use [[#uniq0]], [[#uniq1]], and so on");
    SWAG_ERROR(Err0122, "[[#sizeof]] applied to generic expression                                                              $ ");
    SWAG_ERROR(Err0123, "[[#up]] count cannot be zero                                                                           $ ");
    SWAG_ERROR(Err0124, "[[#up]] count must be an untyped integer, got [[%s]]                                                   $ ");
    SWAG_ERROR(Err0125, "cannot move [[%d]] scopes upward                                                                       $ ");
    SWAG_ERROR(Err0126, "variadic argument type [[%s]] not supported                                                            $ note: argument is promoted to [[%s]] at the call site");
    SWAG_ERROR(Err0127, "next block statement cannot serve as [[code]] argument                                                 $ note: %s [[%s]] expects the following statement as a [[code]] argument, which is not allowed in [[%s]]");
    SWAG_ERROR(Err0128, "[[discard]] applied to function returning nothing                                                      $ ");
    SWAG_ERROR(Err0129, "missing function parameter name                                                                        $ ");
    SWAG_ERROR(Err0130, "expression incompatible with [[expect]]                                                                $ note: only [[param != null]] expressions are supported");
    SWAG_ERROR(Err0131, "variadic type cannot be visited through pointer                                                        $ ");
    SWAG_ERROR(Err0132, "enum type cannot be visited through pointer                                                            $ ");
    SWAG_ERROR(Err0133, "pointer type [[%s]] cannot be visited                                                                  $ ");
    SWAG_ERROR(Err0134, "unrecognized [[visit]] specialization name: $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0135, "tuple type cannot be visited                                                                           $ ");
    SWAG_ERROR(Err0136, "type [[%s]] cannot be visited                                                                          $ ");
    SWAG_ERROR(Err0137, "missing struct name after [[for]], found %s [[%s]]                                                     $ ");
    SWAG_ERROR(Err0138, "[[impl]] applied to [[%s]], which is [[%s]], not struct or enum                                        $ ");
    SWAG_ERROR(Err0139, "[[impl]] applied to [[%s]], which is [[%s]], not an interface                                          $ ");
    SWAG_ERROR(Err0140, "[[%s]] is not a valid [[opVisit]] variant                                                              $ hint: must use a valid identifier name");
    SWAG_ERROR(Err0141, "[[.]] reference missing identifier, found $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0142, "compile-time %s [[%s]] accessed from runtime %s                                                        $ ");
    SWAG_ERROR(Err0143, "compile-time %s accessed from runtime %s                                                               $ ");
    SWAG_ERROR(Err0144, "[[%s]] returns no value; no address available                                                          $ ");
    SWAG_ERROR(Err0145, "%s has no address                                                                                      $ note: only variables have addresses");
    SWAG_ERROR(Err0146, "string literal character has no address                                                                $ note: string literals have no storage");
    SWAG_ERROR(Err0147, "constant type [[%s]] has no address                                                                    $ note: this constant type has no storage");
    SWAG_ERROR(Err0148, "parameter type [[%s]] has no address                                                                   $ note: this parameter type has no storage");
    SWAG_ERROR(Err0149, "function returning [[%s]] has no address                                                               $ ");
    SWAG_ERROR(Err0150, "macro has no address                                                                                   $ ");
    SWAG_ERROR(Err0151, "mixin has no address                                                                                   $ ");
    SWAG_ERROR(Err0152, "[[let]] variable has no address                                                                        $ hint: use [[var]] for a mutable variable");
    SWAG_ERROR(Err0153, "inline function has no address                                                                         $ ");
    SWAG_ERROR(Err0154, "right-hand expression has no address                                                                   $ ");
    SWAG_ERROR(Err0155, "[[#[Swag.Align]]] value not power of two; got [[%d]]                                                   $ ");
    SWAG_ERROR(Err0156, "first argument to [[@mkany]] cannot be [[null]]                                                        $ ");
    SWAG_ERROR(Err0157, "[[%s]] requires [[variable]] as first argument                                                         $ note: a variable is required when the second [[@init]] argument is omitted");
    SWAG_ERROR(Err0158, "[[#gettag]] last argument must be constant, got [[%s]]                                                 $ ");
    SWAG_ERROR(Err0159, "[[@countof]] received non-positive value [[%I64d]]                                                     $ ");
    SWAG_ERROR(Err0160, "[[@countof]] received non-positive value [[%d]]                                                        $ ");
    SWAG_ERROR(Err0161, "array dimension cannot be zero                                                                         $ ");
    SWAG_ERROR(Err0162, "call produces no value to assign                                                                       $ ");
    SWAG_ERROR(Err0163, "[[%s]] is %s, not a valid attribute                                                                    $ ");
    SWAG_ERROR(Err0164, "invalid bit-cast source type [[%s]]                                                                    $ note: only integer, rune, float, or pointer types are allowed");
    SWAG_ERROR(Err0165, "cannot bit-cast from [[%s]] to larger [[%s]]                                                           $ ");
    SWAG_ERROR(Err0166, "invalid bit-cast target type [[%s]]                                                                    $ note: only integer, rune, or float types are allowed");
    SWAG_ERROR(Err0168, "[[%s]] is %s; capture not allowed                                                                      $ note: capturing %s is not permitted");
    SWAG_ERROR(Err0169, "[[%s]] is not plain old data                                                                           $ note: structs with [[opDrop]], [[opPostCopy]], or [[opPostMove]] cannot be captured");
    SWAG_ERROR(Err0170, "[['%s']] appears as string, not single character                                                       $ ");
    SWAG_ERROR(Err0171, "character literal incompatible with type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0172, "multiple identifiers found, expected single %s                                                         $ hint: remove the [['.']] separator");
    SWAG_ERROR(Err0173, "[[const]] conflicts with move reference [[&&]]                                                         $ hint: remove [[const]] or use [[&]] instead");
    SWAG_ERROR(Err0174, "missing constant name after [[const]], found $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0175, "[[%s]] lacks [[opIndex]] in [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0176, "[[%s]] of type [[%s]] cannot be dereferenced as struct or pointer                                      $ ");
    SWAG_ERROR(Err0177, "constant address cannot be dereferenced at compile-time                                                $ ");
    SWAG_ERROR(Err0178, "type [[%s]] cannot be dereferenced                                                                     $ ");
    SWAG_ERROR(Err0179, "enum array type [[%s]] missing dimensions                                                              $ ");
    SWAG_ERROR(Err0180, "[['\\x']] requires two hexadecimal digits                                                              $ ");
    SWAG_ERROR(Err0181, "[['\\u']] requires four hexadecimal digits                                                             $ ");
    SWAG_ERROR(Err0182, "[['\\U']] requires eight hexadecimal digits                                                            $ ");
    SWAG_ERROR(Err0183, "[[%s]] is statement-only, not usable as expression                                                     $ ");
    SWAG_ERROR(Err0184, "missing expression after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0185, "expression replaced by type                                                                            $ ");
    SWAG_ERROR(Err0186, "[[%s]] declared but not defined                                                                        $ ");
    SWAG_ERROR(Err0187, "[[%s]] invoked with [[{}]] instead of [[()]]                                                           $ ");
    SWAG_ERROR(Err0188, "[[%s]] of type [[%s]] has no call arguments                                                            $ ");
    SWAG_ERROR(Err0189, "[[%s]] is [[%s]], not callable                                                                         $ ");
    SWAG_ERROR(Err0190, "[[%s]] found in interface, requires [[func]] or [[mtd]]                                                $ hint: declare interface functions with [[func]] or [[mtd]]");
    SWAG_ERROR(Err0191, "missing function name, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0192, "[[impl]] block generation only allowed in [[#message]] with [[Swag.CompilerMsgMask.AttributeGen]]      $ ");
    SWAG_ERROR(Err0193, "generic [[%s]] deduced as [[%s]], incompatible with [[%s]]                                             $ ");
    SWAG_ERROR(Err0194, "%s ([[%s]]) not valid as generic argument                                                              $ hint: generic arguments must be literals or types");
    SWAG_ERROR(Err0195, "[[%s]] expects literal but received type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0196, "missing generic name identifier, found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0197, "type starting with [[:]] not permitted for generic                                                     $ ");
    SWAG_ERROR(Err0198, "missing identifier %s, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0199, "missing identifier after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0200, "missing identifier, found $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0201, "constant array type [[%s]] cannot be initialized with single value                                     $ note: only variables can be initialized this way");
    SWAG_ERROR(Err0202, "[[%s]] to [[%s]] cast failed: implementation not found                                                 $ ");
    SWAG_ERROR(Err0203, "first parameter [[%s]] invalid; expected [[me]]                                                        $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0204, "interface function [[%s]] missing [[me]] as first parameter                                            $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0205, "[[%s]] is %s, not callable variable                                                                    $ ");
    SWAG_ERROR(Err0206, "[[%s]] is [[%s]], invalid literal suffix                                                               $ note: suffix must correspond to a valid type");
    SWAG_ERROR(Err0207, "[[%s]] invalid for float literals                                                                      $ note: only [[f32]] and [[f64]] suffixes are allowed");
    SWAG_ERROR(Err0208, "[[%s]] invalid literal suffix                                                                          $ ");
    SWAG_ERROR(Err0209, "[[%s]] cannot initialize [[%s]]; missing [[opAffectLiteral]]                                           $ ");
    SWAG_ERROR(Err0210, "mismatched logical operator; [[%s]] expected but found [[%s]]                                          $ ");
    SWAG_ERROR(Err0211, "[[#[Swag.Foreign]]] module name is empty                                                               $ ");
    SWAG_ERROR(Err0212, "[[.]] not permitted in [[#[Swag.Foreign]]] module name                                                 $ note: module names cannot contain file extensions");
    SWAG_ERROR(Err0213, "[[move]] applied to immutable expression of type [[%s]]                                                $ ");
    SWAG_ERROR(Err0214, "namespace body missing; found [[;]]                                                                    $ ");
    SWAG_ERROR(Err0215, "missing namespace name, found $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0216, "type [[%s]] cannot be negated                                                                          $ ");
    SWAG_ERROR(Err0217, "unsigned type [[%s]] cannot be negated                                                                 $ ");
    SWAG_ERROR(Err0218, "dereferencing null pointer                                                                             $ ");
    SWAG_ERROR(Err0219, "type [[%s]] cannot be declared nullable                                                                $ ");
    SWAG_ERROR(Err0220, "[[#[Swag.Opaque]]] incompatible with [[#global export]]                                                $ ");
    SWAG_ERROR(Err0221, "[[#[Swag.Opaque]]] requires [[public]] access                                                          $ ");
    SWAG_ERROR(Err0222, "operation [['%s']] on [[null]] value                                                                   $ ");
    SWAG_ERROR(Err0223, "[[#[Swag.Pack]]] value invalid; got [[%d]] (not 0 or power of two)                                     $ ");
    SWAG_ERROR(Err0224, "index operation on [[%s]] invalid; pointer arithmetic disallowed on [[%s]]                             $ ");
    SWAG_ERROR(Err0225, "pointer arithmetic disallowed                                                                          $ ");
    SWAG_ERROR(Err0226, "pointer arithmetic on [[void*]] disallowed                                                             $ note: [[void]] has no size");
    SWAG_ERROR(Err0227, "pointer arithmetic requires integer, got [[%s]]                                                        $ ");
    SWAG_ERROR(Err0228, "pointer slicing not supported on this type                                                             $ ");
    SWAG_ERROR(Err0229, "lower bound [[%lld]] exceeds upper bound [[%lld]]                                                      $ hint: use [[#reverse]] for descending ranges");
    SWAG_ERROR(Err0230, "type [[%s]] cannot define a range                                                                      $ note: only integer, rune, or float types can form ranges");
    SWAG_ERROR(Err0231, "[[ref]] applied to non-pointer or non-reference type [[%s]]                                            $ ");
    SWAG_ERROR(Err0232, "[[void]] used as return type where a value is required                                                 $ hint: remove the return type if the function returns nothing");
    SWAG_ERROR(Err0233, "[[opSlice]] returns unsupported type [[%s]]                                                            $ note: only [[string]] or [[slice]] return types are supported");
    SWAG_ERROR(Err0234, "[[%s]] type lacks [[opSlice]] implementation in [[%s]]                                                 $ ");
    SWAG_ERROR(Err0235, "multi-dimensional array cannot be sliced                                                               $ ");
    SWAG_ERROR(Err0236, "type [[%s]] does not support slicing                                                                   $ ");
    SWAG_ERROR(Err0237, "[[()]] used instead of [[{}]] for struct initialization                                                $ hint: use [[{}]] for struct initialization; [[()]] is for function calls");
    SWAG_ERROR(Err0238, "no struct name found, got $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0239, "[[%s]] to [[%s]] by index fails: no [[opIndexAffect]] defined                                          $ ");
    SWAG_ERROR(Err0240, "[[%s]] not found in [[%s]]                                                                             $ ");
    SWAG_ERROR(Err0241, "operator [['%s']] undefined for [[%s]] in [[%s]]                                                       $ ");
    SWAG_ERROR(Err0242, "suffix [[%s]] cannot apply to this literal                                                             $ note: suffixes are only valid for struct conversions");
    SWAG_ERROR(Err0243, "no identifier or type found after suffix start, got $$TKN$$                                            $ ");
    SWAG_ERROR(Err0244, "unexpected symbol [['%s']] detected                                                                    $ ");
    SWAG_ERROR(Err0245, "[[throw]] used with unsupported type [[%s]]                                                            $ note: only structs or [[@err]] expressions can be thrown");
    SWAG_ERROR(Err0246, "[[throw]] used without struct or [[@err]] expression                                                   $ ");
    SWAG_ERROR(Err0247, "token $$TKN$$ not valid as top-level instruction                                                       $ ");
    SWAG_ERROR(Err0248, "tuple compared with incompatible type [[%s]]                                                           $ note: tuples can only be compared with other tuples");
    SWAG_ERROR(Err0249, "tuple cannot be dereferenced as pointer                                                                $ ");
    SWAG_ERROR(Err0250, "unpacking failed: tuple contains no elements                                                           $ ");
    SWAG_ERROR(Err0251, "type [[%s]] does not support unpacking                                                                 $ note: only struct or tuple types can be unpacked");
    SWAG_ERROR(Err0252, "generic type cannot be evaluated                                                                       $ ");
    SWAG_ERROR(Err0253, "[[%s]] second parameter type [[%s]] incompatible                                                       $ hint: implement or use [[opAssign]] for value copying");
    SWAG_ERROR(Err0254, "[[const]] version of [[%s]] is not supported                                                           $ ");
    SWAG_ERROR(Err0255, "[[internal]] field [[%s]] is not accessible                                                            $ ");
    SWAG_ERROR(Err0256, "type [[%s]] not allowed as attribute parameter                                                         $ ");
    SWAG_ERROR(Err0257, "type [[%s]] not valid for [[@cvaarg]]                                                                  $ ");
    SWAG_ERROR(Err0258, "[[%s]] parameter requires [[bool]], got [[%s]]                                                         $ ");
    SWAG_ERROR(Err0259, "[[%s]] parameter requires [[string]], got [[%s]]                                                       $ ");
    SWAG_ERROR(Err0260, "right side [[%s]] cannot cast to [[struct]]                                                            $ ");
    SWAG_ERROR(Err0261, "left side [[%s]] cannot cast to [[interface]]                                                          $ ");
    SWAG_ERROR(Err0262, "[[%s]] first parameter type mismatch: expected [[%s]], got [[%s]]                                      $ ");
    SWAG_ERROR(Err0263, "[[%s]] is %s, not a valid type                                                                         $ ");
    SWAG_ERROR(Err0264, "token $$TKN$$ does not form a valid type declaration                                                   $ ");
    SWAG_ERROR(Err0265, "token $$TKN$$ invalid after array dimensions                                                           $ ");
    SWAG_ERROR(Err0266, "value [[0x%x]] is not a valid Unicode code point                                                       $ ");
    SWAG_ERROR(Err0267, "[[#alias]] allowed only in [[#[Swag.Macro]]] or [[#[Swag.Mixin]]]                                      $ ");
    SWAG_ERROR(Err0268, "[[#uniq]] allowed only in [[#[Swag.Mixin]]]                                                            $ ");
    SWAG_ERROR(Err0269, "[[me]] cannot be used as a variable name                                                               $ ");
    SWAG_ERROR(Err0270, "no variable name found, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0271, "missing variable name after [[,]], got $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0272, "missing match variable name, got $$TKN$$                                                               $ ");
    SWAG_ERROR(Err0273, "no variable name found after [[%s]], got $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0274, "[[void]] used as variable type                                                                         $ ");
    SWAG_ERROR(Err0275, "[[if]] cannot declare multiple variables                                                               $ note: [[if]] allows only a single variable declaration");
    SWAG_ERROR(Err0276, "[[using]] cannot declare multiple variables                                                            $ note: [[using]] allows only a single variable declaration");
    SWAG_ERROR(Err0277, "[[with]] cannot declare multiple variables                                                             $ note: [[with]] allows only a single variable declaration");
    SWAG_ERROR(Err0278, "[[void*]] cannot be dereferenced                                                                       $ note: [[void]] has no size");
    SWAG_ERROR(Err0279, "[[#elif]] without preceding [[#if]]                                                                    $ ");
    SWAG_ERROR(Err0280, "[[#else]] without preceding [[#if]] or [[#elif]]                                                       $ ");
    SWAG_ERROR(Err0281, "[[)]] without matching [[(]]                                                                           $ ");
    SWAG_ERROR(Err0282, "[[]]] without matching [[[]]                                                                           $ ");
    SWAG_ERROR(Err0283, "[[elif]] without preceding [[if]]                                                                      $ ");
    SWAG_ERROR(Err0284, "[[else]] without preceding [[if]] or [[elif]]                                                          $ ");
    SWAG_ERROR(Err0285, "[[}]] without matching [[{]]                                                                           $ ");
    SWAG_ERROR(Err0286, "[['*/']] after %s without matching [['/*']]                                                            $ ");
    SWAG_ERROR(Err0287, "character [[0x%x]] exceeds [[u16]] range                                                               $ ");
    SWAG_ERROR(Err0288, "character [[0x%x]] exceeds [[u8]] range                                                                $ ");
    SWAG_ERROR(Err0289, "[[%I64u]] does not fit in [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0290, "binary literal exceeds 64-bit range                                                                    $ ");
    SWAG_ERROR(Err0291, "hexadecimal literal exceeds 64-bit range                                                               $ ");
    SWAG_ERROR(Err0292, "numeric literal exceeds 64-bit range                                                                   $ ");
    SWAG_ERROR(Err0293, "negation of [[%I64d]] exceeds [[s64]]: [[%I64u]] too large                                             $ ");
    SWAG_ERROR(Err0294, "negation of [[%d]] exceeds [[%s]] range: [[%u]] too large                                              $ ");
    SWAG_ERROR(Err0295, "[[impl]] syntax targets [[%s]], but [[%s]] is [[%s]]                                                   $ ");
    SWAG_ERROR(Err0296, "%s [[%s]] cannot be public: %s [[%s]] has [[%s]] access                                                $ ");
    SWAG_ERROR(Err0297, "[[%s]] cannot be internal: struct declared [[public]]                                                  $ ");
    SWAG_ERROR(Err0298, "[[%s]] cannot be public: struct declared [[internal]]                                                  $ ");
    SWAG_ERROR(Err0299, "signature mismatch in [[%s.%s]]                                                                        $ ");
    SWAG_ERROR(Err0300, "[[impl]] declared outside scope of [[%s]]                                                              $ ");
    SWAG_ERROR(Err0301, "[[#dependencies]] only allowed in [[module.swg]] or [[.swgs]]                                          $ ");
    SWAG_ERROR(Err0302, "[[#global using]] only allowed in [[module.swg]] or [[.swgs]]                                          $ ");
    SWAG_ERROR(Err0303, "[[#global]] must appear at top of file                                                                 $ ");
    SWAG_ERROR(Err0304, "[[#import]] only allowed in [[module.swg]] or [[.swgs]]                                                $ ");
    SWAG_ERROR(Err0305, "[[@index]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                      $ ");
    SWAG_ERROR(Err0306, "[[#inject]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                     $ ");
    SWAG_ERROR(Err0307, "[[#load]] only allowed in [[module.swg]] or [[.swgs]]                                                  $ ");
    SWAG_ERROR(Err0308, "[[#macro]] only valid in [[#[Swag.Macro]]] functions                                                   $ ");
    SWAG_ERROR(Err0311, "[[#up]] only valid in [[#[Swag.Macro]]] functions                                                      $ ");
    SWAG_ERROR(Err0312, "[[%s]] conflicts with [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0313, "[[%s]] cannot be combined with another [[%s]]                                                          $ ");
    SWAG_ERROR(Err0314, "[[%s]] not allowed in struct special function [[%s]]                                                   $ ");
    SWAG_ERROR(Err0315, "[[%s]] requires [[throw]] on [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0316, "[[':]] before [[{]] not allowed                                                                        $ hint: use [[':']] or [[{]], not both");
    SWAG_ERROR(Err0317, "[[@cvastart]] only valid in functions with [[cvarargs]] parameter                                      $ ");
    SWAG_ERROR(Err0318, "[[@kindof]] applied to invalid type [[%s]]                                                             $ note: only allowed on [[any]] or interface types");
    SWAG_ERROR(Err0319, "missing type after [[code]], got $$TKN$$                                                               $ note: [[code]] requires type or [[void]]");
    SWAG_ERROR(Err0321, "[[alias]] not allowed on struct members                                                                $ ");
    SWAG_ERROR(Err0322, "[[break]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                       $ ");
    SWAG_ERROR(Err0323, "missing [[me]] after [[const]] in parameter, got $$TKN$$                                               $ ");
    SWAG_ERROR(Err0324, "[[const]] allowed only after [[mtd]], not [[func]]                                                     $ ");
    SWAG_ERROR(Err0325, "[[continue]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                    $ ");
    SWAG_ERROR(Err0326, "[[default]] not valid in [[#[Swag.Complete]]] [[switch]]                                               $ ");
    SWAG_ERROR(Err0327, "[[fallthrough]] not valid in last [[case]]                                                             $ hint: remove it");
    SWAG_ERROR(Err0328, "[[fallthrough]] only valid inside [[case]] blocks                                                      $ ");
    SWAG_ERROR(Err0329, "[[fallthrough]] only valid in [[switch]] statement                                                     $ ");
    SWAG_ERROR(Err0330, "[[for]] not allowed in [[enum]] implementation                                                         $ ");
    SWAG_ERROR(Err0331, "[[impl]] on function only valid inside [[impl for]] block                                              $ ");
    SWAG_ERROR(Err0332, "match variable used with multiple [[case]] values                                                      $ hint: each [[case]] must have exactly one value");
    SWAG_ERROR(Err0333, "match variable used without [[switch]] expression                                                      $ ");
    SWAG_ERROR(Err0334, "[[moveref]] applied to compile-time value                                                              $ note: only allowed on pointers or references");
    SWAG_ERROR(Err0335, "[[moveref]] applied to immutable expression                                                            $ ");
    SWAG_ERROR(Err0336, "[[moveref]] applied to unsupported type [[%s]]                                                         $ ");
    SWAG_ERROR(Err0337, "[[moveref]] must precede function arguments                                                            $ ");
    SWAG_ERROR(Err0338, "[[mtd]] only valid inside struct [[impl]] blocks                                                       $ hint: use [[func]] instead");
    SWAG_ERROR(Err0339, "[[mtd]] cannot declare lambda type                                                                     $ hint: use [[func]] instead");
    SWAG_ERROR(Err0340, "[[mtd]] only valid inside struct [[impl]] blocks                                                       $ hint: use [[func]] instead");
    SWAG_ERROR(Err0341, "[[return]] after [[=>]] is implicit                                                                    $ hint: remove it");
    SWAG_ERROR(Err0342, "[[retval]] used in function without return value                                                       $ ");
    SWAG_ERROR(Err0343, "[[retval]] only valid inside function body                                                             $ ");
    SWAG_ERROR(Err0344, "[[retval]] used for return type instead of local variable type                                         $ ");
    SWAG_ERROR(Err0345, "[[me]] only valid inside enum or struct [[impl]] blocks                                                $ ");
    SWAG_ERROR(Err0346, "[[throw]] not valid on attributes                                                                      $ ");
    SWAG_ERROR(Err0347, "[[using]] applied to unsupported type [[%s]]                                                           $ note: only valid on a pointer to a struct");
    SWAG_ERROR(Err0348, "[[using]] not valid at [[%s]] scope                                                                    $ ");
    SWAG_ERROR(Err0349, "[[using]] applied to invalid type [[%s]]                                                               $ ");
    SWAG_ERROR(Err0350, "[[using]] applied to unsupported type [[%s]]                                                           $ note: only valid on a namespace, struct, or enum");
    SWAG_ERROR(Err0351, "[[using]] not valid on interface functions                                                             $ ");
    SWAG_ERROR(Err0352, "[[var]] not allowed in struct declarations                                                             $ hint: declare as [[fieldName: Type]] instead");
    SWAG_ERROR(Err0354, "[[verify]] not valid on [[%s]]                                                                         $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0355, "[[verify]] only valid on functions, not structs                                                        $ hint: use [[where]] instead");
    SWAG_ERROR(Err0356, "[[where]] used without [[switch]] expression                                                           $ ");
    SWAG_ERROR(Err0357, "[[where]] not valid on [[%s]]                                                                          $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0358, "global variables cannot declare [[public]]                                                             $ ");
    SWAG_ERROR(Err0359, "[[%s]] only valid at global scope                                                                      $ ");
    SWAG_ERROR(Err0360, "[[%s]] cannot precede [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0361, "alias name not allowed on %s                                                                           $ ");
    SWAG_ERROR(Err0362, "unnamed parameters cannot receive assignments                                                          $ ");
    SWAG_ERROR(Err0363, "attribute placed after [[%s]]                                                                          $ hint: move the attribute before [[%s]]");
    SWAG_ERROR(Err0364, "[[#[Swag.CalleeReturn]]] not valid on %s                                                               $ ");
    SWAG_ERROR(Err0365, "[[#[Swag.CalleeReturn]]] only valid on macro or mixin [[%s]]                                           $ note: requires [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] attribute");
    SWAG_ERROR(Err0366, "[[#[Swag.Complete]]] used without [[switch]] expression                                                $ ");
    SWAG_ERROR(Err0367, "[[#[Swag.Complete]]] only valid on [[opAffect]] or [[opAffectLiteral]], not [[%s]]                     $ ");
    SWAG_ERROR(Err0368, "[[#[Swag.Discardable]]] only valid on lambda variables, not [[%s]]                                     $ ");
    SWAG_ERROR(Err0369, "[[#[Swag.Implicit]]] not valid on generic %s                                                           $ ");
    SWAG_ERROR(Err0370, "[[#[Swag.Implicit]]] only valid on [[opAffect]], [[opAffectLiteral]], or [[opCast]], not [[%s]]        $ ");
    SWAG_ERROR(Err0371, "[[#[Swag.Inline]]] not valid on %s                                                                     $ ");
    SWAG_ERROR(Err0372, "[[#[Swag.Macro]]] not valid on %s                                                                      $ ");
    SWAG_ERROR(Err0373, "[[#[Swag.Mixin]]] not valid on %s                                                                      $ ");
    SWAG_ERROR(Err0374, "[[#[Swag.NotGeneric]]] not valid on %s                                                                 $ ");
    SWAG_ERROR(Err0375, "[[#[Swag.Offset]]] not valid on interface members                                                      $ ");
    SWAG_ERROR(Err0376, "[[%s]] not allowed in this context                                                                     $ ");
    SWAG_ERROR(Err0377, "[[%s]] not allowed inside [[#global]] block                                                            $ note: requires [[Swag.AttributeUsage.File]]");
    SWAG_ERROR(Err0378, "[[%s]] not valid on %s                                                                                 $ ");
    SWAG_ERROR(Err0379, "attribute not allowed in this location                                                                 $ ");
    SWAG_ERROR(Err0380, "[[AttributeUsage.Gen]] requires [[AttributeUsage.Struct]] or [[AttributeUsage.Enum]]                   $ ");
    SWAG_ERROR(Err0381, "[[{]] not valid after [[try]], [[assume]], or [[catch]]                                                $ ");
    SWAG_ERROR(Err0382, "[[%s]] name violates naming rule for [[opVisit]] (must start uppercase)                                $ ");
    SWAG_ERROR(Err0383, "closure used outside function scope                                                                    $ note: closures allowed only within functions");
    SWAG_ERROR(Err0384, "[[#callerfunction]] used outside parameter list                                                        $ ");
    SWAG_ERROR(Err0385, "[[#callerlocation]] used outside parameter list                                                        $ ");
    SWAG_ERROR(Err0386, "lambda or closure default parameters redefined                                                         $ ");
    SWAG_ERROR(Err0387, "[[me]] cannot have a default value                                                                     $ ");
    SWAG_ERROR(Err0388, "lambda parameters cannot define default values                                                         $ ");
    SWAG_ERROR(Err0389, "[['_']] appears at end of number                                                                       $ ");
    SWAG_ERROR(Err0390, "[['_']] starts exponent part                                                                           $ ");
    SWAG_ERROR(Err0391, "[['_']] starts fractional part                                                                         $ ");
    SWAG_ERROR(Err0392, "consecutive [['_']] detected                                                                           $ ");
    SWAG_ERROR(Err0393, "[[%s]] is %s, cannot be caught                                                                         $ ");
    SWAG_ERROR(Err0394, "[[%s]] nested inside [[%s]]                                                                            $ hint: use only one [[try]], [[catch]], or [[assume]] block");
    SWAG_ERROR(Err0395, "[[%s]] used outside function, macro, or mixin                                                          $ ");
    SWAG_ERROR(Err0396, "[[%s]] requires [[throw]] on [[%s]]                                                                    $ note: the function is missing the [[throw]] attribute");
    SWAG_ERROR(Err0397, "function declared directly in struct                                                                   $ hint: place it inside an [[impl]] block instead");
    SWAG_ERROR(Err0398, "type required but value provided                                                                       $ ");
    SWAG_ERROR(Err0399, "value required but type provided                                                                       $ ");
    SWAG_ERROR(Err0400, "%s [[%s]] defines no generic arguments                                                                 $ ");
    SWAG_ERROR(Err0401, "match variable only valid in [[interface]] or [[any]] [[switch]], not [[%s]]                           $ ");
    SWAG_ERROR(Err0402, "move reference [[&&]] only valid in function parameters                                                $ ");
    SWAG_ERROR(Err0403, "range used in [[switch]] without expression                                                            $ ");
    SWAG_ERROR(Err0405, "[[%s]] outside corresponding [[impl]] block                                                            $ ");
    SWAG_ERROR(Err0406, "[[%s]] outside corresponding [[impl]] block                                                            $ note: [[impl for]] is only allowed for interface implementations");
    SWAG_ERROR(Err0407, "top-level [[using]] appears after declarations                                                         $ ");
    SWAG_ERROR(Err0408, "tuple unpacking not permitted in %s                                                                    $ ");
    SWAG_ERROR(Err0409, "type [[%s]] only valid in function parameters                                                          $ ");
    SWAG_ERROR(Err0410, "[[#code]] only valid in [[#[Swag.Macro]]] or [[#[Swag.Mixin]]]                                         $ ");
    SWAG_ERROR(Err0411, "variadic argument not last                                                                             $ ");
    SWAG_ERROR(Err0412, "variadic parameter not last                                                                            $ ");
    SWAG_ERROR(Err0413, "variadic parameters not allowed in inline functions                                                    $ ");
    SWAG_ERROR(Err0414, "[[#alias]] missing trailing number ([[#alias0]], [[#alias1]], etc.)                                    $ ");
    SWAG_ERROR(Err0415, "library name missing after [[#foreignlib]], got $$TKN$$                                                $ hint: add [[#foreignlib \"path/to/library\"]]");
    SWAG_ERROR(Err0416, "error string missing after [[#global testerror]], got $$TKN$$                                          $ ");
    SWAG_ERROR(Err0417, "warning string missing after [[#global testwarning]], got $$TKN$$                                      $ ");
    SWAG_ERROR(Err0418, "boolean expression missing after [[#if]], got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0419, "[[Swag.CompilerMsgMask]] parameter missing for [[#message]]                                            $ ");
    SWAG_ERROR(Err0420, "[[#uniq]] missing trailing number ([[#uniq0]], [[#uniq1]], etc.)                                       $ ");
    SWAG_ERROR(Err0423, "closing [[%s]] %s missing                                                                              $ ");
    SWAG_ERROR(Err0424, "[[:]] or [[{]] missing                                                                                 $ ");
    SWAG_ERROR(Err0425, "[[(]] missing to start [[%s]] arguments, got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0426, "[[(]] missing to start parameters, got $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0427, "[[in]] missing after [[for]] variable [[%s]]                                                           $ hint: write [[for variable in count]]");
    SWAG_ERROR(Err0429, "[[case]] expression missing, got [[%s]]                                                                $ ");
    SWAG_ERROR(Err0430, "capture variable missing between [[,]] and [['|']]                                                     $ hint: add a variable or remove the trailing comma");
    SWAG_ERROR(Err0431, "element expression missing before [[%s]]                                                               $ ");
    SWAG_ERROR(Err0432, "[[foreach]] variable missing between [[,]] and [[:]]                                                   $ note: the first value is [[value]], the second is [[index]]");
    SWAG_ERROR(Err0433, "boolean expression missing after [[if]], got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0434, "[[impl]] missing before [[%s]] to mark implementation of [[%s]]                                        $ ");
    SWAG_ERROR(Err0435, "[[for]] count missing before [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0436, "[[%s.%s]] missing in [[switch]]                                                                        $ ");
    SWAG_ERROR(Err0437, "boolean expression missing before [[%s]]                                                               $ ");
    SWAG_ERROR(Err0438, "assignment or arguments missing after %s, got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0439, "%s [[%s]] missing arguments between [[()]]                                                             $ ");
    SWAG_ERROR(Err0440, "[[opVisit]] missing [[#[Swag.Macro]]] attribute                                                        $ ");
    SWAG_ERROR(Err0441, "attribute name missing before [[(]]                                                                    $ ");
    SWAG_ERROR(Err0442, "[[%s]] lacks error handling                                                                            $ hint: add [[try]], [[catch]], or [[assume]] to handle it");
    SWAG_ERROR(Err0443, "assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0444, "%s missing default value: previous parameter defines one                                               $ ");
    SWAG_ERROR(Err0445, "array [[%s]] of type [[%s]] missing index                                                              $ hint: add an index in brackets");
    SWAG_ERROR(Err0446, "line break or [[;]] missing after %s, got $$TKN$$                                                      $ hint: add a line break or separate with [[;]]");
    SWAG_ERROR(Err0447, "enum name missing before [['{']]                                                                       $ ");
    SWAG_ERROR(Err0448, "enum name missing before [[':']]                                                                       $ ");
    SWAG_ERROR(Err0449, "parameters [[()]] missing before [[{]]                                                                 $ hint: add [[()]] after [[%s]] if there are no parameters");
    SWAG_ERROR(Err0450, "[[%s]] missing generic parameters                                                                      $ ");
    SWAG_ERROR(Err0451, "struct [[%s]] missing generic parameters: [[%s]] is generic                                            $ ");
    SWAG_ERROR(Err0452, "struct [[%s]] unresolved: generic field [[%s]]                                                         $ ");
    SWAG_ERROR(Err0453, "no generic parameters between [[()]]                                                                   $ hint: remove [[()]] if not generic");
    SWAG_ERROR(Err0454, "[[let]] variable not initialized                                                                       $ ");
    SWAG_ERROR(Err0455, "constant not initialized                                                                               $ ");
    SWAG_ERROR(Err0456, "reference not initialized                                                                              $ ");
    SWAG_ERROR(Err0457, "enum value [[%s]] of type [[%s]] not initialized                                                       $ ");
    SWAG_ERROR(Err0458, "[[%s]] not initialized: [[%s]] has no zero value                                                       $ ");
    SWAG_ERROR(Err0459, "interface [[%s]] not fully implemented for [[%s]]                                                      $ ");
    SWAG_ERROR(Err0460, "[[%s]] arguments missing between [[()]]                                                                $ ");
    SWAG_ERROR(Err0461, "parameter type missing after [[:]] or assignment                                                       $ note: cannot mix inferred and explicit types");
    SWAG_ERROR(Err0462, "%s missing name: previous arguments are named                                                          $ ");
    SWAG_ERROR(Err0463, "namespace name missing before [[;]]                                                                    $ ");
    SWAG_ERROR(Err0464, "namespace name missing before [['{']]                                                                  $ ");
    SWAG_ERROR(Err0465, "parameter name and [[:]] missing before [[%s]]                                                         $ ");
    SWAG_ERROR(Err0466, "assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0467, "special function [[%s]] missing parameters                                                             $ ");
    SWAG_ERROR(Err0469, "special function [[%s]] missing return type                                                            $ ");
    SWAG_ERROR(Err0470, "special function [[%s]] missing return type [[%s]]                                                     $ ");
    SWAG_ERROR(Err0471, "[[#[Swag.Discardable]]] [[%s]] missing return value                                                    $ ");
    SWAG_ERROR(Err0472, "%s missing return statement with [[%s]]                                                                $ ");
    SWAG_ERROR(Err0473, "return type already inferred as [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0474, "return value of type [[%s]] missing                                                                    $ ");
    SWAG_ERROR(Err0475, "control path missing return value in %s                                                                $ ");
    SWAG_ERROR(Err0476, "upper bound missing after [[until]]                                                                    $ hint: use [[to]] to slice until the end");
    SWAG_ERROR(Err0477, "struct name missing before [['{']]                                                                     $ ");
    SWAG_ERROR(Err0478, "type missing after [[#type]], got $$TKN$$                                                              $ ");
    SWAG_ERROR(Err0479, "assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0480, "%s [[%s]] not used as first argument of [[%s]]                                                         $ ");
    SWAG_ERROR(Err0482, "non-contiguous [[#alias]] in [[%s]]                                                                    $ note: [[#alias%u]] is missing in the sequence");
    SWAG_ERROR(Err0483, "[[cvarargs]] parameter cannot be passed to another function                                            $ ");
    SWAG_ERROR(Err0484, "[[%s]] is static member of [[%s]], used as instance field                                              $ ");
    SWAG_ERROR(Err0485, "[[%s]] is %s, not a value                                                                              $ ");
    SWAG_ERROR(Err0486, "attribute [[%s]] has insufficient arguments                                                            $ ");
    SWAG_ERROR(Err0487, "%s [[%s]] has insufficient call arguments                                                              $ ");
    SWAG_ERROR(Err0488, "%s [[%s]] has insufficient generic arguments                                                           $ ");
    SWAG_ERROR(Err0489, "[[%s]] has insufficient generic parameters                                                             $ ");
    SWAG_ERROR(Err0490, "array requires [[%d]] values, got [[%d]]                                                               $ ");
    SWAG_ERROR(Err0491, "tuple requires [[%d]] values, got [[%d]]                                                               $ ");
    SWAG_ERROR(Err0492, "[[%s]] requires [[%d]] parameters, got [[%d]]                                                          $ ");
    SWAG_ERROR(Err0493, "[[%s]] requires at least [[%d]] parameters, got [[%d]]                                                 $ ");
    SWAG_ERROR(Err0494, "[[#alias]] number [[%u]] exceeds valid range                                                           $ note: valid range is [0, 31]");
    SWAG_ERROR(Err0495, "[[#uniq]] number [[%u]] exceeds valid range                                                            $ note: valid range is [0, 31]");
    SWAG_ERROR(Err0496, "[[#up]] count [[%u]] exceeds valid range                                                               $ note: valid range is [1, 255]");
    SWAG_ERROR(Err0497, "array dimensions exceed [[254]]                                                                        $ ");
    SWAG_ERROR(Err0498, "callback limited to [[%d]] parameters, got [[%d]]                                                      $ ");
    SWAG_ERROR(Err0499, "enum value [[%s]] exceeds range of [[%s]]                                                              $ ");
    SWAG_ERROR(Err0500, "index [[%I64u]] exceeds maximum index of [[%I64u]]                                                     $ ");
    SWAG_ERROR(Err0501, "[[%s]] expansion exceeds [[--limit-inline:%d]]                                                         $ ");
    SWAG_ERROR(Err0502, "slice bound [[%I64u]] exceeds maximum value of [[%I64u]]                                               $ ");
    SWAG_ERROR(Err0503, "lower bound [[%I64u]] exceeds upper bound [[%I64u]]                                                    $ ");
    SWAG_ERROR(Err0504, "[[until]] value cannot be zero                                                                         $ ");
    SWAG_ERROR(Err0505, "variadic arguments exceed [[%d]], got [[%d]]                                                           $ ");
    SWAG_ERROR(Err0506, "no matching overload found                                                                             $ ");
    SWAG_ERROR(Err0507, "struct [[%s]] directly or indirectly references itself                                                 $ ");
    SWAG_ERROR(Err0508, "duplicate visibility specifier [[%s]] conflicts with [[#global export]]                                $ hint: remove [[public]] since [[#global export]] already makes all declarations public");
    SWAG_ERROR(Err0509, "parameter already nullable due to [[null]] default                                                     $ hint: remove [[#null]] attribute");
    SWAG_ERROR(Err0510, "field name [[%s]] is reserved                                                                          $ note: names beginning with [[item]] are reserved");
    SWAG_ERROR(Err0511, "function name [[%s]] is reserved                                                                       $ ");
    SWAG_ERROR(Err0512, "identifier [[_]] is reserved by compiler                                                               $ note: single [[_]] is reserved for internal use");
    SWAG_ERROR(Err0513, "identifier [[%s]] uses reserved [[__]] prefix                                                          $ note: [[__]] prefix is reserved for compiler use");
    SWAG_ERROR(Err0514, "namespace [[%s]] is reserved                                                                           $ ");
    SWAG_ERROR(Err0515, "%s [[%s]] forms a semantic dependency cycle                                                            $ ");
    SWAG_ERROR(Err0516, "expression result discarded                                                                            $ hint: remove the unused expression");
    SWAG_ERROR(Err0517, "too many arguments: expected [[%d]], found [[%d]]                                                      $ ");
    SWAG_ERROR(Err0518, "too many generic arguments for %s [[%s]]: expected [[%d]], found [[%d]]                                $ ");
    SWAG_ERROR(Err0519, "[[%s]] defines one generic parameter but received [[%d]]                                               $ ");
    SWAG_ERROR(Err0520, "[[%s]] has an invalid number of generic parameters                                                     $ ");
    SWAG_ERROR(Err0521, "excessive initializers: expected [[%d]] for [[%s]], found [[%d]]                                       $ hint: remove extra initializer values");
    SWAG_ERROR(Err0522, "array initialized with [[%d]] values but only [[%d]] allowed                                           $ ");
    SWAG_ERROR(Err0523, "tuple initialized with [[%d]] values but only [[%d]] allowed                                           $ ");
    SWAG_ERROR(Err0524, "type [[%s]] initialized with incorrect number of values                                                $ ");
    SWAG_ERROR(Err0525, "[[%s]] declared [[%d]] parameters but received [[%d]]                                                  $ ");
    SWAG_ERROR(Err0526, "tuple source type incompatible with target tuple                                                       $ ");
    SWAG_ERROR(Err0527, "closure type cannot be cast to lambda type                                                             $ ");
    SWAG_ERROR(Err0528, "type value ([[typeinfo]]) cannot cast to compile-time type ([[%s]])                                    $ ");
    SWAG_ERROR(Err0529, "interface cannot cast to struct                                                                        $ note: interface can only be cast to a struct pointer");
    SWAG_ERROR(Err0530, "[[%s]] cannot be cast to [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0531, "[[%s]] cannot be initialized from [[%s]]                                                               $ ");
    SWAG_ERROR(Err0532, "range mixes signed and unsigned bounds                                                                 $ note: lower and upper bounds must have the same sign");
    SWAG_ERROR(Err0533, "[[%s]] declared return type [[%s]] but returned [[%s]]                                                 $ ");
    SWAG_ERROR(Err0534, "slice bound must be integer, got [[%s]]                                                                $ ");
    SWAG_ERROR(Err0535, "[[%s]] assignment expects [[%s]], found [[%s]]                                                         $ ");
    SWAG_ERROR(Err0536, "expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0537, "UFCS received [[%s]] instead of [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0538, "[[#message]] received [[%s]] instead of [[Swag.CompilerMsgMask]]                                       $ ");
    SWAG_ERROR(Err0539, "pointer type [[%s]] incompatible with second argument [[%s]]                                           $ note: first argument must be a pointer to [[%s]] or match second argument type [[%s]]");
    SWAG_ERROR(Err0540, "[[struct]] not allowed as [[orelse]] argument                                                          $ ");
    SWAG_ERROR(Err0541, "type [[%s]] not allowed as [[orelse]] argument                                                         $ ");
    SWAG_ERROR(Err0542, "type [[%s]] cannot be used in [[switch]]                                                               $ ");
    SWAG_ERROR(Err0543, "[[with]] applied to enum variable [[%s]] instead of enum type                                          $ note: [[with]] applies to enum types, not variables");
    SWAG_ERROR(Err0544, "[[with]] applied to type [[%s]] not allowed                                                            $ note: requires a namespace, enum, struct, or struct pointer type");
    SWAG_ERROR(Err0545, "tuple type not valid as [[@countof]] argument                                                          $ ");
    SWAG_ERROR(Err0546, "tuple type not valid as [[@dataof]] argument                                                           $ ");
    SWAG_ERROR(Err0547, "type [[%s]] not valid as [[@dataof]] argument                                                          $ ");
    SWAG_ERROR(Err0548, "[[#include]] received [[%s]] instead of [[string]]                                                     $ ");
    SWAG_ERROR(Err0549, "[[#inject]] received [[%s]] instead of [[code]]                                                        $ ");
    SWAG_ERROR(Err0550, "[[where]] received [[%s]] instead of [[bool]]                                                          $ ");
    SWAG_ERROR(Err0551, "[[#runes]] received [[%s]] instead of [[string]]                                                       $ ");
    SWAG_ERROR(Err0552, "[[@mkany]] second argument received [[%s]] instead of [[typeinfo]]                                     $ ");
    SWAG_ERROR(Err0553, "[[@mkinterface]] second argument received [[%s]] instead of [[typeinfo]]                               $ ");
    SWAG_ERROR(Err0554, "[[%s]] first argument must be block pointer for multiple values, found [[%s]]                          $ ");
    SWAG_ERROR(Err0555, "[[%s]] first argument must be block pointer for variable count, found [[%s]]                           $ ");
    SWAG_ERROR(Err0556, "[[%s]] first argument requires block pointer, found [[%s]]                                             $ ");
    SWAG_ERROR(Err0557, "[[%s]] first argument requires pointer, found [[%s]]                                                   $ ");
    SWAG_ERROR(Err0558, "[[@mkinterface]] first argument requires pointer or struct, found [[%s]]                               $ ");
    SWAG_ERROR(Err0559, "[[@mkstring]] first argument requires [[*u8]], found [[%s]]                                            $ ");
    SWAG_ERROR(Err0560, "[[@mkcallback]] received [[%s]] instead of function pointer                                            $ ");
    SWAG_ERROR(Err0561, "expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0562, "[[@countof]] received [[%s]] instead of integer                                                        $ ");
    SWAG_ERROR(Err0563, "[[%s]] count received [[%s]] instead of integer                                                        $ ");
    SWAG_ERROR(Err0564, "[[@mkinterface]] third argument received [[%s]] instead of interface name                              $ ");
    SWAG_ERROR(Err0565, "[[%s]] received [[%s]] instead of [[string]]                                                           $ ");
    SWAG_ERROR(Err0566, "static array cannot use [[void]] as element type                                                       $ ");
    SWAG_ERROR(Err0567, "array dimension received [[%s]] instead of integer                                                     $ ");
    SWAG_ERROR(Err0568, "array index received [[%s]] instead of integer                                                         $ ");
    SWAG_ERROR(Err0569, "right-hand tuple incompatible with left-hand tuple                                                     $ ");
    SWAG_ERROR(Err0570, "function pointer cannot assign to constant                                                             $ ");
    SWAG_ERROR(Err0571, "slice can only compare with [[null]], not [[%s]]                                                       $ ");
    SWAG_ERROR(Err0572, "interface can only compare with [[null]], another interface, or [[typeinfo]]                           $ ");
    SWAG_ERROR(Err0573, "[[any]] can only compare with [[null]] or [[typeinfo]], not [[%s]]                                     $ ");
    SWAG_ERROR(Err0574, "tuples do not support comparison operations                                                            $ ");
    SWAG_ERROR(Err0575, "operator [['%s']] not supported for type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0576, "operator [['%s']] not supported for left operand type [[%s]]                                           $ ");
    SWAG_ERROR(Err0577, "operator [['%s']] not supported for right operand type [[%s]]                                          $ ");
    SWAG_ERROR(Err0578, "immutable [[%s]] cannot cast to mutable [[%s]]                                                         $ ");
    SWAG_ERROR(Err0579, "[[%s]] first argument requires mutable type, found [[%s]]                                              $ ");
    SWAG_ERROR(Err0580, "[[%s]] first argument requires mutable pointer, found [[%s]]                                           $ ");
    SWAG_ERROR(Err0581, "[[%s]] first argument requires mutable variable, found [[%s]]                                          $ ");
    SWAG_ERROR(Err0582, "expected enum type but received [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0583, "type [[%s]] not valid for enum                                                                         $ ");
    SWAG_ERROR(Err0584, "type [[%s]] not valid for [[#[Swag.EnumFlags]]] enum                                                   $ note: requires an unsigned integer type");
    SWAG_ERROR(Err0585, "type [[%s]] not valid for [[#[Swag.EnumIndex]]] enum                                                   $ note: requires an integer type");
    SWAG_ERROR(Err0586, "type [[%s]] not valid for [[#[Swag.NoDuplicate]]] enum                                                 $ ");
    SWAG_ERROR(Err0587, "[[cstring]] not valid as enum base type                                                                $ hint: use [[string]] instead");
    SWAG_ERROR(Err0588, "expected enum type [[%s]], found [[%s]]                                                                $ ");
    SWAG_ERROR(Err0589, "enum array type [[%s]] must be [[const]]                                                               $ hint: declare as [[const %s]]");
    SWAG_ERROR(Err0590, "enum slice type [[%s]] must be [[const]]                                                               $ hint: declare as [[const %s]]");
    SWAG_ERROR(Err0591, "field [[%s]] requires [[%s]], found [[%s]]                                                             $ ");
    SWAG_ERROR(Err0592, "expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0593, "tuple types not allowed as generic parameters                                                          $ ");
    SWAG_ERROR(Err0594, "bit inversion [['~']] invalid for type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0595, "operator [['%s']] requires integer, found [[%s]]                                                       $ ");
    SWAG_ERROR(Err0596, "operator [['%s']] invalid for type [[%s]]                                                              $ ");
    SWAG_ERROR(Err0597, "operator [['%s']] invalid for left operand type [[%s]]                                                 $ ");
    SWAG_ERROR(Err0598, "operator [['%s']] invalid for right operand type [[%s]]                                                $ ");
    SWAG_ERROR(Err0599, "operator [['%s']] invalid for tuple types                                                              $ ");
    SWAG_ERROR(Err0600, "value pointer [[%s]] cannot cast to block pointer [[%s]]                                               $ ");
    SWAG_ERROR(Err0601, "cannot cast [[%s]] to pointer type                                                                     $ ");
    SWAG_ERROR(Err0602, "return type [[%s]] conflicts with deduced [[%s]]                                                       $ ");
    SWAG_ERROR(Err0603, "return type [[%s]] conflicts with deduced nothing                                                      $ ");
    SWAG_ERROR(Err0604, "[[#ast]] returns [[%s]] instead of [[string]]                                                          $ ");
    SWAG_ERROR(Err0605, "callback returns invalid type [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0606, "missing closing [[)]] in attribute arguments                                                           $ ");
    SWAG_ERROR(Err0607, "missing closing quote before line end                                                                  $ ");
    SWAG_ERROR(Err0608, "missing closing [['*/']]                                                                               $ ");
    SWAG_ERROR(Err0609, "missing closing [['\"']] before line end                                                               $ hint: use [[\"\"\"string\"\"\"]] for multi-line strings");
    SWAG_ERROR(Err0610, "invalid [[#scope]] identifier, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0611, "[[#up]] requires integer literal, got $$TKN$$                                                          $ ");
    SWAG_ERROR(Err0612, "invalid token after [[break]], got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0613, "invalid token after [[discard]], got $$TKN$$                                                           $ ");
    SWAG_ERROR(Err0614, "[[foreach]] specialization invalid for [[%s]]                                                          $ note: only valid for struct visits");
    SWAG_ERROR(Err0615, "[[switch]] missing [[case]] or [[default]], got $$TKN$$                                                $ ");
    SWAG_ERROR(Err0616, "[[with]] used with invalid expression type                                                             $ ");
    SWAG_ERROR(Err0617, "[['=']] not allowed in expression                                                                      $ hint: use [['==']] for comparison");
    SWAG_ERROR(Err0618, "invalid alias target, got $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0619, "invalid alias name after [[%s]], got $$TKN$$                                                           $ ");
    SWAG_ERROR(Err0620, "invalid variable alias name, got $$TKN$$                                                               $ ");
    SWAG_ERROR(Err0621, "variable aliasing not allowed for [[%s]]: not macro or mixin                                           $ ");
    SWAG_ERROR(Err0622, "missing argument name before [[:]], got $$TKN$$                                                        $ ");
    SWAG_ERROR(Err0623, "invalid attribute name, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0624, "[[->]] return type not allowed in attribute                                                            $ ");
    SWAG_ERROR(Err0625, "invalid binary digit $$TKN$$                                                                           $ note: binary literals may only contain [[0]] or [[1]]");
    SWAG_ERROR(Err0626, "invalid character [['%s']]                                                                             $ ");
    SWAG_ERROR(Err0627, "[['==']] not allowed here                                                                              $ hint: use [['=']] for assignment");
    SWAG_ERROR(Err0628, "compiler instruction cannot have a scope                                                               $ note: compiler instructions must not be scoped");
    SWAG_ERROR(Err0629, "default values not allowed for variadic parameters                                                     $ ");
    SWAG_ERROR(Err0630, "missing embedded instruction or curly block, got $$TKN$$                                               $ ");
    SWAG_ERROR(Err0631, "missing embedded instruction, got $$TKN$$                                                              $ ");
    SWAG_ERROR(Err0632, "invalid enum value identifier, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0633, "invalid enum name, got $$TKN$$                                                                         $ ");
    SWAG_ERROR(Err0634, "[[#[Swag.Foreign]]] function cannot have a body                                                        $ ");
    SWAG_ERROR(Err0635, "duplicate function [[%s]]                                                                              $ hint: mark all overloads with [[#[Swag.Overload]]]");
    SWAG_ERROR(Err0636, "generic arguments not allowed after %s                                                                 $ ");
    SWAG_ERROR(Err0637, "generic arguments not allowed after name                                                               $ ");
    SWAG_ERROR(Err0638, "generic arguments not allowed after variable [[%s]]                                                    $ ");
    SWAG_ERROR(Err0639, "generic function [[%s]] marked [[#[Swag.NotGeneric]]]                                                  $ ");
    SWAG_ERROR(Err0640, "generic parameters not allowed in [[%s]]                                                               $ ");
    SWAG_ERROR(Err0641, "generic parameters not allowed in [[%s]]: marked [[#[Swag.NotGeneric]]]                                $ ");
    SWAG_ERROR(Err0642, "generic parameters not allowed in interface function                                                   $ ");
    SWAG_ERROR(Err0643, "invalid hexadecimal digit $$TKN$$                                                                      $ note: hexadecimal digits must be [[0-9]], [[A-F]], or [[a-f]]");
    SWAG_ERROR(Err0644, "consecutive identifiers not allowed                                                                    $ ");
    SWAG_ERROR(Err0645, "identifier [[%s]] invalid at file level                                                                $ note: only mixin function calls are allowed at the top level");
    SWAG_ERROR(Err0646, "intrinsic cannot have a scope                                                                          $ note: intrinsics must not define a scope");
    SWAG_ERROR(Err0647, "modifier [[%s]] invalid for [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0648, "parameter name not allowed in lambda type declaration                                                  $ hint: remove the parameter name");
    SWAG_ERROR(Err0649, "[[foreach]] allows maximum [[2]] alias names, got [[%u]]                                               $ ");
    SWAG_ERROR(Err0650, "invalid number prefix 0$$TKN$$                                                                         $ hint: use [[0x]] for hexadecimal or [[0b]] for binary literals");
    SWAG_ERROR(Err0651, "invalid parameter name, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0652, "compiler %s cannot have parameters                                                                     $ hint: replace with [[{]] to start a block");
    SWAG_ERROR(Err0653, "[[#[Swag.CalleeReturn]]] function cannot declare return value                                          $ ");
    SWAG_ERROR(Err0654, "%s cannot return a value                                                                               $ ");
    SWAG_ERROR(Err0655, "missing [[->]] before $$TKN$$ in return type                                                           $ ");
    SWAG_ERROR(Err0656, "[[->]] expected but got $$TKN$$ in return type                                                         $ ");
    SWAG_ERROR(Err0657, "return type [[%s]] not allowed                                                                         $ ");
    SWAG_ERROR(Err0658, "[[%s]] has invalid return type [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0659, "invalid symbol [['%s']] after %s                                                                       $ ");
    SWAG_ERROR(Err0660, "invalid variable name or [[?]], got $$TKN$$                                                            $ ");
    SWAG_ERROR(Err0661, "declaration cannot begin with a type                                                                   $ ");
    SWAG_ERROR(Err0662, "type alias not allowed as [[impl]] block name                                                          $ hint: use the direct type name instead");
    SWAG_ERROR(Err0663, "type declaration not allowed after [[me]]                                                              $ note: [[me]] is implicitly typed");
    SWAG_ERROR(Err0664, "type declaration not allowed after unnamed parameter                                                   $ ");
    SWAG_ERROR(Err0665, "invalid type suffix after %s                                                                           $ ");
    SWAG_ERROR(Err0666, "[[%s]] not recognized as valid [[#global]] instruction                                                 $ ");
    SWAG_ERROR(Err0667, "[[mtd]] lambda missing capture parameters                                                              $ hint: use [[func]] or declare captures between [[|...|]]");
    SWAG_ERROR(Err0669, "type [[%s]] cannot be visited                                                                          $ note: missing [[opVisit]] implementation");
    SWAG_ERROR(Err0670, "visit specialization [[%s]] not found in [[%s]]                                                        $ ");
    SWAG_ERROR(Err0671, "attribute [[%s]] not found                                                                             $ ");
    SWAG_ERROR(Err0672, "attribute [[%s]] not found in [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0673, "[[%s]] not recognized as compiler instruction                                                          $ note: compiler instructions must begin with [['#']]");
    SWAG_ERROR(Err0674, "enum [[%s]] not found                                                                                  $ ");
    SWAG_ERROR(Err0675, "enum value [[%s]] not found in [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0676, "[['%c']] not recognized as valid escape code                                                           $ ");
    SWAG_ERROR(Err0677, "field [[%s]] not found in [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0678, "file [[\"%s\"]] not found                                                                              $ ");
    SWAG_ERROR(Err0679, "function [[%s]] not found                                                                              $ ");
    SWAG_ERROR(Err0680, "function [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0404, "statement starting with [[.]] only allowed in [[with]] or [[mtd]]                                      $ hint: use [[me.field]] or wrap the expression in [[with]]");
    SWAG_ERROR(Err0681, "shorthand [[%s]] unresolved: no [[enum]], [[with]], or [[mtd]] context                                 $ ");
    SWAG_ERROR(Err0682, "identifier [[%s]] not found                                                                            $ ");
    SWAG_ERROR(Err0683, "identifier [[%s]] not found in [[%s]] or %s [[%s]]                                                     $ ");
    SWAG_ERROR(Err0684, "identifier [[%s]] not found in tuple                                                                   $ ");
    SWAG_ERROR(Err0685, "function [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0686, "[[%s]] not recognized as valid intrinsic                                                               $ ");
    SWAG_ERROR(Err0687, "scope label [[%s]] not found                                                                           $ ");
    SWAG_ERROR(Err0688, "method [[%s]] not found in [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0689, "named argument [[%s]] not found                                                                        $ ");
    SWAG_ERROR(Err0690, "[[%s]] not recognized as compiler pass                                                                 $ ");
    SWAG_ERROR(Err0691, "struct member [[%s]] not found                                                                         $ ");
    SWAG_ERROR(Err0692, "struct [[%s]] not found                                                                                $ ");
    SWAG_ERROR(Err0693, "struct [[%s]] not found in [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0694, "type [[%s]] not found                                                                                  $ ");
    SWAG_ERROR(Err0695, "[[\"%s\"]] not valid [[#[Swag.ExportType]]]                                                            $ hint: use [[\"methods\"]] or [[\"nozero\"]]");
    SWAG_ERROR(Err0696, "[[\"%s\"]] is not a valid [[#[Swag.Match]]] value                                                      $ hint: use [[\"where\"]] or [[\"me\"]]");
    SWAG_ERROR(Err0697, "[[\"%s\"]] is not a valid [[#[Swag.Optim]]] value                                                      $ hint: use [[\"bytecode\"]] or [[\"backend\"]]");
    SWAG_ERROR(Err0698, "[[\"%s\"]] is not a recognized safety option                                                           $ hint: use one of [[\"boundcheck|overflow|math|switch|unreachable|dyncast|bool|nan|null\"]]");
    SWAG_ERROR(Err0699, "variable [[%s]] not found                                                                              $ ");
    SWAG_ERROR(Err0700, "variable [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0701, "tuple has [[%u]] fields, but [[%u]] variables were provided                                            $ ");
    SWAG_ERROR(Err0702, "tuple has only [[%u]] fields, but [[%u]] variables were provided                                       $ ");
    SWAG_ERROR(Err0703, "array dimension could not be inferred: missing initialization                                          $ ");
    SWAG_ERROR(Err0704, "flag [[%s]] value cannot be derived: previous value not a power of two                                 $ ");
    SWAG_ERROR(Err0705, "generic arguments for %s [[%s]] could not be determined                                                $ ");
    SWAG_ERROR(Err0706, "identifier [[%s]] could not be resolved                                                                $ ");
    SWAG_ERROR(Err0707, "failed to resolve semantic reference                                                                   $ ");
    SWAG_ERROR(Err0708, "variable type could not be inferred: expression is [[null]]                                            $ ");
    SWAG_ERROR(Err0709, "[[%s]] cannot be part of a union: contains [[%s]]                                                      $ ");
    SWAG_ERROR(Err0710, "no matching variable found for alias [[%s]]                                                            $ hint: remove the alias");
    SWAG_ERROR(Err0711, "function [[%s]] return value cannot be ignored                                                         $ hint: add [[discard]] to explicitly ignore it");
    SWAG_ERROR(Err0712, "intrinsic [[%s]] return value cannot be ignored                                                        $ ");
    SWAG_ERROR(Err0713, "lambda [[%s]] return value cannot be ignored                                                           $ hint: add [[discard]] to explicitly ignore it");
    SWAG_ERROR(Err0714, "[[#import]] location already defined                                                                   $ ");
    SWAG_ERROR(Err0715, "module [[%s]] location already defined as [[%s]]                                                       $ ");
    SWAG_ERROR(Err0716, "[[#import]] version already defined                                                                    $ ");
    SWAG_ERROR(Err0717, "module [[%s]] version already defined as [[%s]]                                                        $ ");
    SWAG_ERROR(Err0718, "runtime execution error occurred                                                                       $ ");
    SWAG_ERROR(Err0719, "variable creation failed: generic type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0720, "constant creation failed: generic type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0721, "%s has no generic arguments provided                                                                   $ ");
    SWAG_ERROR(Err0722, "generic function [[%s]] lacks required generic arguments                                               $ ");
    SWAG_ERROR(Err0723, "generic struct [[%s]] lacks required generic arguments                                                 $ ");
    SWAG_ERROR(Err0724, "failed to fetch file [[%s]] for module [[%s]]                                                          $ ");
    SWAG_ERROR(Err0725, "unable to delete file [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0726, "file encoding must be ASCII, UTF-8, or UTF-8-BOM                                                       $ ");
    SWAG_ERROR(Err0727, "documentation page [[%s]] not found                                                                    $ ");
    SWAG_ERROR(Err0728, "file [[%s]] not found in module [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0729, "[[#include]] file [[%s]] cannot be opened                                                              $ ");
    SWAG_ERROR(Err0730, "file [[%s]] cannot be opened                                                                           $ ");
    SWAG_ERROR(Err0731, "file [[%s]] cannot be opened                                                                           $ ");
    SWAG_ERROR(Err0732, "file [[%s]] cannot be opened for writing                                                               $ ");
    SWAG_ERROR(Err0733, "source file [[%s]] cannot be read                                                                      $ ");
    SWAG_ERROR(Err0734, "file [[%s]] cannot be written                                                                          $ ");
    SWAG_ERROR(Err0735, "directory [[%s]] could not be created                                                                  $ ");
    SWAG_ERROR(Err0736, "dependency module folder [[\"%s\"]] not found                                                          $ ");
    SWAG_ERROR(Err0737, "left expression is not assignable                                                                      $ ");
    SWAG_ERROR(Err0738, "expression missing or invalid, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0739, "[[#import]] location format is invalid                                                                 $ hint: use [[location=\"mode@accesspath\"]], where mode is [[swag]] or [[disk]]");
    SWAG_ERROR(Err0740, "[[#import]] version format is invalid                                                                  $ ");
    SWAG_ERROR(Err0741, "major version missing: revision set to [[%d]]                                                          $ ");
    SWAG_ERROR(Err0742, "revision missing: build number set to [[%d]]                                                           $ ");
    SWAG_ERROR(Err0743, "literal [[%I64u]] cannot be converted                                                                  $ ");
    SWAG_ERROR(Err0744, "current file scope cannot be referenced                                                                $ ");
    SWAG_ERROR(Err0745, "[[%s]] not valid as function return type                                                               $ ");
    SWAG_ERROR(Err0746, "[[%s]] cannot be converted to runtime typeinfo                                                         $ ");
    SWAG_ERROR(Err0747, "[[void]] expression cannot initialize a value                                                          $ ");
    SWAG_ERROR(Err0748, "variable name [[%s]] starts with [[#]], not allowed                                                    $ hint: only [[#uniq]] and [[#alias]] are permitted");
    SWAG_ERROR(Err0749, "[[#dependencies]] directive not at file level                                                          $ ");
    SWAG_ERROR(Err0750, "[[#global testerror]] allowed only in test files ([[./tests]] folder)                                  $ ");
    SWAG_ERROR(Err0751, "[[#global testwarning]] allowed only in test files ([[./tests]] folder)                                $ ");
    SWAG_ERROR(Err0752, "[[#import]] only allowed inside [[#dependencies]] block                                                $ ");
    SWAG_ERROR(Err0753, "[[#load]] only allowed inside [[#dependencies]] block                                                  $ ");
    SWAG_ERROR(Err0754, "[[#test]] allowed only in test modules ([[./tests]] folder)                                            $ ");
    SWAG_ERROR(Err0755, "missing module name after [[#import]], got $$TKN$$                                                     $ ");
    SWAG_ERROR(Err0756, "missing filename after [[#include]], got $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0757, "[[#main]] function not found                                                                           $ ");
    SWAG_ERROR(Err0758, "immutable variable lacks initialization                                                                $ ");
    SWAG_ERROR(Err0759, "no error detected where at least one was required                                                      $ ");
    SWAG_ERROR(Err0760, "no warning detected where at least one was required                                                    $ ");
    SWAG_ERROR(Err0761, "call level limit [[--limit-recurse-bc:%d]] exceeded                                                    $ ");
    SWAG_ERROR(Err0762, "%s size exceeds [[0x%I64x]] bytes                                                                      $ ");
    SWAG_ERROR(Err0763, "data segment [[%s]] size exceeds [[0x%I64x]] bytes                                                     $ ");
    SWAG_ERROR(Err0764, "process [[%s]] creation failed                                                                         $ ");
    SWAG_ERROR(Err0765, "process [[%s]] creation failed (::CreatePipe)                                                          $ ");
    SWAG_ERROR(Err0766, "type [[%s]] incompatible with command-line [[%s]] type [[%s]]                                          $ ");
    SWAG_ERROR(Err0767, "operation [['%s']] invalid: left enum [[%s]] not marked [[#[Swag.EnumFlags]]]                          $ hint: add the [[#[Swag.EnumFlags]]] attribute to the left enum");
    SWAG_ERROR(Err0768, "operation [['%s']] invalid: right enum [[%s]] not marked [[#[Swag.EnumFlags]]]                         $ hint: add the [[#[Swag.EnumFlags]]] attribute to the right enum");
    SWAG_ERROR(Err0769, "location path missing after [[#import]], got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0770, "version string missing after [[#import]], got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0771, "module dependency [[%s]] not found                                                                     $ ");
    SWAG_ERROR(Err0772, "foreign function [[%s]] not found                                                                      $ ");
    SWAG_ERROR(Err0774, "[[\"%s\"]] is not a valid [[location]] value                                                           $ hint: use [[\"swag\"]] or [[\"disk\"]]");
    SWAG_ERROR(Err0775, "module [[%s]] dependency has version mismatch                                                          $ ");
    SWAG_ERROR(Err0776, "module [[%s]] dependency version [[%s]] not found                                                      $ ");
    SWAG_ERROR(Err0777, "module [[%s]] dependency version [[%s]] not found at [[%s]]                                            $ ");
    SWAG_ERROR(Err0778, "module [[%s]] dependency has empty [[location]]                                                        $ ");
    SWAG_ERROR(Err0779, "failed to load module [[%s]] for foreign function [[%s]]                                               $ ");
    SWAG_ERROR(Err0780, "generic type could not be inferred: embedded tuples too complex                                        $ ");
    SWAG_ERROR(Err0781, "interface resolution failed for generic type [[%s]]                                                    $ ");
    SWAG_ERROR(Err0782, "%s [[%s]] type could not be determined                                                                 $ ");
    SWAG_ERROR(Err0783, "[[#nameof]] argument evaluation failed                                                                 $ ");
    SWAG_ERROR(Err0784, "[[#stringof]] argument evaluation failed                                                               $ ");
    SWAG_ERROR(Err0786, "[[%s]] used incorrectly with arguments                                                                 $ hint: [[%s]] is a value, not a function call; remove [['(']]");
    SWAG_ERROR(Err0428, "struct member cannot initialize with function pointer                                                  $ ");
    SWAG_ERROR(Err0353, "icon patch operation failed in [[%s]] : %s                                                             $ ");
    SWAG_ERROR(Err0785, "second [[#import]] argument missing or invalid, got $$TKN$$                                            $ hint: use [[location:\"location\"]]");
    SWAG_ERROR(Err0773, "third [[#import]] argument missing or invalid, got $$TKN$$                                             $ hint: use [[version:\"version\"]]");
    SWAG_ERROR(Err0668, "UFCS type [[%s]] incompatible                                                                          $ ");
    SWAG_ERROR(Err0310, "[[%s]] not marked [[#[Swag.Mixin]]]                                                                    $ hint: only mixin calls are allowed at the top level");

    SWAG_ERROR(Err0167, nullptr);
    SWAG_ERROR(Err0421, nullptr);
    SWAG_ERROR(Err0309, nullptr);
    SWAG_ERROR(Err0422, nullptr);
    SWAG_ERROR(Err0468, nullptr);
    SWAG_ERROR(Err0060, nullptr);
    SWAG_ERROR(Err0079, nullptr);
    SWAG_ERROR(Err0320, nullptr);
    SWAG_ERROR(Err0481, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
}

Utf8 formErr(ErrorID idx, ...)
{
    va_list args;
    va_start(args, idx);
    auto result = form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
    result      = form(result.cstr(), args);
    va_end(args);
    return result;
}

Utf8 toErr(ErrorID idx)
{
    return form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
}
