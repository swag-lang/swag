#include "pch.h"
#include "Report/ErrorIds.h"

#undef SWAG_ERROR
#define SWAG_ERROR(__enum) #__enum
const char* g_ErrList[] = {
#include "ErrorList.h"

};

Utf8 g_E[MaxErrors];
#undef SWAG_ERROR
#define SWAG_ERROR(__n, __msg)                 \
    do                                         \
    {                                          \
        SWAG_ASSERT(g_E[(int) (__n)].empty()); \
        g_E[(int) (__n)] = __msg;              \
    } while (0)

void initErrors()
{
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Fat0001, "[cmdline] [[%s]] needs [[true]] or [[false]] as argument ([[%s]] provided)");
    SWAG_ERROR(Fat0002, "[cmdline] [[%s]] needs a string argument");
    SWAG_ERROR(Fat0003, "[cmdline] [[%s]] needs an integer argument ([[%s]] provided)");
    SWAG_ERROR(Fat0004, "[cmdline] [[%s]] needs an integer argument");
    SWAG_ERROR(Fat0005, "[cmdline] [[%s]] requires [[%s]]");
    SWAG_ERROR(Fat0006, "[cmdline] [[--stack-size]] out of range (%s provided, range is [%s, %s])");
    SWAG_ERROR(Fat0007, "[cmdline] unknown argument [[%s]]");
    SWAG_ERROR(Fat0008, "[cmdline] unsupported [[--arch]] [[%s]] for SCBE backend");
    SWAG_ERROR(Fat0009, "[cmdline] unsupported [[--os]] [[%s]] for SCBE backend");
    SWAG_ERROR(Fat0010, "[fatal] cache directory [[%s]] not found");
    SWAG_ERROR(Fat0011, "[fatal] cannot find the dependency module [[%s]] in that workspace");
    SWAG_ERROR(Fat0012, "[fatal] duplicated module name; more than one module with the name [[%s]] is present in the workspace (path is [[%s]])");
    SWAG_ERROR(Fat0013, "[fatal] expected workspace folder [[--workspace]]");
    SWAG_ERROR(Fat0014, "[fatal] failed because of compiler bootstrap issues");
    SWAG_ERROR(Fat0015, "[fatal] failed because of compiler runtime issues");
    SWAG_ERROR(Fat0016, "[fatal] failed to create cache directory [[%s]]");
    SWAG_ERROR(Fat0017, "[fatal] failed to create directory [[%s]]");
    SWAG_ERROR(Fat0018, "[fatal] failed to create file [[%s]]");
    SWAG_ERROR(Fat0019, "[fatal] failed to create public directory [[%s]]");
    SWAG_ERROR(Fat0020, "[fatal] failed to create script file [[%s]]");
    SWAG_ERROR(Fat0021, "[fatal] failed to create target directory [[%s]]");
    SWAG_ERROR(Fat0022, "[fatal] failed to delete directory [[%s]]");
    SWAG_ERROR(Fat0023, "[fatal] failed to delete file [[%s]]");
    SWAG_ERROR(Fat0024, "[fatal] invalid [[--tag:%s]] value (%s)");
    SWAG_ERROR(Fat0025, "[fatal] invalid script file extension; expected [[.swgs]], found [[%s]] instead");
    SWAG_ERROR(Fat0026, "[fatal] invalid [[Swag]] command [[%s]]");
    SWAG_ERROR(Fat0027, "[fatal] invalid workspace [[%s]]; missing [[modules/]] or [[tests/]] sub-folder");
    SWAG_ERROR(Fat0028, "[fatal] module [[%s]] already exists in [[/modules]]");
    SWAG_ERROR(Fat0029, "[fatal] cannot find the module [[%s]] in that workspace");
    SWAG_ERROR(Fat0030, "[fatal] cannot find the file [[%s]]");
    SWAG_ERROR(Fat0031, "[fatal] script file missing (use [[--file:<filename>.swgs]])");
    SWAG_ERROR(Fat0032, "[fatal] unexpected compile tag value [[%s]] (use [[--tag:%s]])");
    SWAG_ERROR(Fat0033, "[fatal] unknown compile tag type [[%s]] (use [[--tag:%s]])");
    SWAG_ERROR(Fat0034, "[fatal] workspace folder [[%s]] already exists");
    SWAG_ERROR(Fat0035, "[fatal] cannot find the workspace folder [[%s]]");
    SWAG_ERROR(Fat0036, "[fatal] unable to locate the windows sdk folder");
    SWAG_ERROR(Fat0037, "[fatal] missing file or folder to format (use [[--file]])");
    SWAG_ERROR(Fat0038, "[fatal] [[%s]] is not a valid swag file");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    // Any
    SWAG_ERROR(Saf0001, "safety violation $ invalid attempt to cast from [[any]] to [[%s]] $ [[#[Swag.Safety(\"dyncast\")]]] is true");
    SWAG_ERROR(Saf0002, "safety violation $ invalid attempt to cast a null value to [[%s]] $ [[#[Swag.Safety(\"dyncast\")]]] is true");
    // Bool
    SWAG_ERROR(Saf0003, "safety violation $ usage of an invalid boolean value $ [[#[Swag.Safety(\"bool\")]]] is true");
    // BoundCheck
    SWAG_ERROR(Saf0004, "safety violation $ attempt to access an index outside of bounds $ [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0005, "safety violation $ operation failed as the lower bound exceeds the upper bound $ [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0006, "safety violation $ slicing operation failed as the lower bound exceeds the upper bound $ [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0007, "safety violation $ slicing operation failed as the upper bound is out of bounds $ [[#[Swag.Safety(\"boundcheck\")]]] is true");
    // Math
    SWAG_ERROR(Saf0008, "safety violation $ [[@abs]] operation resulted in an overflow (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0009, "safety violation $ [[@acos]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0010, "safety violation $ [[@asin]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0011, "safety violation $ [[@log]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0012, "safety violation $ [[@log10]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0013, "safety violation $ [[@log2]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0014, "safety violation $ [[@sqrt]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0015, "safety violation $ [[@pow]] received an invalid argument (type is [[%s]]) $ [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0016, "safety violation $ division by zero $ [[#[Swag.Safety(\"math\")]]] is true");
    // NaN
    SWAG_ERROR(Saf0017, "safety violation $ invalid use of a NaN (Not a Number) value $ [[#[Swag.Safety(\"nan\")]]] is true");
    // Null
    SWAG_ERROR(Saf0018, "safety violation $ attempt to dereference a null pointer $ [[#[Swag.Safety(\"null\")]]] is true");
    SWAG_ERROR(Saf0019, "safety violation $ attempt to throw a non-existent error $ [[#[Swag.Safety(\"null\")]]] is true");
    // Overflow
    SWAG_ERROR(Saf0020, "safety violation $ casting a negative value [[%I64d]] to an unsigned type [[%s]] is not allowed $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0021, "safety violation $ casting a negative value of type [[%s]] to an unsigned type [[%s]] is not allowed $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0022, "safety violation $ casting a negative value [[%g]] to an unsigned type [[%s]] is not allowed $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0023, "safety violation $ value [[%s]] ([[%I64u]]) exceeds the limits of type [[%s]] $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0024, "safety violation $ value [[%I64u]] exceeds the limits of type [[%s]] $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0025, "safety violation $ value [[%I64d]] exceeds the limits of type [[%s]] $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0026, "safety violation $ value [[%g]] exceeds the limits of type [[%s]] $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0027, "safety violation $ operation [['%s']] resulted in an overflow (type is [[%s]]) $ [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0028, "safety violation $ truncation from [[%s]] to [[%s]] is not allowed $ [[#[Swag.Safety(\"overflow\")]]] is true");
    // Switch
    SWAG_ERROR(Saf0029, "safety violation $ unexpected switch value encountered $ [[#[Swag.Safety(\"switch\")]]] is true");

    SWAG_ERROR(Saf0030, nullptr);
    SWAG_ERROR(Saf0031, nullptr);
    SWAG_ERROR(Saf0032, nullptr);
    SWAG_ERROR(Saf0033, nullptr);
    SWAG_ERROR(Saf0034, nullptr);
    SWAG_ERROR(Saf0035, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(San0002, "[sanity] division by zero    $ possible division by zero");
    SWAG_ERROR(San0004, "[sanity] frame escape        $ possible return value from the stack memory");
    SWAG_ERROR(San0006, "[sanity] null dereference    $ possible dereference of a null pointer");
    SWAG_ERROR(San0007, "[sanity] stack overwrite     $ possible overwrite of the stack memory at offset [[%lld]] (stack size is [[%lld]])");
    SWAG_ERROR(San0008, "[sanity] uninitialized usage $ possible usage of uninitialized memory");
    SWAG_ERROR(San0010, "[sanity] overflow            $ possible overflow in [['%s']] (type is [[%s]])");
    SWAG_ERROR(San0001, "[sanity] null argument       $ possible null argument when calling [[%s]]");
    SWAG_ERROR(San0003, nullptr);
    SWAG_ERROR(San0005, nullptr);
    SWAG_ERROR(San0009, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Wrn0001, "%s");
    SWAG_ERROR(Wrn0002, "deprecated usage                $ the %s [[%s]] is deprecated (attribute [[#[Swag.Deprecated]]])                            $ ");
    SWAG_ERROR(Wrn0003, "unchanged local variable        $ the variable [[%s]] remains unchanged after its declaration                               $ if you don't need to modify it, declare it with [[let]] instead of [[var]] to ensure immutability");
    SWAG_ERROR(Wrn0004, "unchanged local variable        $ the variable [[%s]] is declared to its default value, and is never modified after that    $ are you sure this variable is necessary?");
    SWAG_ERROR(Wrn0005, "unreachable code                $ this code is not reachable and will never be executed                                     $ ");
    SWAG_ERROR(Wrn0006, "unused %s                       $ the %s [[%s]] is not used                                                                 $ ");
    SWAG_ERROR(Wrn0007, "unecessary [[break]]            $ this [[break]] is not necessary                                                           $ a [[break]] is only required in an empty [[case]] block");
    SWAG_ERROR(Wrn0008, "suggestion [[elif]]             $ the [[if]] statement after the [[else]] can be simplified by using a single [[elif]]      $ consider replacing [[else: if]] with [[elif]]");
    SWAG_ERROR(Wrn0009, "suggestion [[#elif]]            $ the [[#if]] statement after the [[#else]] can be simplified by using a single [[#elif]]   $ consider replacing [[#else: #if]] with [[#elif]]");
    SWAG_ERROR(Wrn0010, "suggestion [[where]]            $ the [[if]] statement can be simplified by using a [[where]] clause                        $ ");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Err0001, "%s");
    SWAG_ERROR(Err0002, "%s");
    SWAG_ERROR(Err0003, "%s");
    SWAG_ERROR(Err0004, "already defined %s                                $ cannot redefine the %s [[%s]] because it already exists %s                                                                               $ ");
    SWAG_ERROR(Err0005, "already defined [[#global export]]                $ cannot have more than one [[#global export]] per file                                                                                    $ ");
    SWAG_ERROR(Err0006, "already defined [[#main]]                         $ cannot have more than one [[#main]] function per module                                                                                  $ ");
    SWAG_ERROR(Err0007, "already defined [[default]]                       $ cannot have more than one [[default]] statement per [[switch]]                                                                           $ ");
    SWAG_ERROR(Err0008, "already defined access specifier                  $ cannot use the access specifier [[%s]] after [[%s]]                                                                                      $ ");
    SWAG_ERROR(Err0009, "already defined enum                              $ cannot redefine the enum [[%s]] because it already exists                                                                                $ ");
    SWAG_ERROR(Err0010, "already defined enum value                        $ cannot redefine the enum value [[%s]] because it already exists with the same underlying value                                           $ ");
    SWAG_ERROR(Err0011, "already defined field name                        $ cannot redefine the field name [[%s]] because it already exists                                                                          $ ");
    SWAG_ERROR(Err0012, "already defined generic symbol                    $ cannot redefine the generic symbol [[%s]] because it already exists                                                                      $ ");
    SWAG_ERROR(Err0013, "already defined switch value                      $ cannot use the [[switch]] value [[%d]] because it already exists                                                                         $ ");
    SWAG_ERROR(Err0014, "already defined switch value                      $ cannot use the [[switch]] value [[%f]] because it already exists                                                                         $ ");
    SWAG_ERROR(Err0015, "already defined switch value                      $ cannot use the [[switch]] value [[%s]] because it already exists                                                                         $ ");
    SWAG_ERROR(Err0016, "already defined switch value                      $ cannot use the [[switch]] value [[\"%s\"]] because it already exists in another [[case]]                                                 $ ");
    SWAG_ERROR(Err0017, "already defined symbol                            $ cannot redefine the %s [[%s]] because it already exists                                                                                  $ ");
    SWAG_ERROR(Err0018, "ambiguous [[using]]                               $ cannot use [[using]] on two variables of the same type ([[%s]])                                                                          $ ");
    SWAG_ERROR(Err0019, "ambiguous cast                                    $ cannot cast from the type [[%s]] to the type [[%s]] because it is ambiguous                                                              $ ");
    SWAG_ERROR(Err0020, "ambiguous enum resolution                         $ cannot resolve the enum value [[%s]] because it is ambiguous                                                                             $ ");
    SWAG_ERROR(Err0021, "ambiguous interface conversion                    $ cannot cast from the type [[%s]] to the interface [[%s]] because it is ambiguous                                                         $ ");
    SWAG_ERROR(Err0022, "ambiguous resolution                              $ cannot resolve [[%s]] because it is ambiguous                                                                                            $ ");
    SWAG_ERROR(Err0023, "ambiguous resolution                              $ cannot resolve the %s [[%s]] because it is ambiguous                                                                                     $ ");
    SWAG_ERROR(Err0024, "ambiguous resolution                              $ cannot resolve the generic %s [[%s]] because it is ambiguous                                                                             $ ");
    SWAG_ERROR(Err0025, "ambiguous syntax                                  $ cannot resolve ambiguous declaration within lambda parameters                                                                            $ ");
    SWAG_ERROR(Err0026, "bytecode stack overflow                           $ cannot exceed the stack size limit of [[%s]] set by [[--stack-size]]                                                                     $ ");
    SWAG_ERROR(Err0027, "capture size overflow                             $ cannot capture the total requested size of [[%u]] bytes because it exceeds the maximum authorized size of [[%u]]                         $ ");
    SWAG_ERROR(Err0028, "compile-time assertion failed                     $ cannot proceed because the [[#assert]] expression was evaluated to false                                                                 $ ");
    SWAG_ERROR(Err0029, "compile-time evaluation failed                    $ cannot transform the function return slice (a slice of type [[%s]]) to a compile-time value                                              $ ");
    SWAG_ERROR(Err0030, "compile-time evaluation failed                    $ cannot transform the function return value (type is [[%s]]) to a constant array because [[opCount]] returns [[0]]                        $ ");
    SWAG_ERROR(Err0031, "compile-time evaluation failed                    $ cannot transform the function return value (type is [[%s]]) to a constant array because [[opSlice]] returns an empty slice               $ ");
    SWAG_ERROR(Err0032, "compile-time evaluation required                  $ cannot convert the type [[%s]] to a constant expression                                                                                  $ ");
    SWAG_ERROR(Err0033, "compile-time evaluation required                  $ cannot evaluate the [[#include]] filename argument at compile time                                                                       $ ");
    SWAG_ERROR(Err0034, "compile-time evaluation required                  $ cannot evaluate the [[%s]] argument at compile time                                                                                      $ ");
    SWAG_ERROR(Err0035, "compile-time evaluation required                  $ cannot evaluate the [[%s]] message at compile time                                                                                       $ ");
    SWAG_ERROR(Err0036, "compile-time evaluation required                  $ cannot evaluate the [[case]] expression at compile time                                                                                  $ the [[switch]] is marked with [[#[Swag.Complete]]], so the expression must be constant");
    SWAG_ERROR(Err0037, "compile-time evaluation required                  $ cannot evaluate the array dimension at compile time                                                                                      $ ");
    SWAG_ERROR(Err0038, "compile-time evaluation required                  $ cannot evaluate the attribute parameter at compile time                                                                                  $ ");
    SWAG_ERROR(Err0039, "compile-time evaluation required                  $ cannot evaluate the expression at compile time                                                                                           $ ");
    SWAG_ERROR(Err0040, "compile-time evaluation required                  $ cannot evaluate the function parameter [[%s]] of type [[%s]] at compile time                                                             $ ");
    SWAG_ERROR(Err0041, "compile-time evaluation required                  $ cannot evaluate the initialization expression at compile time                                                                            $ ");
    SWAG_ERROR(Err0042, "compile-time evaluation required                  $ cannot evaluate the initialization expression at compile time                                                                            $ to enable that kind of compile-time evaluation, [[opAffect]] should be [[#[Swag.ConstExpr]]]");
    SWAG_ERROR(Err0043, "compile-time evaluation required                  $ cannot evaluate this operation on [[%s]] at compile time                                                                                 $ to enable that kind of compile-time evaluation, the struct should be [[#[Swag.ConstExpr]]]");
    SWAG_ERROR(Err0044, "conflicting attributes                            $ cannot use [[#[Swag.Compiler]]] and [[#[Swag.Tls]]] together because they are mutually exclusive                                         $ ");
    SWAG_ERROR(Err0045, "conflicting attributes                            $ cannot use [[#[Swag.Inline]]] and [[#[Swag.NoInline]]] together because they are mutually exclusive                                      $ ");
    SWAG_ERROR(Err0046, "conflicting attributes                            $ cannot use [[#[Swag.Macro]]] and [[#[Swag.Inline]]] together because they are mutually exclusive                                         $ ");
    SWAG_ERROR(Err0047, "conflicting attributes                            $ cannot use [[#[Swag.Macro]]] and [[#[Swag.Mixin]]] together because they are mutually exclusive                                          $ ");
    SWAG_ERROR(Err0048, "conflicting attributes                            $ cannot use [[#[Swag.Mixin]]] and [[#[Swag.Inline]]] together because they are mutually exclusive                                         $ ");
    SWAG_ERROR(Err0049, "conflicting modifiers                             $ cannot use the modifiers [[%s]] and [[%s]] together because they are mutually exclusive                                                  $ ");
    SWAG_ERROR(Err0050, "division by zero                                  $ cannot divide because the divider expression evaluates to 0                                                                              $ ");
    SWAG_ERROR(Err0051, "division overflow                                 $ cannot divide because the result does not fit in [[%s]]                                                                                  $ ");
    SWAG_ERROR(Err0052, "duplicated attribute                              $ cannot assign the attribute [[%s]] twice because [[Swag.AttrMulti]] is not present in the declaration                                    $ ");
    SWAG_ERROR(Err0053, "duplicated initialization                         $ cannot initialize a struct with both the type syntax and an assignment                                                                   $ ");
    SWAG_ERROR(Err0054, "duplicated instruction modifier                   $ cannot have more than one [[%s]] instruction modifier                                                                                    $ ");
    SWAG_ERROR(Err0055, "duplicated named argument                         $ cannot have more than one named argument [[%s]]                                                                                          $ ");
    SWAG_ERROR(Err0056, "duplicated operator                               $ cannot use the operator [['%s']] twice                                                                                                   $ expected an expression instead");
    SWAG_ERROR(Err0057, "empty [[#inject]] replacement block               $ cannot have an empty [[#inject]] block                                                                                                   $ consider adding some content to the block, or removing it");
    SWAG_ERROR(Err0058, "empty [[case]] statement                          $ cannot have an empty [[case]] statement                                                                                                  $ ");
    SWAG_ERROR(Err0059, "empty [[default]] statement                       $ cannot have an empty [[default]] statement                                                                                               $ ");
    SWAG_ERROR(Err0060, "empty [[switch]]                                  $ cannot have an empty [[switch]] body                                                                                                     $ consider adding some cases, or removing it");
    SWAG_ERROR(Err0061, "empty array literal                               $ cannot use an array literal without at least one value                                                                                   $ ");
    SWAG_ERROR(Err0062, "empty attribute                                   $ cannot use an attribute without at least one value                                                                                       $ consider adding an attribute name");
    SWAG_ERROR(Err0063, "empty binary number                               $ cannot have an empty binary literal                                                                                                      $ binary literals require at least one [[0]] or [[1]] digit");
    SWAG_ERROR(Err0064, "empty expression                                  $ cannot have an empty expression [[()]]                                                                                                   $ ");
    SWAG_ERROR(Err0065, "empty float exponent                              $ cannot have an empty float exponent                                                                                                      $ ");
    SWAG_ERROR(Err0066, "empty hexadecimal number                          $ cannot have an empty hexadecimal literal                                                                                                 $ hexadecimal literals require at least one digit ([[0-9]], [[A-F]], [[a-f]])");
    SWAG_ERROR(Err0067, "empty statement [[;]]                             $ cannot use a [[;]] alone to mark an empty statement                                                                                      $ consider using [[{}]] for an intentional empty statement");
    SWAG_ERROR(Err0068, "escaping defer throw                              $ cannot have an error escape a [[defer]] or [[defer<err>]] block                                                                          $ ");
    SWAG_ERROR(Err0069, "escaping stack frame                              $ cannot reference the %s [[%s]] because it is in a different stack frame                                                                  $ ");
    SWAG_ERROR(Err0070, "expected [[%s]]                                   $ expected [[%s]] %s, found $$TKN$$ instead                                                                                                $ ");
    SWAG_ERROR(Err0071, "expected ending [[;]]                             $ expected a ending [[;]] after the interface member definition of [[%s]]                                                                  $ instead, you could define a function body to provide a default implementation");
    SWAG_ERROR(Err0072, "expected function body                            $ expected [[{]] to start a function body, found $$TKN$$ instead                                                                           $ ");
    SWAG_ERROR(Err0073, "expected function body                            $ expected [[{]] to start the %s body, found [[;]] instead                                                                                 $ ");
    SWAG_ERROR(Err0074, "expected replacement block                        $ expected [[{]] to start the [[#inject]] replacement block, found $$TKN$$ instead                                                         $ ");
    SWAG_ERROR(Err0075, "failed [[%s]] constraint                          $ cannot use the %s [[%s]] because of a failed [[%s]] constraint                                                                           $ ");
    SWAG_ERROR(Err0076, "failed [[%s]] constraint                          $ cannot use the %s [[%s]] because of a failed [[%s]] constraint                                                                           $ ");
    SWAG_ERROR(Err0077, "failed generic instantiation                      $ cannot instantiate a partial type alias ([[%s]]) with a generic struct                                                                   $ ");
    SWAG_ERROR(Err0078, "failed generic instantiation                      $ cannot instantiate the generic function [[%s]] because of missing generic arguments                                                      $ ");
    SWAG_ERROR(Err0079, "failed generic instantiation                      $ cannot instantiate the generic struct [[%s]] because of missing generic arguments                                                        $ ");
    SWAG_ERROR(Err0080, "forbidden [[@postcopy]]                           $ cannot call the intrinsic [[@postcopy]] on the type [[%s]] because of [[#[Swag.NoCopy]]]                                                 $ ");
    SWAG_ERROR(Err0081, "forbidden [[opDrop]]                              $ cannot define [[opDrop]] for [[%s]] because the struct is marked with [[#[Swag.ConstExpr]]]                                              $ ");
    SWAG_ERROR(Err0082, "forbidden [[opPostCopy]]                          $ cannot define [[opPostCopy]] for [[%s]] because the struct is marked with [[#[Swag.NoCopy]]]                                             $ ");
    SWAG_ERROR(Err0083, "forbidden call                                    $ cannot call [[compileString]] because it is not accessible in this context                                                               $ this compiler stage does not allow meta-programmation");
    SWAG_ERROR(Err0084, "forbidden call                                    $ cannot make a direct call to [[opDrop]]                                                                                                  $ consider using [[@drop]] instead");
    SWAG_ERROR(Err0085, "forbidden call                                    $ cannot make a direct call to [[opPostCopy]]                                                                                              $ consider using [[@postcopy]] instead");
    SWAG_ERROR(Err0086, "forbidden call                                    $ cannot make a direct call to [[opPostMove]]                                                                                              $ consider using [[@postmove]] instead");
    SWAG_ERROR(Err0087, "forbidden copy                                    $ cannot copy [[%s]] because the struct is marked with [[#[Swag.NoCopy]]]                                                                  $ ");
    SWAG_ERROR(Err0088, "immutable assignment                              $ cannot assign to [[%s]] because it is immutable                                                                                          $ ");
    SWAG_ERROR(Err0089, "immutable assignment                              $ cannot assign to the global variable [[%s]] at compile time because it is initialized to 0                                               $ ");
    SWAG_ERROR(Err0090, "immutable assignment                              $ cannot assign to the left expression because it is immutable                                                                             $ ");
    SWAG_ERROR(Err0091, "incomplete [[case]] list                          $ expected [[,]] to define another case value or [[':']] to close the list, found $$TKN$$ instead                                          $ ");
    SWAG_ERROR(Err0092, "incomplete [[case]] list                          $ expected another expression after [[,]] and before $$TKN$$                                                                               $ consider adding an additional case expression or removing the trailing [[,]]");
    SWAG_ERROR(Err0093, "incomplete alias list                             $ expected [[,]] to define another alias name or [['|']] to close the list, found $$TKN$$ instead                                          $ ");
    SWAG_ERROR(Err0094, "incomplete alias list                             $ expected another alias name after [[,]] and before $$TKN$$                                                                               $ consider adding an additional alias name or removing the trailing [[,]]");
    SWAG_ERROR(Err0095, "incomplete arguments list                         $ expected [[,]] to define another call argument or [[')']] to close the list, found $$TKN$$ instead                                       $ ");
    SWAG_ERROR(Err0096, "incomplete arguments list                         $ expected another call argument after [[,]] and before $$TKN$$                                                                            $ consider adding an additional argument or removing the trailing [[,]]");
    SWAG_ERROR(Err0097, "incomplete array dimensions list                  $ expected [[,]] to define another dimension or [[')']] to close the list, found $$TKN$$ instead                                           $ ");
    SWAG_ERROR(Err0098, "incomplete array dimensions list                  $ expected another dimension after [[,]] and before $$TKN$$                                                                                $ consider adding an additional dimension or removing the trailing [[,]]");
    SWAG_ERROR(Err0099, "incomplete attribute arguments list               $ expected [[,]] to define another attribute argument or [[')']] to close the list, found $$TKN$$ instead                                  $ ");
    SWAG_ERROR(Err0100, "incomplete attribute arguments list               $ expected another attribute argument after [[,]] and before $$TKN$$                                                                       $ consider adding an additional argument or removing the trailing [[,]]");
    SWAG_ERROR(Err0101, "incomplete attribute usage                        $ expected [[,]] to define another attribute or [[']']] to close the list, found $$TKN$$ instead                                           $ ");
    SWAG_ERROR(Err0102, "incomplete attribute usage                        $ expected another attribute after [[,]] and before $$TKN$$                                                                                $ consider adding an additional attribute or removing the trailing [[,]]");
    SWAG_ERROR(Err0103, "incomplete generic arguments list                 $ expected [[,]] to define another generic argument or [[')']] to close the list, found $$TKN$$ instead                                    $ ");
    SWAG_ERROR(Err0104, "incomplete generic arguments list                 $ expected another generic argument after [[,]] and before $$TKN$$                                                                         $ consider adding an additional generic argument or removing the trailing [[,]]");
    SWAG_ERROR(Err0105, "incomplete index list                             $ expected [[,]] to define another index or [[')']] to close the list, found $$TKN$$ instead                                               $ ");
    SWAG_ERROR(Err0106, "incomplete index list                             $ expected another index after the [[,]] and before $$TKN$$                                                                                $ consider adding an additional index or removing the trailing [[,]]");
    SWAG_ERROR(Err0107, "incomplete initialization list                    $ expected [[,]] to define another value or [[']']] to close the list, found $$TKN$$ instead                                               $ ");
    SWAG_ERROR(Err0108, "incomplete initialization list                    $ expected [[,]] to define another value or [['}']] to close the list, found $$TKN$$ instead                                               $ ");
    SWAG_ERROR(Err0109, "incomplete parameters list                        $ expected [[,]] to define another parameter or [[')']] to close the list, found $$TKN$$ instead                                           $ ");
    SWAG_ERROR(Err0110, "incomplete parameters list                        $ expected another parameter after the [[,]] and before $$TKN$$                                                                            $ consider adding an additional parameter or removing the trailing [[,]]");
    SWAG_ERROR(Err0111, "incomplete tuple unpacking                        $ expected [[,]] to define another variable name or [[')']] to close the list, found $$TKN$$ instead                                       $ ");
    SWAG_ERROR(Err0112, "incomplete tuple unpacking                        $ expected another variable name after the [[,]] and before $$TKN$$                                                                        $ consider adding an additional variable name or removing the trailing [[,]]");
    SWAG_ERROR(Err0113, "incomplete variables list                         $ expected another variable name after the [[,]] and before $$TKN$$                                                                        $ consider adding an additional variable name or removing the trailing [[,]]");
    SWAG_ERROR(Err0114, "infinite [[while]]                                $ cannot create a [[while]] infinite loop with the condition always [[true]]                                                               $ consider using a for without argument [[for { ... }]] if you intentionally want to create an infinite loop");
    SWAG_ERROR(Err0115, "invalid [[#alias]] number                         $ cannot use [[%s]] at the end of an [[#alias]] variable name                                                                              $ an [[#alias]] variable name should end with a number, such as [[#alias0]], [[#alias1]], etc.");
    SWAG_ERROR(Err0116, "invalid [[#alignof]]                              $ cannot compute the alignment of a generic expression                                                                                     $ ");
    SWAG_ERROR(Err0117, "invalid [[#inject]] replacement keyword           $ expected a [[#inject]] replacement keyword, found $$TKN$$ instead                                                                        $ a [[#inject]] block only accepts [[break]] and [[continue]] as possible replacements");
    SWAG_ERROR(Err0118, "invalid [[#mix]] number                           $ cannot use [[%s]] at the end of a [[#mix]] variable name                                                                                 $ a [[#mix]] variable name should end with a number, such as [[#mix0]], [[#mix1]], etc.");
    SWAG_ERROR(Err0119, "invalid [[#sizeof]]                               $ cannot compute the size of a generic expression                                                                                          $ ");
    SWAG_ERROR(Err0120, "invalid [[#up]] count                             $ expected a non zero value for the [[#up]] count                                                                                          $ ");
    SWAG_ERROR(Err0121, "invalid [[#up]] count                             $ expected an untyped integer for the [[#up]] count, found [[%s]] instead                                                                  $ ");
    SWAG_ERROR(Err0122, "invalid [[#up]] move                              $ cannot move [[%d]] scopes up with [[#up]]                                                                                                $ ");
    SWAG_ERROR(Err0123, "invalid [[@cvaarg]] type                          $ cannot use a variadic argument of type [[%s]]                                                                                            $ it has been promoted to the type [[%s]] at the call site");
    SWAG_ERROR(Err0124, "invalid [[code]] append                           $ cannot use the next block statement as a [[code]] argument                                                                               $ the %s [[%s]] expects the following statement to be passed as a [[code]] argument, which is not allowed within a [[%s]] expression");
    SWAG_ERROR(Err0125, "invalid [[discard]] call                          $ cannot discard a function that returns nothing                                                                                           $ ");
    SWAG_ERROR(Err0126, "invalid [[foreach]] mode                          $ cannot visit a variadic type by pointer                                                                                                  $ ");
    SWAG_ERROR(Err0127, "invalid [[foreach]] mode                          $ cannot visit an enum content by pointer                                                                                                  $ ");
    SWAG_ERROR(Err0128, "invalid [[foreach]] name                          $ cannot visit a pointer (the type is [[%s]])                                                                                              $ ");
    SWAG_ERROR(Err0129, "invalid [[foreach]] name                          $ expected a [[visit]] specialization name, found $$TKN$$ instead                                                                          $ ");
    SWAG_ERROR(Err0130, "invalid [[foreach]] type                          $ cannot visit a tuple                                                                                                                     $ ");
    SWAG_ERROR(Err0131, "invalid [[foreach]] type                          $ cannot visit a value with the type [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0132, "invalid [[impl]]                                  $ expected a struct name after [[for]] but [[%s]] is %s                                                                                    $ ");
    SWAG_ERROR(Err0133, "invalid [[impl]]                                  $ expected a struct or an enum after [[impl]] but [[%s]] is [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0134, "invalid [[impl]]                                  $ expected an interface after [[impl]] but [[%s]] is %s                                                                                    $ ");
    SWAG_ERROR(Err0135, "invalid [[opVisit]] name                          $ cannot use [[%s]] as an [[opVisit]] variant                                                                                              $ it should be a valid identifier");
    SWAG_ERROR(Err0136, "invalid [[with]] reference                        $ cannot use [[.]] without an identifier, found $$TKN$$ instead                                                                            $ ");
    SWAG_ERROR(Err0137, "invalid access from runtime                       $ cannot access the compile-time %s [[%s]] from the runtime %s                                                                             $ ");
    SWAG_ERROR(Err0138, "invalid access from runtime                       $ cannot access the compile-time %s from the runtime %s                                                                                    $ ");
    SWAG_ERROR(Err0139, "invalid address                                   $ cannot take the address because the function [[%s]] returns nothing                                                                      $ ");
    SWAG_ERROR(Err0140, "invalid address                                   $ cannot take the address of %s                                                                                                            $ this is not a variable");
    SWAG_ERROR(Err0141, "invalid address                                   $ cannot take the address of a character inside a string constant                                                                          $ a string literal has no associated memory storage");
    SWAG_ERROR(Err0142, "invalid address                                   $ cannot take the address of a constant of type [[%s]]                                                                                     $ this type of constant has no associated memory storage");
    SWAG_ERROR(Err0143, "invalid address                                   $ cannot take the address of a function parameter of type [[%s]]                                                                           $ this type of parameter has no associated memory storage");
    SWAG_ERROR(Err0144, "invalid address                                   $ cannot take the address of a function returning a value of type [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0145, "invalid address                                   $ cannot take the address of a macro                                                                                                       $ ");
    SWAG_ERROR(Err0146, "invalid address                                   $ cannot take the address of a mixin                                                                                                       $ ");
    SWAG_ERROR(Err0147, "invalid address                                   $ cannot take the address of a variable declared with [[let]]                                                                              $ consider using [[var]] instead of [[let]] for mutability");
    SWAG_ERROR(Err0148, "invalid address                                   $ cannot take the address of an inline function                                                                                            $ ");
    SWAG_ERROR(Err0149, "invalid address                                   $ cannot take the address of the right expression                                                                                          $ ");
    SWAG_ERROR(Err0150, "invalid align value                               $ expected a power of two argument for [[#[Swag.Align]]], found [[%d]] instead                                                             $ ");
    SWAG_ERROR(Err0151, "invalid argument                                  $ cannot use [[null]] as the [[@mkany]] first argument                                                                                     $ ");
    SWAG_ERROR(Err0152, "invalid argument                                  $ expected a [[variable]] as the first argument of [[%s]]                                                                                  $ a variable is required if the second argument of [[@init]] is not provided");
    SWAG_ERROR(Err0153, "invalid argument                                  $ expected a constant value as the last argument of [[#gettag]], found [[%s]] instead                                                      $ ");
    SWAG_ERROR(Err0154, "invalid argument                                  $ expected a positive value as the argument of [[@countof]], found [[%I64d]] instead                                                       $ ");
    SWAG_ERROR(Err0155, "invalid argument                                  $ expected a positive value as the argument of [[@countof]], found [[%d]] instead                                                          $ ");
    SWAG_ERROR(Err0156, "invalid array dimension                           $ cannot have an array dimension of 0                                                                                                      $ ");
    SWAG_ERROR(Err0157, "invalid assign                                    $ cannot assign because the call returns no value                                                                                          $ ");
    SWAG_ERROR(Err0158, "invalid attribute                                 $ expected an attribute, but [[%s]] is %s                                                                                                  $ ");
    SWAG_ERROR(Err0159, "invalid bit-cast                                  $ cannot bit-cast from the type [[%s]]                                                                                                     $ expected an integer, rune, float, or pointer");
    SWAG_ERROR(Err0160, "invalid bit-cast                                  $ cannot bit-cast from the type [[%s]] to the larger type [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0161, "invalid bit-cast                                  $ cannot bit-cast to the type [[%s]]                                                                                                       $ expected an integer, rune, or float");
    SWAG_ERROR(Err0162, "invalid call                                      $ expected a function call after [[%s]], found $$TKN$$ instead                                                                             $ ");
    SWAG_ERROR(Err0163, "invalid capture                                   $ cannot capture [[%s]] because it is %s                                                                                                   $ capturing %s type is not possible");
    SWAG_ERROR(Err0164, "invalid capture                                   $ cannot capture [[%s]] because it is not a plain old data struct                                                                          $ a struct is not plain old data if it contains [[opDrop]], [[opPostCopy]], or [[opPostMove]]");
    SWAG_ERROR(Err0165, "invalid character literal                         $ cannot convert [['%s']] to a character literal                                                                                           $ this looks like a string and not a character");
    SWAG_ERROR(Err0166, "invalid character literal                         $ cannot convert a character literal to the type [[%s]]                                                                                    $ ");
    SWAG_ERROR(Err0167, "invalid compound name                             $ expected a single identifier %s                                                                                                          $ consider using a single name without the symbol [['.']]");
    SWAG_ERROR(Err0168, "invalid const move reference                      $ cannot associate [[const]] with the move reference type [[&&]]                                                                           $ consider removing [[const]] or using a simple reference [[&]]");
    SWAG_ERROR(Err0169, "invalid constant name                             $ expected the constant name after [[const]], found $$TKN$$ instead                                                                        $ ");
    SWAG_ERROR(Err0170, "invalid dereference                               $ cannot dereference [[%s]] by index because [[opIndex]] cannot be found in [[%s]]                                                         $ ");
    SWAG_ERROR(Err0171, "invalid dereference                               $ cannot dereference [[%s]] like a struct or a pointer because the type is [[%s]]                                                          $ ");
    SWAG_ERROR(Err0172, "invalid dereference                               $ cannot dereference a constant address at compile time                                                                                    $ ");
    SWAG_ERROR(Err0173, "invalid dereference                               $ cannot dereference the type [[%s]]                                                                                                       $ ");
    SWAG_ERROR(Err0174, "invalid enum type                                 $ expected the enum array type [[%s]] to have specified dimensions                                                                         $ ");
    SWAG_ERROR(Err0175, "invalid escape format                             $ expected 2 hexadecimal digits after the [['\\x']] escape code                                                                            $ ");
    SWAG_ERROR(Err0176, "invalid escape format                             $ expected 4 hexadecimal digits after the [['\\u']] escape code                                                                            $ ");
    SWAG_ERROR(Err0177, "invalid escape format                             $ expected 8 hexadecimal digits after the [['\\U']] escape code                                                                            $ ");
    SWAG_ERROR(Err0178, "invalid expression                                $ cannot use the compiler instruction [[%s]] as an expression                                                                              $ this compiler instruction can only be used as a statement");
    SWAG_ERROR(Err0179, "invalid expression                                $ expected an expression after [[%s]], found $$TKN$$ instead                                                                               $ ");
    SWAG_ERROR(Err0180, "invalid expression                                $ expected an expression, found a type instead                                                                                             $ ");
    SWAG_ERROR(Err0181, "invalid function call                             $ cannot call [[%s]] because the function is declared but not defined                                                                      $ ");
    SWAG_ERROR(Err0182, "invalid function call                             $ unexpected [[{}]] to call function [[%s]] with arguments                                                                                 $ consider using [[()]] instead");
    SWAG_ERROR(Err0183, "invalid function call                             $ unexpected call arguments because [[%s]] has the type [[%s]] which is not a function                                                     $ ");
    SWAG_ERROR(Err0184, "invalid function call                             $ unexpected call arguments because [[%s]] is [[%s]] and not a function                                                                    $ ");
    SWAG_ERROR(Err0185, "invalid function declaration                      $ expected [[func]] or [[mtd]] to declare an interface function, found $$TKN$$ instead                                                     $ consider using [[func]] or [[mtd]] to declare a function within an interface");
    SWAG_ERROR(Err0186, "invalid function name                             $ expected a function name, found $$TKN$$ instead                                                                                          $ ");
    SWAG_ERROR(Err0187, "invalid generated [[impl]] block                  $ cannot generate an [[impl]] block outside of a [[#message]] with [[Swag.CompilerMsgMask.AttributeGen]]                                   $ ");
    SWAG_ERROR(Err0188, "invalid generic                                   $ unexpected value [[%s]] for the generic value [[%s]]                                                                                     $ it has already been deduced from arguments to be [[%s]]");
    SWAG_ERROR(Err0189, "invalid generic arguments                         $ cannot use %s ([[%s]]) as a generic argument                                                                                             $ a generic argument must be a literal or a type");
    SWAG_ERROR(Err0190, "invalid generic parameter                         $ expected a literal as a generic parameter of [[%s]], found type [[%s]] instead                                                           $ ");
    SWAG_ERROR(Err0191, "invalid generic parameter name                    $ expected an identifier as the generic name, found $$TKN$$ instead                                                                        $ ");
    SWAG_ERROR(Err0192, "invalid generic type                              $ cannot use a specific type starting with [[:]] for a generic type                                                                        $ ");
    SWAG_ERROR(Err0193, "invalid identifier                                $ expected an identifier %s, found $$TKN$$ instead                                                                                         $ ");
    SWAG_ERROR(Err0194, "invalid identifier                                $ expected an identifier after [[%s]], found $$TKN$$ instead                                                                               $ ");
    SWAG_ERROR(Err0195, "invalid identifier                                $ expected an identifier, found $$TKN$$ instead                                                                                            $ ");
    SWAG_ERROR(Err0196, "invalid initialization                            $ cannot initialize a constant array (the type is [[%s]]) with one single value                                                            $ only variables can be initialized that way");
    SWAG_ERROR(Err0197, "invalid interface conversion                      $ cannot cast from [[%s]] to [[%s]] because of a missing implementation                                                                    $ ");
    SWAG_ERROR(Err0198, "invalid interface function                        $ expected [[self]] as the first parameter, but type [[%s]] instead                                                                        $ consider declaring the interface function with [[mtd]] instead of [[func]]");
    SWAG_ERROR(Err0199, "invalid interface function                        $ expected at least [[self]] as the first parameter of the interface function [[%s]]                                                       $ consider declaring the interface function with [[mtd]] instead of [[func]]");
    SWAG_ERROR(Err0200, "invalid lambda call                               $ cannot make that lambda call because [[%s]] is not a variable, it is %s                                                                  $ ");
    SWAG_ERROR(Err0201, "invalid literal suffix                            $ cannot use the symbol [[%s]] as a literal suffix because it is [[%s]]                                                                    $ this should be a type");
    SWAG_ERROR(Err0202, "invalid literal suffix                            $ cannot use the type [[%s]] as a float literal suffix                                                                                     $ only [[f32]] and [[f64]] are accepted");
    SWAG_ERROR(Err0203, "invalid literal suffix                            $ cannot use the type [[%s]] as a literal suffix                                                                                           $ ");
    SWAG_ERROR(Err0204, "invalid literal to struct conversion              $ cannot initialize a type [[%s]] with [[%s]] because no corresponding [[opAffectLiteral]] can be found                                    $ ");
    SWAG_ERROR(Err0205, "invalid logical operator                          $ expected [[%s]] for the logical test, found [[%s]] instead                                                                               $ ");
    SWAG_ERROR(Err0206, "invalid module name                               $ cannot have an empty [[#[Swag.Foreign]]] module name                                                                                     $ ");
    SWAG_ERROR(Err0207, "invalid module name                               $ unexpected [[.]] in the [[#[Swag.Foreign]]] module name                                                                                  $ consider removing it as a [[#[Swag.Foreign]]] module name cannot have an extension");
    SWAG_ERROR(Err0208, "invalid move                                      $ cannot use [[move]] on an immutable expression (type is [[%s]])                                                                          $ ");
    SWAG_ERROR(Err0209, "invalid namespace body                            $ expected the namespace body or an instruction, found [[;]] instead                                                                       $ ");
    SWAG_ERROR(Err0210, "invalid namespace name                            $ expected the namespace name, found $$TKN$$ instead                                                                                       $ ");
    SWAG_ERROR(Err0211, "invalid negation                                  $ cannot negate a value of type [[%s]]                                                                                                     $ ");
    SWAG_ERROR(Err0212, "invalid negation                                  $ cannot negate an unsigned type [[%s]]                                                                                                    $ ");
    SWAG_ERROR(Err0213, "invalid null dereference                          $ cannot dereference a null pointer                                                                                                        $ ");
    SWAG_ERROR(Err0214, "invalid opaque struct                             $ cannot use [[#[Swag.Opaque]]] because the entire file is exported with [[#global export]]                                                $ ");
    SWAG_ERROR(Err0215, "invalid opaque struct                             $ cannot use [[#[Swag.Opaque]]] without a [[public]] access for the struct                                                                 $ ");
    SWAG_ERROR(Err0216, "invalid packing value                             $ expected 0 or a power of two [[#[Swag.Pack]]] argument, found [[%d]]                                                                     $ ");
    SWAG_ERROR(Err0217, "invalid pointer arithmetic                        $ cannot dereference [[%s]] by index because pointer arithmetic is not allowed on the type [[%s]]                                          $ ");
    SWAG_ERROR(Err0218, "invalid pointer arithmetic                        $ cannot perform pointer arithmetic                                                                                                        $ ");
    SWAG_ERROR(Err0219, "invalid pointer arithmetic                        $ cannot perform pointer arithmetic on a pointer to [[void]]                                                                               $ [[void]] does not have a valid size");
    SWAG_ERROR(Err0220, "invalid pointer arithmetic                        $ cannot perform pointer arithmetic with a non-integer type [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0221, "invalid pointer arithmetic                        $ cannot perform pointer slicing                                                                                                           $ ");
    SWAG_ERROR(Err0222, "invalid range                                     $ cannot have a lower bound [[%lld]] greater than the upper bound [[%lld]]                                                                 $ you can loop in reverse order with the [[loop #back]] syntax");
    SWAG_ERROR(Err0223, "invalid range type                                $ cannot use the type [[%s]] in a range expression                                                                                         $ expected an integer, a rune or a float value");
    SWAG_ERROR(Err0224, "invalid reference                                 $ expected a pointer type or a reference as the [[ref]] expression, found type [[%s]] instead                                              $ ");
    SWAG_ERROR(Err0225, "invalid return type                               $ cannot use [[void]] as a function return type                                                                                            $ consider removing the return type if you want the function to return nothing");
    SWAG_ERROR(Err0226, "invalid return type                               $ expected a [[string]] or a [[slice]] as the [[opSlice]] return type, found type [[%s]] instead                                           $ ");
    SWAG_ERROR(Err0227, "invalid slice                                     $ cannot slice [[%s]] because [[opSlice]] cannot be found in [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0228, "invalid slice                                     $ cannot slice a multi-dimensional array                                                                                                   $ ");
    SWAG_ERROR(Err0229, "invalid slice                                     $ cannot slice the type [[%s]]                                                                                                             $ ");
    SWAG_ERROR(Err0230, "invalid struct initialization                     $ expected [[{}]] to initialize a struct, and not [[()]] which is reserved for function calls                                              $ ");
    SWAG_ERROR(Err0231, "invalid struct name                               $ expected the struct name, found $$TKN$$ instead                                                                                          $ ");
    SWAG_ERROR(Err0232, "invalid struct operation                          $ cannot affect by index a type [[%s]] to [[%s]] because [[opIndexAffect]] cannot be found                                                 $ ");
    SWAG_ERROR(Err0233, "invalid struct operation                          $ cannot find [[%s]] in [[%s]]                                                                                                             $ ");
    SWAG_ERROR(Err0234, "invalid struct operation                          $ cannot find [[%s]] in [[%s]] to solve the operator [['%s']]                                                                              $ ");
    SWAG_ERROR(Err0235, "invalid suffix type                               $ cannot use the suffix [[%s]] on a literal except for a struct conversion                                                                 $ ");
    SWAG_ERROR(Err0236, "invalid suffix type                               $ expected an identifier or a type after the start of a type suffix, found $$TKN$$ instead                                                 $ ");
    SWAG_ERROR(Err0237, "invalid symbol                                    $ unexpected symbol [['%s']]                                                                                                               $ ");
    SWAG_ERROR(Err0238, "invalid throw                                     $ cannot throw the type [[%s]]                                                                                                             $ [[throw]] needs a struct or [[@err()]] as an expression");
    SWAG_ERROR(Err0239, "invalid throw                                     $ cannot throw without a struct or [[@err()]] as an expression                                                                             $ ");
    SWAG_ERROR(Err0240, "invalid top-level instruction                     $ expected a top-level instruction, found $$TKN$$ instead                                                                                  $ ");
    SWAG_ERROR(Err0241, "invalid tuple comparison                          $ cannot compare a tuple to the type [[%s]]                                                                                                $ a tuple can only be compared to another tuple");
    SWAG_ERROR(Err0242, "invalid tuple dereference                         $ cannot dereference tuples like pointers                                                                                                  $ ");
    SWAG_ERROR(Err0243, "invalid tuple unpacking                           $ cannot unpack an empty tuple                                                                                                             $ ");
    SWAG_ERROR(Err0244, "invalid tuple unpacking                           $ cannot unpack the type [[%s]]                                                                                                            $ expected a struct or a tuple");
    SWAG_ERROR(Err0245, "invalid type                                      $ cannot evaluate the type because it is generic                                                                                           $ ");
    SWAG_ERROR(Err0246, "invalid type                                      $ cannot have the type [[%s]] as the second parameter of [[%s]]                                                                            $ consider using [[opAssign]] if you want to make a copy");
    SWAG_ERROR(Err0247, "invalid type                                      $ cannot use a [[const]] version of the type [[%s]]                                                                                        $ ");
    SWAG_ERROR(Err0248, "invalid type                                      $ cannot use the intrinsic [[@spread]] with the type [[%s]]                                                                                $ this kind of type cannot be spreaded");
    SWAG_ERROR(Err0249, "invalid type                                      $ cannot use the type [[%s]] as a type for an attribute parameter                                                                          $ ");
    SWAG_ERROR(Err0250, "invalid type                                      $ cannot use the type [[%s]] as an argument to [[@cvaarg]]                                                                                 $ ");
    SWAG_ERROR(Err0251, "invalid type                                      $ expected [[bool]] as the generic parameter of [[%s]], found type [[%s]] instead                                                          $ ");
    SWAG_ERROR(Err0252, "invalid type                                      $ expected [[string]] as the generic parameter of [[%s]], found type [[%s]] instead                                                        $ ");
    SWAG_ERROR(Err0253, "invalid type                                      $ expected type [[%s]] as the first parameter of [[%s]], found type [[%s]] instead                                                         $ ");
    SWAG_ERROR(Err0254, "invalid type declaration                          $ expected a type but [[%s]] is %s                                                                                                         $ ");
    SWAG_ERROR(Err0255, "invalid type declaration                          $ expected a type declaration, found $$TKN$$ instead                                                                                       $ ");
    SWAG_ERROR(Err0256, "invalid type declaration                          $ expected the array type after its dimensions, found $$TKN$$ instead                                                                      $ ");
    SWAG_ERROR(Err0257, "invalid unicode value                             $ cannot convert the value [[0x%x]] to UTF8 because it is not a valid unicode code point                                                   $ ");
    SWAG_ERROR(Err0258, "invalid variable name                             $ cannot use [[#alias]] as a variable name outside of a [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] function                                    $ ");
    SWAG_ERROR(Err0259, "invalid variable name                             $ cannot use [[self]] as a variable name                                                                                                   $ ");
    SWAG_ERROR(Err0260, "invalid variable name                             $ expected a variable name, found $$TKN$$ instead                                                                                          $ ");
    SWAG_ERROR(Err0261, "invalid variable name                             $ expected another variable name after [[,]], found $$TKN$$ instead                                                                        $ ");
    SWAG_ERROR(Err0262, "invalid variable name                             $ expected the match variable name, found $$TKN$$ instead                                                                                  $ ");
    SWAG_ERROR(Err0263, "invalid variable name                             $ expected the variable name after [[%s]], found $$TKN$$ instead                                                                           $ ");
    SWAG_ERROR(Err0264, "invalid variable type                             $ cannot declare a variable with the type [[void]]                                                                                         $ ");
    SWAG_ERROR(Err0265, "invalid variables list                            $ cannot declare multiple variables in [[if]]                                                                                              $ [[if]] should be followed by a single variable declaration");
    SWAG_ERROR(Err0266, "invalid variables list                            $ cannot declare multiple variables in [[using]]                                                                                           $ [[using]] should be followed by a single variable declaration");
    SWAG_ERROR(Err0267, "invalid variables list                            $ cannot declare multiple variables in [[with]]                                                                                            $ [[with]] should be followed by a single variable declaration");
    SWAG_ERROR(Err0268, "invalid void dereference                          $ cannot dereference a pointer to [[void]]                                                                                                 $ [[void]] does not have a valid size");
    SWAG_ERROR(Err0269, "isolated [[#elif]]                                $ cannot have [[#elif]] without a preceding [[#if]]                                                                                        $ ");
    SWAG_ERROR(Err0270, "isolated [[#else]]                                $ cannot have [[#else]] without a preceding [[#if]] or [[#elif]]                                                                           $ ");
    SWAG_ERROR(Err0271, "isolated [[)]]                                    $ cannot have a [[)]] without a preceding [[(]]                                                                                            $ ");
    SWAG_ERROR(Err0272, "isolated [[]]]                                    $ cannot have a [[]]] without a preceding [[[]]                                                                                            $ ");
    SWAG_ERROR(Err0273, "isolated [[elif]]                                 $ cannot have [[elif]] without a preceding [[if]]                                                                                          $ ");
    SWAG_ERROR(Err0274, "isolated [[else]]                                 $ cannot have [[else]] without a preceding [[if]] or [[elif]]                                                                              $ ");
    SWAG_ERROR(Err0275, "isolated [[}]]                                    $ cannot have a [[}]] without a preceding [[{]]                                                                                            $ ");
    SWAG_ERROR(Err0276, "isolated end comment                              $ unexpected end of a multi-line comment [['*/']] after the %s                                                                             $ the beginning [['/*']] of the multi-line comment is missing");
    SWAG_ERROR(Err0277, "literal overflow                                  $ cannot fit the character literal [[0x%x]] in the type [[u16]], this is out of range                                                      $ ");
    SWAG_ERROR(Err0278, "literal overflow                                  $ cannot fit the character literal [[0x%x]] in the type [[u8]], this is out of range                                                       $ ");
    SWAG_ERROR(Err0279, "literal overflow                                  $ cannot fit the number [[%I64u]] in the type [[%s]]                                                                                       $ ");
    SWAG_ERROR(Err0280, "literal overflow                                  $ cannot fit this binary number within a 64-bit representation because of too many digits                                                  $ ");
    SWAG_ERROR(Err0281, "literal overflow                                  $ cannot fit this hexadecimal number within a 64-bit representation because of too many digits                                             $ ");
    SWAG_ERROR(Err0282, "literal overflow                                  $ cannot fit this literal number within a 64-bits representation                                                                           $ ");
    SWAG_ERROR(Err0283, "literal overflow                                  $ cannot negate the number [[%I64d]] because [[%I64u]] is too large for the type [[s64]]                                                   $ ");
    SWAG_ERROR(Err0284, "literal overflow                                  $ cannot negate the number [[%d]] because [[%u]] is too large for the type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0285, "mismatch [[impl]] kind                            $ cannot use this implementation syntax because it is meant for [[%s]], and [[%s]] is [[%s]]                                               $ ");
    SWAG_ERROR(Err0286, "mismatch access                                   $ cannot make %s [[%s]] public because %s [[%s]] has [[%s]] access                                                                         $ ");
    SWAG_ERROR(Err0287, "mismatch access                                   $ cannot make [[%s]] internal because the corresponding struct has [[public]] access                                                       $ ");
    SWAG_ERROR(Err0288, "mismatch access                                   $ cannot make [[%s]] public because the corresponding struct has [[internal]] access                                                       $ ");
    SWAG_ERROR(Err0289, "mismatch function signature                       $ unexpected [[%s]] function signature for interface [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0290, "mismatch scopes                                   $ expected the [[impl]] block to be defined in the same scope as [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0291, "misplaced [[#dependencies]]                       $ cannot use [[#dependencies]] outside of [[module.swg]] or [[.swgs]] files                                                                $ ");
    SWAG_ERROR(Err0292, "misplaced [[#global using]]                       $ cannot use [[#global using]] outside of [[module.swg]] or [[.swgs]] files                                                                $ ");
    SWAG_ERROR(Err0293, "misplaced [[#global]]                             $ expected [[#global]] to be placed at the very top of the file                                                                            $ ");
    SWAG_ERROR(Err0294, "misplaced [[#import]]                             $ cannot use [[#import]] outside of [[module.swg]] or [[.swgs]] files                                                                      $ ");
    SWAG_ERROR(Err0295, "misplaced [[#index]]                              $ cannot use the keyword [[#index]] outside of a breakable block such as [[loop]], [[visit]], [[for]], etc.                                $ ");
    SWAG_ERROR(Err0296, "misplaced [[#inject]] block                       $ cannot use a [[#inject]] block outside of a breakable block such as [[loop]], [[visit]], [[for]], etc.                                   $ ");
    SWAG_ERROR(Err0297, "misplaced [[#load]]                               $ cannot use [[#load]] outside of [[module.swg]] or [[.swgs]] files                                                                        $ ");
    SWAG_ERROR(Err0298, "misplaced [[#macro]]                              $ cannot use [[#macro]] outside of a [[#[Swag.Macro]]] function                                                                            $ ");
    SWAG_ERROR(Err0299, "misplaced [[#self]]                               $ cannot use [[#self]] outside functions                                                                                                   $ ");
    SWAG_ERROR(Err0300, "misplaced [[#up]]                                 $ cannot use [[#up]] outside of a [[#[Swag.Macro]]] function                                                                               $ ");
    SWAG_ERROR(Err0301, "misplaced [[%s]]                                  $ cannot combine [[%s]] with [[%s]]                                                                                                        $ ");
    SWAG_ERROR(Err0302, "misplaced [[%s]]                                  $ cannot combine [[%s]] with another [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0303, "misplaced [[%s]]                                  $ cannot use [[%s]] in a struct special function ([[%s]])                                                                                  $ ");
    SWAG_ERROR(Err0304, "misplaced [[%s]]                                  $ cannot use [[%s]] outside of a function marked with [[throw]], but [[%s]] is not                                                         $ ");
    SWAG_ERROR(Err0305, "misplaced [[':']]                                 $ cannot have [[':']] before [[{]]                                                                                                         $ a block should start with either [[':']] or [[{]], but not both");
    SWAG_ERROR(Err0306, "misplaced [[@cvastart]]                           $ expected the intrinsic [[@cvastart]] to be used in a function with a last parameter of type [[cvarargs]]                                 $ ");
    SWAG_ERROR(Err0307, "misplaced [[@kindof]]                             $ cannot apply [[@kindof]] to the type [[%s]]                                                                                              $ the [[@kindof]] intrinsic should be used on the type [[any]] or on an interface");
    SWAG_ERROR(Err0308, "misplaced [[@spread]]                             $ expected the intrinsic [[@spread]] to be used as a direct function argument                                                              $ ");
    SWAG_ERROR(Err0309, "misplaced [[Self]] type                           $ cannot use [[Self]] outside of an [[impl]], [[struct]], or [[interface]] block                                                           $ [[Self]] is a reserved alias for the corresponding struct");
    SWAG_ERROR(Err0310, "misplaced [[alias]]                               $ cannot use [[alias]] on a struct member                                                                                                  $ ");
    SWAG_ERROR(Err0311, "misplaced [[break]]                               $ cannot use [[break]] outside of a breakable block such as [[loop]], [[visit]], [[for]], etc.                                             $ ");
    SWAG_ERROR(Err0312, "misplaced [[const]]                               $ cannot use [[const]] before a lambda parameter name                                                                                      $ ");
    SWAG_ERROR(Err0313, "misplaced [[const]]                               $ expected [[self]] after [[const]] when declaring a function parameter, found $$TKN$$ instead                                             $ ");
    SWAG_ERROR(Err0314, "misplaced [[const]] qualifier                     $ cannot use the [[const]] qualifier after [[func]], only after [[mtd]]                                                                    $ ");
    SWAG_ERROR(Err0315, "misplaced [[continue]]                            $ cannot use [[continue]] outside of a breakable block such as [[loop]], [[visit]], [[for]], etc.                                          $ ");
    SWAG_ERROR(Err0316, "misplaced [[default]]                             $ cannot use a [[default]] statement in a [[switch]] marked with [[#[Swag.Complete]]]                                                      $ ");
    SWAG_ERROR(Err0317, "misplaced [[fallthrough]]                         $ cannot use [[fallthrough]] in the last [[case]] of a [[switch]]                                                                          $ consider removing it");
    SWAG_ERROR(Err0318, "misplaced [[fallthrough]]                         $ cannot use [[fallthrough]] outside of a [[case]] block                                                                                   $ ");
    SWAG_ERROR(Err0319, "misplaced [[fallthrough]]                         $ cannot use [[fallthrough]] outside of a [[switch]]                                                                                       $ ");
    SWAG_ERROR(Err0320, "misplaced [[for]]                                 $ cannot use the [[for]] keyword in an [[enum]] implementation                                                                             $ ");
    SWAG_ERROR(Err0321, "misplaced [[impl]]                                $ cannot associate [[impl]] with a function outside of an [[impl for]] block                                                               $ ");
    SWAG_ERROR(Err0322, "misplaced [[let]]                                 $ cannot declare a match variable after multiple [[case]] values                                                                           $ the [[case]] should only contain one value");
    SWAG_ERROR(Err0323, "misplaced [[let]]                                 $ cannot declare a match variable in a [[switch]] without an expression                                                                    $ ");
    SWAG_ERROR(Err0324, "misplaced [[moveref]]                             $ cannot use [[moveref]] on a compile-time value                                                                                           $ [[moveref]] should be used on a pointer or a reference");
    SWAG_ERROR(Err0325, "misplaced [[moveref]]                             $ cannot use [[moveref]] on an immutable expression                                                                                        $ ");
    SWAG_ERROR(Err0326, "misplaced [[moveref]]                             $ cannot use [[moveref]] on the type [[%s]]                                                                                                $ [[moveref]] should be used on a pointer or a reference");
    SWAG_ERROR(Err0327, "misplaced [[moveref]]                             $ expected [[moveref]] to be used before a function argument                                                                               $ ");
    SWAG_ERROR(Err0328, "misplaced [[mtd]]                                 $ cannot use [[mtd]] outside of a struct implementation block                                                                              $ consider replacing [[mtd]] with [[func]]");
    SWAG_ERROR(Err0329, "misplaced [[mtd]]                                 $ cannot use [[mtd]] to declare a lambda type                                                                                              $ consider using [[func]] or [[closure]] instead");
    SWAG_ERROR(Err0330, "misplaced [[mtd]] in enum                         $ cannot use [[mtd]] outside of a struct implementation block                                                                              $ consider replacing [[mtd]] with [[func]]");
    SWAG_ERROR(Err0331, "misplaced [[return]]                              $ cannot use [[return]] after [[=>]] as it is implicit                                                                                     $ consider removing it");
    SWAG_ERROR(Err0332, "misplaced [[retval]]                              $ cannot use the [[retval]] special type in a function that returns nothing                                                                $ ");
    SWAG_ERROR(Err0333, "misplaced [[retval]]                              $ cannot use the [[retval]] special type outside of a function body                                                                        $ ");
    SWAG_ERROR(Err0334, "misplaced [[retval]] return type                  $ cannot use [[retval]] as a return type                                                                                                   $ it is only valid as a local variable type");
    SWAG_ERROR(Err0335, "misplaced [[self]]                                $ cannot use [[self]] outside an [[impl]] block of an enum or a struct                                                                     $ ");
    SWAG_ERROR(Err0336, "misplaced [[throw]] qualifier                     $ cannot use the [[throw]] qualifier on an attribute, as it cannot raise errors                                                            $ ");
    SWAG_ERROR(Err0337, "misplaced [[using]]                               $ cannot associate [[using]] with a pointer to [[%s]]                                                                                      $ [[using]] can only be used on pointers to struct");
    SWAG_ERROR(Err0338, "misplaced [[using]]                               $ cannot associate [[using]] with a variable at [[%s]] scope                                                                               $ ");
    SWAG_ERROR(Err0339, "misplaced [[using]]                               $ cannot associate [[using]] with a variable of type [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0340, "misplaced [[using]]                               $ cannot associate [[using]] with the type [[%s]]                                                                                          $ expected a namespace, a struct, an enum or a variable");
    SWAG_ERROR(Err0341, "misplaced [[using]] in interface                  $ cannot associate [[using]] with an interface function                                                                                    $ ");
    SWAG_ERROR(Err0342, "misplaced [[var]]                                 $ cannot use [[var]] in struct variable declarations                                                                                       $ a struct variable should be declared as [[fieldName: Type]] without [[var]]");
    SWAG_ERROR(Err0343, "misplaced [[var]]                                 $ cannot use [[var]] to declare a match variable                                                                                           $ consider using [[let]] instead");
    SWAG_ERROR(Err0344, "misplaced [[verify]]                              $ cannot use a [[verify]] constraint on structs                                                                                            $ [[verify]] constraints are only valid for functions; consider using [[where]] instead");
    SWAG_ERROR(Err0345, "misplaced [[where]]                               $ cannot use a [[where]] clause in a [[switch]] without an expression                                                                      $ ");
    SWAG_ERROR(Err0346, "misplaced [[where]]                               $ cannot use a [[where]] constraint on [[%s]]                                                                                              $ [[where]] constraints are not supported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0347, "misplaced access specifier                        $ cannot make a global variable [[public]]                                                                                                 $ ");
    SWAG_ERROR(Err0348, "misplaced access specifier                        $ cannot use the [[%s]] access specifier outside of the global scope                                                                       $ ");
    SWAG_ERROR(Err0349, "misplaced access specifier                        $ unexpected [[%s]] before [[%s]]                                                                                                          $ ");
    SWAG_ERROR(Err0350, "misplaced alias name                              $ cannot use a name alias on %s                                                                                                            $ ");
    SWAG_ERROR(Err0351, "misplaced assign                                  $ cannot assign values to unnamed parameters                                                                                               $ ");
    SWAG_ERROR(Err0352, "misplaced attribute                               $ cannot place an attribute after [[%s]]                                                                                                   $ attributes should be placed before access specifiers; consider moving the attribute before [[%s]]");
    SWAG_ERROR(Err0353, "misplaced attribute                               $ cannot use [[#[Swag.CalleeReturn]]] on a %s                                                                                              $ ");
    SWAG_ERROR(Err0354, "misplaced attribute                               $ cannot use [[#[Swag.CalleeReturn]]] on function [[%s]]                                                                                   $ [[#[Swag.CalledReturn]]] can only be applied to a macro ([[#[Swag.Macro]]]) or a mixin ([[#[Swag.Mixin]]])");
    SWAG_ERROR(Err0355, "misplaced attribute                               $ cannot use [[#[Swag.Complete]]] on a [[switch]] without an expression                                                                    $ ");
    SWAG_ERROR(Err0356, "misplaced attribute                               $ cannot use [[#[Swag.Complete]]] on function [[%s]]                                                                                       $ #[Swag.Complete] can only be applied to [[opAffect]] and [[opAffectLiteral]]");
    SWAG_ERROR(Err0357, "misplaced attribute                               $ cannot use [[#[Swag.Discardable]]] on type [[%s]]                                                                                        $ it can only be applied to lambda variables");
    SWAG_ERROR(Err0358, "misplaced attribute                               $ cannot use [[#[Swag.Implicit]]] on %s because it is generic                                                                              $ ");
    SWAG_ERROR(Err0359, "misplaced attribute                               $ cannot use [[#[Swag.Implicit]]] on function [[%s]]                                                                                       $ [[#[Swag.Implicit]]] can only be applied to [[opAffect]], [[opAffectLiteral]] and [[opCast]]");
    SWAG_ERROR(Err0360, "misplaced attribute                               $ cannot use [[#[Swag.Inline]]] on a %s                                                                                                    $ ");
    SWAG_ERROR(Err0361, "misplaced attribute                               $ cannot use [[#[Swag.Macro]]] on a %s                                                                                                     $ ");
    SWAG_ERROR(Err0362, "misplaced attribute                               $ cannot use [[#[Swag.Mixin]]] on a %s                                                                                                     $ ");
    SWAG_ERROR(Err0363, "misplaced attribute                               $ cannot use [[#[Swag.NotGeneric]]] on a %s                                                                                                $ ");
    SWAG_ERROR(Err0364, "misplaced attribute                               $ cannot use [[#[Swag.Offset]]] on an interface member                                                                                     $ ");
    SWAG_ERROR(Err0365, "misplaced attribute                               $ cannot use the [[%s]] attribute here                                                                                                     $ ");
    SWAG_ERROR(Err0366, "misplaced attribute                               $ cannot use the [[%s]] attribute in a [[#global]] statement                                                                               $ the attribute does not have the [[Swag.AttributeUsage.File]] usage");
    SWAG_ERROR(Err0367, "misplaced attribute                               $ cannot use the [[%s]] attribute on %s                                                                                                    $ ");
    SWAG_ERROR(Err0368, "misplaced attribute                               $ cannot use this attribute here                                                                                                           $ ");
    SWAG_ERROR(Err0369, "misplaced attribute                               $ expected [[AttributeUsage.Gen]] to be associated with [[AttributeUsage.Struct]] or [[AttributeUsage.Enum]]                               $ ");
    SWAG_ERROR(Err0370, "misplaced block start                             $ cannot start a block with [['{']] after [[try]], [[assume]] or [[catch]]                                                                 $ ");
    SWAG_ERROR(Err0371, "misplaced cast                                    $ cannot cast a [[@spread]] result                                                                                                         $ ");
    SWAG_ERROR(Err0372, "misplaced closure                                 $ cannot define a closure in a global scope $ closures can only be defined within functions                                                $ ");
    SWAG_ERROR(Err0373, "misplaced compiler instruction                    $ cannot use [[#callerfunction]] outside of a function parameter                                                                           $ ");
    SWAG_ERROR(Err0374, "misplaced compiler instruction                    $ cannot use [[#callerlocation]] outside of a function parameter                                                                           $ ");
    SWAG_ERROR(Err0375, "misplaced default parameters                      $ cannot redefine the default parameters of a lambda or a closure                                                                          $ ");
    SWAG_ERROR(Err0376, "misplaced default value                           $ cannot define a default value to [[self]]                                                                                                $ ");
    SWAG_ERROR(Err0377, "misplaced default value                           $ cannot define a default value to lambda parameters                                                                                       $ ");
    SWAG_ERROR(Err0378, "misplaced digit separator                         $ cannot end a number with a digit separator [['_']]                                                                                       $ ");
    SWAG_ERROR(Err0379, "misplaced digit separator                         $ cannot have [[_]] at the start of the exponent part                                                                                      $ ");
    SWAG_ERROR(Err0380, "misplaced digit separator                         $ cannot have [[_]] at the start of the fractional part                                                                                    $ ");
    SWAG_ERROR(Err0381, "misplaced digit separator                         $ cannot use consecutive digit separators [['_']]                                                                                          $ ");
    SWAG_ERROR(Err0382, "misplaced error catching                          $ cannot catch [[%s]] because it is %s                                                                                                     $ ");
    SWAG_ERROR(Err0383, "misplaced error catching                          $ cannot nest [[%s]] in a [[%s]] expression                                                                                                $ consider using only one [[try]], [[catch]] or [[assume]]");
    SWAG_ERROR(Err0384, "misplaced error catching                          $ cannot treat a return error with [[%s]] outside of a function, macro, or mixin                                                           $ ");
    SWAG_ERROR(Err0385, "misplaced error catching                          $ cannot use [[%s]] because the function [[%s]] is not marked with [[throw]]                                                               $ a function must be marked with [[throw]] to be able to raise errors");
    SWAG_ERROR(Err0386, "misplaced function declaration                    $ cannot declare functions directly inside structs                                                                                         $ a function associated with a struct should be declared inside an [[impl]] block");
    SWAG_ERROR(Err0387, "misplaced generic argument                        $ expected a type, got a value instead                                                                                                     $ ");
    SWAG_ERROR(Err0388, "misplaced generic argument                        $ expected a value, got a type instead                                                                                                     $ ");
    SWAG_ERROR(Err0389, "misplaced generic arguments                       $ unexpected generic arguments for %s [[%s]]                                                                                               $ ");
    SWAG_ERROR(Err0390, "misplaced match variable                          $ cannot declare a match variable in a [[switch]] expression of type [[%s]]                                                                $ the only supported [[switch]] type are [[interface]] and [[any]]");
    SWAG_ERROR(Err0391, "misplaced move reference                          $ cannot use a move reference type [[&&]] outside of a function parameter                                                                  $ ");
    SWAG_ERROR(Err0392, "misplaced range                                   $ cannot use a range in a switch without an expression                                                                                     $ ");
    SWAG_ERROR(Err0393, "misplaced reference to [[with]] block             $ cannot use statements starting with [[.]] outside of a [[with]] block                                                                    $ ");
    SWAG_ERROR(Err0394, "misplaced special function                        $ cannot declare [[%s]] outside of the corresponding [[impl]] block                                                                        $ ");
    SWAG_ERROR(Err0395, "misplaced special function                        $ cannot declare [[%s]] outside of the corresponding [[impl]] block                                                                        $ an [[impl for]] block can only be used to implement interfaces");
    SWAG_ERROR(Err0396, "misplaced top-level [[using]]                     $ cannot place a top-level [[using]] after other declarations                                                                              $ ");
    SWAG_ERROR(Err0397, "misplaced tuple unpacking                         $ cannot unpack a tuple in %s                                                                                                              $ ");
    SWAG_ERROR(Err0398, "misplaced type                                    $ cannot use the type [[%s]] outside of a function parameter                                                                               $ ");
    SWAG_ERROR(Err0399, "misplaced type                                    $ cannot use the type [[code]] outside of a [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] function                                                $ ");
    SWAG_ERROR(Err0400, "misplaced variadic argument                       $ cannot place a variadic argument anywhere but at the end                                                                                 $ ");
    SWAG_ERROR(Err0401, "misplaced variadic parameter                      $ cannot place a variadic parameter anywhere but at the end                                                                                $ ");
    SWAG_ERROR(Err0402, "misplaced variadic parameter                      $ cannot use variadic parameters in an inline function                                                                                     $ ");
    SWAG_ERROR(Err0403, "missing [[#alias]] number                         $ cannot use an [[#alias]] variable name without a trailing number, such as [[#alias0]], [[#alias1]], etc.                                 $ ");
    SWAG_ERROR(Err0404, "missing [[#foreignlib]] string argument           $ expected a library name after [[#foreignlib]], found $$TKN$$ instead                                                                     $ consider using [[#foreignlib \"path/to/library\"]] to specify the library to import");
    SWAG_ERROR(Err0405, "missing [[#global testerror]] string argument     $ expected the error string to check after [[#global testerror]], found $$TKN$$ instead                                                    $ ");
    SWAG_ERROR(Err0406, "missing [[#global testwarning]] string argument   $ expected the warning string to check after [[#global testwarning]], found $$TKN$$ instead                                                $ ");
    SWAG_ERROR(Err0407, "missing [[#if]] boolean expression                $ expected a boolean expression after [[#if]], found $$TKN$$ instead                                                                       $ ");
    SWAG_ERROR(Err0408, "missing [[#message]] parameter                    $ expected a parameter of type [[Swag.CompilerMsgMask]] for [[#message]]                                                                   $ ");
    SWAG_ERROR(Err0409, "missing [[#mix]] number                           $ cannot use a [[#mix]] variable name without a trailing number, such as [[#mix0]], [[#mix1]], etc.                                        $ ");
    SWAG_ERROR(Err0410, "missing [[#placeholder]] identifier               $ expected an identifier after [[#placeholder]], found $$TKN$$ instead                                                                     $ ");
    SWAG_ERROR(Err0411, "missing [[%s]]                                    $ expected [[%s]] %s but none was found after                                                                                              $ ");
    SWAG_ERROR(Err0412, "missing [[%s]]                                    $ expected [[%s]] %s, found $$TKN$$ instead                                                                                                $ ");
    SWAG_ERROR(Err0413, "missing [[':']]                                   $ expected either [[':']] or [[{]] before $$TKN$$                                                                                          $ ");
    SWAG_ERROR(Err0414, "missing [[(]] before arguments                    $ expected [[(]] to start the list of arguments, found $$TKN$$ because                                                                     $ ");
    SWAG_ERROR(Err0415, "missing [[(]] before parameters                   $ expected [[(]] to start the list of parameters, found $$TKN$$ because                                                                    $ ");
    SWAG_ERROR(Err0416, "missing [[:]]                                     $ expected [[:]] after the [[loop]] variable name [[%s]]                                                                                   $ consider using the syntax [[loop [variable:] count]]");
    SWAG_ERROR(Err0417, "missing [[as]]                                    $ expected [[as]] to declare the case value, found $$TKN$$ instead                                                                         $ ");
    SWAG_ERROR(Err0418, "missing [[case]] expression                       $ expected the [[case]] expression, found [[%s]] instead                                                                                   $ ");
    SWAG_ERROR(Err0419, "missing [[closure]] capture variable              $ expected another capture variable between the [[comma]] ',' and [['|']]                                                                  $ consider adding another variable or removing the trailing comma");
    SWAG_ERROR(Err0420, "missing [[foreach]] expression                    $ expected the element to visit before [[%s]]                                                                                              $ ");
    SWAG_ERROR(Err0421, "missing [[foreach]] variable                      $ expected another [[foreach]] variable name between the [[comma]] ',' and the [[colon]] ':'                                               $ the first [[foreach]] variable is the [[value]], the second one is the [[index]]");
    SWAG_ERROR(Err0422, "missing [[if]] boolean expression                 $ expected a boolean expression after [[if]], found $$TKN$$ instead                                                                        $ ");
    SWAG_ERROR(Err0423, "missing [[impl]]                                  $ expected the function [[%s]] in the interface [[%s]] to have an [[impl]] marker                                                          $ ");
    SWAG_ERROR(Err0424, "missing [[loop]] count                            $ expected the [[loop]] count expression before [[%s]]                                                                                     $ ");
    SWAG_ERROR(Err0425, "missing [[switch]] value                          $ expected the value [[%s.%s]] to be treated in the [[switch]]                                                                             $ ");
    SWAG_ERROR(Err0426, "missing [[while]] boolean expression              $ expected a boolean expression before [[%s]]                                                                                              $ ");
    SWAG_ERROR(Err0427, "missing affectation                               $ expected an affectation or some arguments after the %s, found $$TKN$$ instead                                                            $ ");
    SWAG_ERROR(Err0428, "missing arguments                                 $ expected the %s [[%s]] to have arguments between [[()]]                                                                                  $ ");
    SWAG_ERROR(Err0429, "missing attribute                                 $ cannot declare an [[opVisit]] function without the [[#[Swag.Macro]]] attribute                                                           $ ");
    SWAG_ERROR(Err0430, "missing attribute name                            $ expected an attribute name before [[(]]                                                                                                  $ ");
    SWAG_ERROR(Err0431, "missing catch error                               $ cannot handle the errors of [[%s]] because [[try]], [[catch]], or [[assume]] is missing                                                  $ ");
    SWAG_ERROR(Err0432, "missing constant type                             $ expected an assignment or [[:]] to define a type, found $$TKN$$ instead                                                                  $ ");
    SWAG_ERROR(Err0433, "missing default value                             $ cannot use the %s because a preceding parameter has a default value and one is needed here                                               $ ");
    SWAG_ERROR(Err0434, "missing dereference index                         $ cannot dereference the array [[%s]] of type [[%s]] without an index                                                                      $ consider adding the index between brackets");
    SWAG_ERROR(Err0435, "missing end of line                               $ expected a line break or a [[;]] to close the %s, found $$TKN$$ instead                                                                  $ consider adding a line break or separating the previous statement with a [[;]]");
    SWAG_ERROR(Err0436, "missing enum name                                 $ expected the enum name before the start of the body [['{']]                                                                              $ ");
    SWAG_ERROR(Err0437, "missing enum name                                 $ expected the enum name before the start of the type definition [[':']]                                                                   $ ");
    SWAG_ERROR(Err0438, "missing function parameters                       $ expected the function parameters between [[()]] before [[{]]                                                                             $ consider adding [[()]] after [[%s]] if this function has no parameters");
    SWAG_ERROR(Err0439, "missing generic parameters                        $ cannot declare [[%s]] without generic parameters                                                                                         $ ");
    SWAG_ERROR(Err0440, "missing generic parameters                        $ cannot declare the struct [[%s]] without generic parameters, as [[%s]] is generic                                                        $ ");
    SWAG_ERROR(Err0441, "missing generic parameters                        $ cannot solve the struct [[%s]] because of the generic field [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0442, "missing generic parameters                        $ expected at least one generic parameter between [[()]]                                                                                   $ consider removing [[()]] if this is not generic");
    SWAG_ERROR(Err0443, "missing initialization                            $ cannot declare a [[let]] variable without an explicit initialization                                                                     $ ");
    SWAG_ERROR(Err0444, "missing initialization                            $ cannot declare a constant without an explicit initialization                                                                             $ ");
    SWAG_ERROR(Err0445, "missing initialization                            $ cannot declare a reference without an explicit initialization                                                                            $ ");
    SWAG_ERROR(Err0446, "missing initialization                            $ expected an explicit initialization because the enumeration value [[%s]] has the type [[%s]]                                             $ ");
    SWAG_ERROR(Err0447, "missing initialization                            $ expected an initialization of [[%s]] because [[%s]] does not contain a value for zero                                                    $ ");
    SWAG_ERROR(Err0448, "missing interface function                        $ cannot have some functions of the interface [[%s]] not implemented for [[%s]]                                                            $ ");
    SWAG_ERROR(Err0449, "missing intrinsic arguments                       $ expected the arguments of [[%s]] between [[()]]                                                                                          $ ");
    SWAG_ERROR(Err0450, "missing lambda parameter type                     $ expected the type with [[:]] or an assignment                                                                                            $ you cannot combined inferred and explicit types when declaring lambda parameters");
    SWAG_ERROR(Err0451, "missing named argument                            $ expected a name for the %s because some arguments before are named                                                                       $ ");
    SWAG_ERROR(Err0452, "missing namespace name                            $ expected the namespace name before [[;]]                                                                                                 $ ");
    SWAG_ERROR(Err0453, "missing namespace name                            $ expected the namespace name before the start of the body [['{']]                                                                         $ ");
    SWAG_ERROR(Err0454, "missing parameter name                            $ expected the parameter name and [[:]] before [[%s]]                                                                                      $ ");
    SWAG_ERROR(Err0455, "missing parameter type                            $ expected an assignment or [[:]] to define a type, found $$TKN$$ instead                                                                  $ ");
    SWAG_ERROR(Err0456, "missing parameters                                $ cannot have a special function [[%s]] without parameters                                                                                 $ ");
    SWAG_ERROR(Err0457, "missing return type                               $ cannot have a [[public]] function without an explicitly defined return type                                                              $ ");
    SWAG_ERROR(Err0458, "missing return type                               $ cannot have a special function [[%s]] without a return type                                                                              $ ");
    SWAG_ERROR(Err0459, "missing return type                               $ cannot have a special function [[%s]] without a return type [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0460, "missing return type                               $ expected a return value because the function [[%s]] is marked with [[#[Swag.Discardable]]]                                               $ ");
    SWAG_ERROR(Err0461, "missing return value                              $ expected a return statement in the body of the %s to provide a value of type [[%s]]                                                      $ ");
    SWAG_ERROR(Err0462, "missing return value                              $ expected a return value because the return type has already been deduced to be [[%s]]                                                    $ ");
    SWAG_ERROR(Err0463, "missing return value                              $ expected a return value of type [[%s]] after the [[return]]                                                                              $ ");
    SWAG_ERROR(Err0464, "missing return value                              $ expected all control paths of the %s to return a value                                                                                   $ ");
    SWAG_ERROR(Err0465, "missing slice upper bound                         $ expected an upper bound expression after [[..<]]                                                                                         $ consider using [[..]] instead of [[..<]] if you want to slice to the end");
    SWAG_ERROR(Err0466, "missing struct name                               $ expected the struct name before the start of the body [['{']]                                                                            $ ");
    SWAG_ERROR(Err0467, "missing type                                      $ expected a type after [[#type]], found $$TKN$$ instead                                                                                   $ ");
    SWAG_ERROR(Err0468, "missing variable type                             $ expected an assignment or [[:]] to define a type, found $$TKN$$ instead                                                                  $ ");
    SWAG_ERROR(Err0469, "misused UFCS                                      $ cannot use the %s [[%s]] as the first argument of [[%s]]                                                                                 $ ");
    SWAG_ERROR(Err0470, "misused UFCS                                      $ cannot use the hidden [[with]] variable [[%s]] as the first argument of [[%s]]                                                           $ ");
    SWAG_ERROR(Err0471, "non-contiguous [[#alias]]                         $ unexpected non-contiguous [[#alias]] in function [[%s]]                                                                                  $ the alias [[#alias%u]] is missing");
    SWAG_ERROR(Err0472, "non-transferable [[cvarargs]] type                $ cannot pass a parameter with the type [[cvarargs]] to another function                                                                   $ ");
    SWAG_ERROR(Err0473, "not a value                                       $ cannot reference [[%s]] because it's a static struct member of [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0474, "not a value                                       $ cannot reference the %s [[%s]] because it's not a valid value in this context                                                            $ ");
    SWAG_ERROR(Err0475, "not enough attribute arguments                    $ expected more arguments for the attribute [[%s]]                                                                                         $ ");
    SWAG_ERROR(Err0476, "not enough call arguments                         $ expected more arguments to call the function [[%s]]                                                                                      $ ");
    SWAG_ERROR(Err0477, "not enough generic arguments                      $ expected more generic arguments for %s                                                                                                   $ ");
    SWAG_ERROR(Err0478, "not enough generic parameters                     $ expected more generic parameters for [[%s]]                                                                                              $ ");
    SWAG_ERROR(Err0479, "not enough initializers                           $ expected [[%d]] values to initialize the array, found [[%d]] instead                                                                     $ ");
    SWAG_ERROR(Err0480, "not enough initializers                           $ expected [[%d]] values to initialize the tuple, found [[%d]] instead                                                                     $ ");
    SWAG_ERROR(Err0481, "not enough parameters                             $ expected [[%d]] parameters for [[%s]], found [[%d]] instead                                                                              $ ");
    SWAG_ERROR(Err0482, "not enough parameters                             $ expected at least [[%d]] parameters for [[%s]], found [[%d]] instead                                                                     $ ");
    SWAG_ERROR(Err0483, "out of range [[#alias]] number                    $ cannot use [[%u]] for an [[#alias]] number                                                                                               $ it should be in the range [0, 31]");
    SWAG_ERROR(Err0484, "out of range [[#mix]] number                      $ cannot use [[%u]] for a [[#mix]] number                                                                                                  $ it should be in the range [0, 31]");
    SWAG_ERROR(Err0485, "out of range [[#up]] count                        $ cannot use [[%u]] for the [[#up]] count                                                                                                  $ it should be in the range [1, 255]");
    SWAG_ERROR(Err0486, "out of range array dimensions                     $ cannot have more than [[254]] array dimensions                                                                                           $ ");
    SWAG_ERROR(Err0487, "out of range callback parameters                  $ cannot create a callback if the function has more than [[%d]] parameters (got [[%d]])                                                    $ ");
    SWAG_ERROR(Err0488, "out of range enum value                           $ cannot use the enum value [[%s]] because it exceeds the valid range of the type [[%s]]                                                   $ ");
    SWAG_ERROR(Err0489, "out of range index                                $ cannot use the index [[%I64u]] because it exceeds the maximum value [[%I64u]]                                                            $ ");
    SWAG_ERROR(Err0490, "out of range inline level                         $ cannot expand [[%s]] because the limit defined with [[--limit-inline:%d]] has been reached                                               $ ");
    SWAG_ERROR(Err0491, "out of range slice                                $ cannot use the slice bound [[%I64u]] because it is out of range (max is [[%I64u]])                                                       $ ");
    SWAG_ERROR(Err0492, "out of range slice                                $ cannot use the slice lower bound [[%I64u]] because it is greater than the upper bound [[%I64u]]                                          $ ");
    SWAG_ERROR(Err0493, "out of range slice                                $ cannot use the slice upper bound exclusion [[..<]] because it is zero                                                                    $ ");
    SWAG_ERROR(Err0494, "out of range variadic arguments                   $ cannot have more than [[%d]] variadic arguments, found [[%d]] instead                                                                    $ ");
    SWAG_ERROR(Err0495, "overload mismatch                                 $ cannot match any of the [[%d]] overloads for [[%s]]                                                                                      $ ");
    SWAG_ERROR(Err0496, "recursive evaluation                              $ cannot evaluate the struct [[%s]] because it references itself, causing a recursion                                                      $ ");
    SWAG_ERROR(Err0497, "redundant access specifier                        $ cannot use the [[%s]] access specifier because of [[#global export]]                                                                     $ consider removing the [[public]] modifier, as [[#global export]] ensures all declarations in this file are publicly accessible");
    SWAG_ERROR(Err0498, "reserved field name                               $ cannot name a field [[%s]] because it is reserved by the compiler                                                                        $ struct member names beginning with [[item]] are reserved by the language");
    SWAG_ERROR(Err0499, "reserved function name                            $ cannot name a function [[%s]] because it is reserved by the compiler                                                                     $ ");
    SWAG_ERROR(Err0500, "reserved name                                     $ cannot use an identifier named with a single [[_]]                                                                                       $ an identifier named with one single [[_]] is reserved by the compiler");
    SWAG_ERROR(Err0501, "reserved name                                     $ cannot use an identifier starting with [[__]] ([[%s]])                                                                                   $ identifiers starting with [[__]] are reserved by the compiler");
    SWAG_ERROR(Err0502, "reserved namespace name                           $ cannot name a namespace [[%s]] because it is reserved by the compiler                                                                    $ ");
    SWAG_ERROR(Err0503, "semantic cycle                                    $ cannot solve %s [[%s]] because a cycle has been detected                                                                                 $ ");
    SWAG_ERROR(Err0504, "standalone expression                             $ cannot leave an expression unused                                                                                                        $ consider removing it");
    SWAG_ERROR(Err0505, "too many arguments                                $ expected [[%d]] arguments, found [[%d]] instead                                                                                          $ ");
    SWAG_ERROR(Err0506, "too many generic arguments                        $ expected [[%d]] generic arguments for %s [[%s]], found [[%d]] instead                                                                    $ ");
    SWAG_ERROR(Err0507, "too many generic parameters                       $ expected one single generic parameter for [[%s]], found [[%d]] instead                                                                   $ ");
    SWAG_ERROR(Err0508, "too many generic parameters                       $ unexpected number of generic parameters for [[%s]]                                                                                       $ ");
    SWAG_ERROR(Err0509, "too many initializers                             $ expected [[%d]] values to initialize [[%s]], found [[%d]] instead                                                                        $ ");
    SWAG_ERROR(Err0510, "too many initializers                             $ expected [[%d]] values to initialize the array, found [[%d]] instead                                                                     $ ");
    SWAG_ERROR(Err0511, "too many initializers                             $ expected [[%d]] values to initialize the tuple, found [[%d]] instead                                                                     $ ");
    SWAG_ERROR(Err0512, "too many initializers                             $ unexpected number of initializers for the type [[%s]]                                                                                    $ ");
    SWAG_ERROR(Err0513, "too many parameters                               $ unexpected number of parameters for [[%s]] ([[%d]] expected, [[%d]] provided)                                                            $ ");
    SWAG_ERROR(Err0514, "tuple type mismatch                               $ cannot use the source tuple with the requested tuple; they are not compatible                                                            $ ");
    SWAG_ERROR(Err0515, "type mismatch                                     $ cannot cast a closure type to a lambda type                                                                                              $ ");
    SWAG_ERROR(Err0516, "type mismatch                                     $ cannot cast a type value ([[typeinfo]]) to a compile type ([[%s]])                                                                       $ ");
    SWAG_ERROR(Err0517, "type mismatch                                     $ cannot cast an interface to a struct                                                                                                     $ an interface can only be cast to a pointer to a struct");
    SWAG_ERROR(Err0518, "type mismatch                                     $ cannot cast the type [[%s]] to the type [[%s]]                                                                                           $ ");
    SWAG_ERROR(Err0519, "type mismatch                                     $ cannot initialize the type [[%s]] from the type [[%s]]                                                                                   $ ");
    SWAG_ERROR(Err0520, "type mismatch                                     $ cannot mix signed and unsigned types in a range expression                                                                               $ the lower bound and the upper bound should be the same");
    SWAG_ERROR(Err0521, "type mismatch                                     $ expected a return of type [[%s]] for [[%s]], found type [[%s]] instead                                                                   $ ");
    SWAG_ERROR(Err0522, "type mismatch                                     $ expected the slice bound to be an integer, found type [[%s]] instead                                                                     $ ");
    SWAG_ERROR(Err0523, "type mismatch                                     $ expected the type [[%s]] in the [[%s]] assignment, found type [[%s]] instead                                                             $ ");
    SWAG_ERROR(Err0524, "type mismatch                                     $ expected type [[%s]], found type [[%s]] instead                                                                                          $ ");
    SWAG_ERROR(Err0525, "type mismatch UFCS                                $ expected an UFCS argument of type [[%s]], found type [[%s]] instead                                                                      $ ");
    SWAG_ERROR(Err0526, "type mismatch [[#message]]                        $ expected a type [[Swag.CompilerMsgMask]] as the [[#message]] parameter, found type [[%s]] instead                                        $ ");
    SWAG_ERROR(Err0527, "type mismatch [[@mkany]]                          $ cannot match the pointer type [[%s]] to the second argument [[%s]]                                                                       $ you should have a pointer to [[%s]] as a first argument, or [[%s]] as the second");
    SWAG_ERROR(Err0528, "type mismatch [[orelse]]                          $ cannot have a [[struct]] as an [[orelse]] argument                                                                                       $ ");
    SWAG_ERROR(Err0529, "type mismatch [[orelse]]                          $ cannot have the type [[%s]] as an [[orelse]] argument                                                                                    $ ");
    SWAG_ERROR(Err0530, "type mismatch [[switch]]                          $ cannot use the type [[%s]] as a [[switch]] expression                                                                                    $ ");
    SWAG_ERROR(Err0531, "type mismatch [[with]]                            $ cannot use [[with]] on an enum variable (type is [[%s]])                                                                                 $ you can use [[with]] on an enum type, but not a variable");
    SWAG_ERROR(Err0532, "type mismatch [[with]]                            $ cannot use [[with]] on type [[%s]]                                                                                                       $ expected a namespace, an enum, a struct or a pointer to struct");
    SWAG_ERROR(Err0533, "type mismatch argument                            $ cannot use a tuple as the [[@countof]] argument                                                                                          $ ");
    SWAG_ERROR(Err0534, "type mismatch argument                            $ cannot use a tuple as the [[@dataof]] argument                                                                                           $ ");
    SWAG_ERROR(Err0535, "type mismatch argument                            $ cannot use the type [[%s]] as the [[@dataof]] argument                                                                                   $ ");
    SWAG_ERROR(Err0536, "type mismatch argument                            $ cannot use the type [[%s]] for [[#include]]                                                                                              $ it requires an argument of type [[string]]");
    SWAG_ERROR(Err0537, "type mismatch argument                            $ cannot use the type [[%s]] for [[#inject]]                                                                                               $ it requires an argument of type [[code]]");
    SWAG_ERROR(Err0538, "type mismatch argument                            $ cannot use the type [[%s]] for [[where]]                                                                                                 $ it requires an argument of type [[bool]]");
    SWAG_ERROR(Err0539, "type mismatch argument                            $ expected a [[string]] as the [[#runes]] argument, found type [[%s]] instead                                                              $ ");
    SWAG_ERROR(Err0540, "type mismatch argument                            $ expected a [[typeinfo]] as the [[@mkany]] second argument, found type [[%s]] instead                                                     $ ");
    SWAG_ERROR(Err0541, "type mismatch argument                            $ expected a [[typeinfo]] as the [[@mkinterface]] second argument, found type [[%s]] instead                                               $ ");
    SWAG_ERROR(Err0542, "type mismatch argument                            $ expected a block pointer as the first argument of [[%s]] if the number of values is greater than one (type is [[%s]])                    $ ");
    SWAG_ERROR(Err0543, "type mismatch argument                            $ expected a block pointer as the first argument of [[%s]] if the number of values is variable (type is [[%s]])                            $ ");
    SWAG_ERROR(Err0544, "type mismatch argument                            $ expected a block pointer as the first argument of [[%s]], found type [[%s]] instead                                                      $ ");
    SWAG_ERROR(Err0545, "type mismatch argument                            $ expected a pointer as the first argument of [[%s]], found type [[%s]] instead                                                            $ ");
    SWAG_ERROR(Err0546, "type mismatch argument                            $ expected a pointer or a struct as the [[@mkinterface]] first argument, found [[%s]] instead                                              $ ");
    SWAG_ERROR(Err0547, "type mismatch argument                            $ expected a pointer to [[u8]] as the [[@mkstring]] first argument, found type [[%s]] instead                                              $ ");
    SWAG_ERROR(Err0548, "type mismatch argument                            $ expected a pointer to a function as the [[@mkcallback]] argument, found type [[%s]] instead                                              $ ");
    SWAG_ERROR(Err0549, "type mismatch argument                            $ expected an argument of type [[%s]], found type [[%s]] instead                                                                           $ ");
    SWAG_ERROR(Err0550, "type mismatch argument                            $ expected an integer as the [[@countof]] argument, found type [[%s]] instead                                                              $ ");
    SWAG_ERROR(Err0551, "type mismatch argument                            $ expected an integer for the [[%s]] count, found type [[%s]] instead                                                                      $ ");
    SWAG_ERROR(Err0552, "type mismatch argument                            $ expected an interface name as the [[@mkinterface]] third argument, found type [[%s]] instead                                             $ ");
    SWAG_ERROR(Err0553, "type mismatch argument                            $ expected the type [[string]] as the argument of [[%s]], found type [[%s]] instead                                                        $ ");
    SWAG_ERROR(Err0554, "type mismatch array                               $ cannot declare a static array of type [[void]]                                                                                           $ ");
    SWAG_ERROR(Err0555, "type mismatch array dimension                     $ cannot use the type [[%s]] for an array dimension                                                                                        $ the dimension must be an integer");
    SWAG_ERROR(Err0556, "type mismatch array index                         $ cannot use the type [[%s]] for an array access                                                                                           $ the index must be an integer");
    SWAG_ERROR(Err0557, "type mismatch assign                              $ cannot affect to the tuple because the right expression is not compatible                                                                $ ");
    SWAG_ERROR(Err0558, "type mismatch assign                              $ cannot assign a function pointer to a constant                                                                                           $ ");
    SWAG_ERROR(Err0559, "type mismatch comparison                          $ cannot compare a slice with [[%s]]                                                                                                       $ a slice comparison is only allowed with [[null]]");
    SWAG_ERROR(Err0560, "type mismatch comparison                          $ cannot compare an interface with [[%s]]                                                                                                  $ an interface comparison is only allowed with [[null]], another interface or with a [[typeinfo]]");
    SWAG_ERROR(Err0561, "type mismatch comparison                          $ cannot compare the type [[any]] with the type [[%s]]                                                                                     $ an [[any]] comparison is only allowed with [[null]] or with a [[typeinfo]]");
    SWAG_ERROR(Err0562, "type mismatch comparison                          $ cannot use comparison operations on tuples                                                                                               $ ");
    SWAG_ERROR(Err0563, "type mismatch comparison                          $ cannot use the comparison operation [['%s']] with the type [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0564, "type mismatch comparison                          $ cannot use the comparison operation [['%s']] with the type [[%s]] as the left argument                                                   $ ");
    SWAG_ERROR(Err0565, "type mismatch comparison                          $ cannot use the comparison operation [['%s']] with the type [[%s]] as the right argument                                                  $ ");
    SWAG_ERROR(Err0566, "type mismatch const                               $ cannot cast from an immutable type [[%s]] to a mutable one [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0567, "type mismatch const UFCS                          $ cannot use an immutable type [[%s]] for the UFCS argument                                                                                $ it should be mutable");
    SWAG_ERROR(Err0568, "type mismatch const argument                      $ expected a mutable pointer as the [[%s]] first argument, found type [[%s]] instead                                                       $ ");
    SWAG_ERROR(Err0569, "type mismatch const argument                      $ expected a mutable variable as the [[%s]] first argument, found type [[%s]] instead                                                      $ ");
    SWAG_ERROR(Err0570, "type mismatch embedded enum                       $ expected an enum type, found type [[%s]] instead                                                                                         $ ");
    SWAG_ERROR(Err0571, "type mismatch enum                                $ cannot use the type [[%s]] as an enum type                                                                                               $ ");
    SWAG_ERROR(Err0572, "type mismatch enum                                $ cannot use the type [[%s]] in an enum marked with [[#[Swag.EnumFlags]]]                                                                  $ the type should be an unsigned integer");
    SWAG_ERROR(Err0573, "type mismatch enum                                $ cannot use the type [[%s]] in an enum marked with [[#[Swag.EnumIndex]]]                                                                  $ the type should be an integer");
    SWAG_ERROR(Err0574, "type mismatch enum                                $ cannot use the type [[%s]] in an enum marked with [[#[Swag.NoDuplicate]]]                                                                $ ");
    SWAG_ERROR(Err0575, "type mismatch enum                                $ cannot use the type [[cstring]] as an enum type                                                                                          $ consider using [[string]] instead");
    SWAG_ERROR(Err0576, "type mismatch enum                                $ expected an enum of type [[%s]], found type [[%s]] instead                                                                               $ ");
    SWAG_ERROR(Err0577, "type mismatch enum                                $ expected the enum array type [[%s]] to be [[const]]                                                                                      $ this should be designated as [[const %s]]");
    SWAG_ERROR(Err0578, "type mismatch enum                                $ expected the enum slice type [[%s]] to be [[const]]                                                                                      $ this should be designated as [[const %s]]");
    SWAG_ERROR(Err0579, "type mismatch field                               $ expected type [[%s]] for the field [[%s]], found type [[%s]] instead                                                                     $ ");
    SWAG_ERROR(Err0580, "type mismatch generic                             $ expected type [[%s]] for the generic %s, found type [[%s]] instead                                                                       $ ");
    SWAG_ERROR(Err0581, "type mismatch generic parameter                   $ cannot use tuple types as generic parameters                                                                                             $ this is not supported");
    SWAG_ERROR(Err0582, "type mismatch operation                           $ cannot use the bit inversion operation [['~']] with the type [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0583, "type mismatch operation                           $ cannot use the operation [['%s']] with the non-integer type [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0584, "type mismatch operation                           $ cannot use the operation [['%s']] with the type [[%s]]                                                                                   $ ");
    SWAG_ERROR(Err0585, "type mismatch operation                           $ cannot use the operation [['%s']] with the type [[%s]] as the left argument                                                              $ ");
    SWAG_ERROR(Err0586, "type mismatch operation                           $ cannot use the operation [['%s']] with the type [[%s]] as the right argument                                                             $ ");
    SWAG_ERROR(Err0587, "type mismatch operation                           $ cannot use the operation [['%s']] with tuple types                                                                                       $ ");
    SWAG_ERROR(Err0588, "type mismatch pointer                             $ cannot convert a value pointer [[%s]] to a block pointer [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0589, "type mismatch pointer                             $ cannot convert from the type [[%s]] to a pointer type                                                                                    $ ");
    SWAG_ERROR(Err0590, "type mismatch return                              $ cannot return the type [[%s]] because the return value has already been deduced to be [[%s]]                                             $ ");
    SWAG_ERROR(Err0591, "type mismatch return                              $ cannot return the type [[%s]] because the return value has already been deduced to be nothing                                            $ ");
    SWAG_ERROR(Err0592, "type mismatch return                              $ expected an [[#ast]] block to return the type [[string]], found [[%s]] instead                                                           $ ");
    SWAG_ERROR(Err0593, "type mismatch return callback                     $ cannot create a callback of a function returning the type [[%s]]                                                                         $ this is not supported");
    SWAG_ERROR(Err0594, "unclosed arguments list                           $ expected [[)]] to close the list of attribute arguments                                                                                  $ ");
    SWAG_ERROR(Err0595, "unclosed character literal                        $ expected a closing quote before the end of the line                                                                                      $ ");
    SWAG_ERROR(Err0596, "unclosed comment                                  $ cannot find the closing [['*/']] for this multi-line comment                                                                             $ ");
    SWAG_ERROR(Err0597, "unclosed string literal                           $ expected a closing quotation mark [['\"']] before the end of the line                                                                    $ consider using triple quotes [[\"\"\"string\"\"\"]] if you want a multi-line string");
    SWAG_ERROR(Err0598, "unexpected [[#scope]] identifier                  $ expected the [[#scope]] identifier, found $$TKN$$ instead                                                                                $ ");
    SWAG_ERROR(Err0599, "unexpected [[#up]] count                          $ expected an integer literal for the [[#up]] count, found $$TKN$$ instead                                                                 $ ");
    SWAG_ERROR(Err0600, "unexpected [[break]] scope name                   $ expected a scope name or a end of line after [[break]], found $$TKN$$ instead                                                            $ ");
    SWAG_ERROR(Err0601, "unexpected [[discard]] call                       $ expected a call after [[discard]], found $$TKN$$ instead                                                                                 $ ");
    SWAG_ERROR(Err0602, "unexpected [[foreach]] name                       $ cannot use a [[foreach]] specialization name for [[%s]]                                                                                  $ it is only valid to visit a struct");
    SWAG_ERROR(Err0603, "unexpected [[switch]] block content               $ expected [[case]] or [[default]], found $$TKN$$ instead                                                                                  $ ");
    SWAG_ERROR(Err0604, "unexpected [[with]] expression                    $ expected an identifier or a variable declaration as the [[with]] expression                                                              $ ");
    SWAG_ERROR(Err0605, "unexpected affectation                            $ cannot use the assignment operator [['=']] inside an expression                                                                          $ consider using [['==']] if you are trying to compare values");
    SWAG_ERROR(Err0606, "unexpected alias name                             $ expected an identifier or a type for name aliasing, found $$TKN$$ instead                                                                $ ");
    SWAG_ERROR(Err0607, "unexpected alias name                             $ expected the alias name after [[%s]], found $$TKN$$ instead                                                                              $ ");
    SWAG_ERROR(Err0608, "unexpected alias variable name                    $ expected an identifier as a variable alias name, found $$TKN$$ instead                                                                   $ ");
    SWAG_ERROR(Err0609, "unexpected aliased names                          $ cannot use variable aliases when calling [[%s]] because it is not a macro or a mixin                                                     $ ");
    SWAG_ERROR(Err0610, "unexpected argument name                          $ expected an argument name before [[:]], found $$TKN$$ instead                                                                            $ ");
    SWAG_ERROR(Err0611, "unexpected attribute name                         $ expected an attribute name, found $$TKN$$ instead                                                                                        $ ");
    SWAG_ERROR(Err0612, "unexpected attribute return type                  $ cannot declare a return type starting with [[->]] in an attribute                                                                        $ ");
    SWAG_ERROR(Err0613, "unexpected binary digit                           $ expected a binary digit, found $$TKN$$ instead                                                                                           $ binary literals can only contain [[0]] or [[1]]");
    SWAG_ERROR(Err0614, "unexpected character                              $ unexpected character [['%s']]                                                                                                            $ ");
    SWAG_ERROR(Err0615, "unexpected comparison                             $ cannot use the comparison operator [['==']] here                                                                                         $ expected an assignment with the symbol [['=']]");
    SWAG_ERROR(Err0616, "unexpected compiler instruction scope             $ unexpected scoping of a compiler instruction                                                                                             $ compiler instructions do not belong to a specific scope");
    SWAG_ERROR(Err0617, "unexpected default value                          $ cannot use default values for variadic parameters                                                                                        $ ");
    SWAG_ERROR(Err0618, "unexpected embedded instruction                   $ expected an embedded instruction or a curly block, found $$TKN$$ instead                                                                 $ ");
    SWAG_ERROR(Err0619, "unexpected embedded instruction                   $ expected an embedded instruction, found $$TKN$$ instead                                                                                  $ ");
    SWAG_ERROR(Err0620, "unexpected enum identifier                        $ expected an enum value identifier, found $$TKN$$ instead                                                                                 $ ");
    SWAG_ERROR(Err0621, "unexpected enum name                              $ expected the enum name, found $$TKN$$ instead                                                                                            $ ");
    SWAG_ERROR(Err0622, "unexpected function body                          $ unexpected body for a function marked with [[#[Swag.Foreign]]]                                                                           $ ");
    SWAG_ERROR(Err0623, "unexpected function overload                      $ cannot declare another function with the same name [[%s]]                                                                                $ consider marking all functions with [[#[Swag.Overload]]] if you want to declare an overload");
    SWAG_ERROR(Err0624, "unexpected generic arguments                      $ unexpected generic arguments after %s                                                                                                    $ ");
    SWAG_ERROR(Err0625, "unexpected generic arguments                      $ unexpected generic arguments after the name                                                                                              $ ");
    SWAG_ERROR(Err0626, "unexpected generic arguments                      $ unexpected generic arguments after the variable [[%s]]                                                                                   $ ");
    SWAG_ERROR(Err0627, "unexpected generic function                       $ cannot have a generic function [[%s]] marked with [[#[Swag.NotGeneric]]]                                                                 $ ");
    SWAG_ERROR(Err0628, "unexpected generic parameters                     $ unexpected generic parameters in [[%s]]                                                                                                  $ ");
    SWAG_ERROR(Err0629, "unexpected generic parameters                     $ unexpected generic parameters in [[%s]] because of [[#[Swag.NotGeneric]]]                                                                $ ");
    SWAG_ERROR(Err0630, "unexpected generic parameters                     $ unexpected generic parameters in a function interface                                                                                    $ ");
    SWAG_ERROR(Err0631, "unexpected hexadecimal digit                      $ expected an hexadecimal digit, found $$TKN$$ instead                                                                                     $ hexadecimal literals can only contain digits [[0-9]], [[A-F]], and [[a-f]]");
    SWAG_ERROR(Err0632, "unexpected identifier                             $ cannot have two consecutive identifiers                                                                                                  $ ");
    SWAG_ERROR(Err0633, "unexpected identifier                             $ cannot use a global identifier like [[%s]] at the file level                                                                             $ ");
    SWAG_ERROR(Err0634, "unexpected instrinsic scope                       $ unexpected scoping of an intrinsic                                                                                                       $ intrinsics do not belong to a specific scope");
    SWAG_ERROR(Err0635, "unexpected instruction modifier                   $ cannot apply the instruction modifier [[%s]] to [[%s]]                                                                                   $ ");
    SWAG_ERROR(Err0636, "unexpected lambda parameter name                  $ cannot use a name when declaring a lambda type                                                                                           $ consider removing it");
    SWAG_ERROR(Err0637, "unexpected name                                   $ cannot use more than [[2]] [[foreach]] alias names ([[%u]] were provided)                                                                $ ");
    SWAG_ERROR(Err0638, "unexpected number prefix                          $ expected [[0x]] for hexadecimal or [[0b]] for binary, got 0$$TKN$$ instead                                                               $ ");
    SWAG_ERROR(Err0639, "unexpected parameter name                         $ expected a parameter name, found $$TKN$$ instead                                                                                         $ ");
    SWAG_ERROR(Err0640, "unexpected parameters                             $ unexpected [[(]] because a compiler %s must not have parameters                                                                          $ expected [[{]] here");
    SWAG_ERROR(Err0641, "unexpected return value                           $ cannot declare a return value in a function marked with [[#[Swag.CalleeReturn]]]                                                         $ ");
    SWAG_ERROR(Err0642, "unexpected return value                           $ cannot return a value from a %s                                                                                                          $ ");
    SWAG_ERROR(Err0643, "unexpected return value                           $ expected [[->]] before $$TKN$$ to declare a function return type                                                                         $ ");
    SWAG_ERROR(Err0644, "unexpected return value                           $ expected [[->]] to declare a function return type, got $$TKN$$ instead                                                                   $ ");
    SWAG_ERROR(Err0645, "unexpected return value                           $ unexpected return value of type [[%s]]                                                                                                   $ ");
    SWAG_ERROR(Err0646, "unexpected return value                           $ unexpected return value of type [[%s]] for function [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0647, "unexpected symbol                                 $ unexpected symbol [['%s']] after the %s                                                                                                  $ ");
    SWAG_ERROR(Err0648, "unexpected tuple unpacking name                   $ expected a variable name or [[?]] for tuple unpacking, found $$TKN$$ instead                                                             $ ");
    SWAG_ERROR(Err0649, "unexpected type                                   $ cannot start a declaration with a type                                                                                                   $ ");
    SWAG_ERROR(Err0650, "unexpected type alias                             $ cannot use a type alias as an [[impl]] block name                                                                                        $ expected a direct type instead");
    SWAG_ERROR(Err0651, "unexpected type declaration                       $ cannot have a type declaration after [[self]]                                                                                            $ [[self]] is implicitly typed; consider removing the redundant type");
    SWAG_ERROR(Err0652, "unexpected type declaration                       $ cannot have a type declaration after an unnamed parameter                                                                                $ ");
    SWAG_ERROR(Err0653, "unexpected type suffix                            $ cannot have a type suffix after %s                                                                                                       $ ");
    SWAG_ERROR(Err0654, "unknown [[#global]] instruction                   $ cannot recognize [[%s]] as a valid [[#global]] instruction                                                                               $ ");
    SWAG_ERROR(Err0655, "unknown [[cast]] mode                             $ cannot recognize [[%s]] as a valid [[cast]] mode                                                                                         $ the only acceptable mode are [[bit]] and [[unsafe]]");
    SWAG_ERROR(Err0656, "unknown [[defer]] mode                            $ cannot recognize [[%s]] as a valid [[defer]] mode                                                                                        $ the acceptable modes are [[err]] and [[noerr]]");
    SWAG_ERROR(Err0657, "unknown [[foreach]]                               $ cannot visit the type [[%s]]                                                                                                             $ cannot find [[opVisit]]");
    SWAG_ERROR(Err0658, "unknown [[foreach]] name                          $ cannot find the visit specialization name [[%s]] in [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0659, "misplaced [[verify]]                              $ cannot use a [[verify]] constraint on [[%s]]                                                                                             $ [[verify]] constraints are not supported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0660, "unknown attribute                                 $ cannot find the attribute [[%s]]                                                                                                         $ ");
    SWAG_ERROR(Err0661, "unknown attribute                                 $ cannot find the attribute [[%s]] in [[%s]]                                                                                               $ ");
    SWAG_ERROR(Err0662, "unknown compiler instruction                      $ cannot recognize [[%s]] as a valid compiler instruction                                                                                  $ a compiler instruction starts with the symbol [['#']]");
    SWAG_ERROR(Err0663, "unknown enum                                      $ cannot find the enum [[%s]]                                                                                                              $ ");
    SWAG_ERROR(Err0664, "unknown enum value                                $ cannot find the enumeration value [[%s]] in [[%s]]                                                                                       $ ");
    SWAG_ERROR(Err0665, "unknown escape code                               $ cannot recognize [['%c']] as a valid escape code                                                                                         $ ");
    SWAG_ERROR(Err0666, "unknown field name                                $ cannot find the field name [[%s]] in [[%s]]                                                                                              $ ");
    SWAG_ERROR(Err0667, "unknown file                                      $ cannot find the file [[\"%s\"]]                                                                                                          $ ");
    SWAG_ERROR(Err0668, "unknown function                                  $ cannot find the function [[%s]]                                                                                                          $ ");
    SWAG_ERROR(Err0669, "unknown function                                  $ cannot find the function [[%s]] in [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0670, "unknown identifier                                $ cannot find an [[enum]] or a [[with]] to match with the identifier [[%s]]                                                                $ ");
    SWAG_ERROR(Err0671, "unknown identifier                                $ cannot find the identifier [[%s]]                                                                                                        $ ");
    SWAG_ERROR(Err0672, "unknown identifier                                $ cannot find the identifier [[%s]] in [[%s]] or in %s [[%s]]                                                                              $ ");
    SWAG_ERROR(Err0673, "unknown identifier                                $ cannot find the identifier [[%s]] in the tuple                                                                                           $ ");
    SWAG_ERROR(Err0674, "unknown interface function                        $ cannot find the function [[%s]] in [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0675, "unknown intrinsic                                 $ cannot recognize [[%s]] as a valid intrinsic starting with [[@]]                                                                         $ ");
    SWAG_ERROR(Err0676, "unknown label                                     $ cannot find the scope label [[%s]]                                                                                                       $ ");
    SWAG_ERROR(Err0677, "unknown method                                    $ cannot find the method [[%s]] in [[%s]]                                                                                                  $ ");
    SWAG_ERROR(Err0678, "unknown named argument                            $ cannot find the named argument [[%s]]                                                                                                    $ ");
    SWAG_ERROR(Err0679, "unknown pass name                                 $ cannot recognize [[%s]] as a valid compiler pass name                                                                                    $ ");
    SWAG_ERROR(Err0680, "unknown relocation offset                         $ cannot find the struct member [[%s]]                                                                                                     $ ");
    SWAG_ERROR(Err0681, "unknown struct                                    $ cannot find the struct [[%s]]                                                                                                            $ ");
    SWAG_ERROR(Err0682, "unknown struct                                    $ cannot find the struct [[%s]] in [[%s]]                                                                                                  $ ");
    SWAG_ERROR(Err0683, "unknown type                                      $ cannot find the type [[%s]]                                                                                                              $ ");
    SWAG_ERROR(Err0684, "unknown value export                              $ cannot recognize [[\"%s\"]] as a valid [[#[Swag.ExportType]]] argument                                                                   $ the acceptable values are [[\"methods\"]] and [[\"nozero\"]]");
    SWAG_ERROR(Err0685, "unknown value match                               $ cannot recognize [[\"%s\"]] as a valid [[#[Swag.Match]]] argument                                                                        $ the acceptable values are [[\"where\"]] and [[\"self\"]]");
    SWAG_ERROR(Err0686, "unknown value optim                               $ cannot recognize [[\"%s\"]] as a valid [[#[Swag.Optim]]] argument                                                                        $ the acceptable values are [[\"bytecode\"]] and [[\"backend\"]]");
    SWAG_ERROR(Err0687, "unknown value safety                              $ cannot recognize [[\"%s\"]] as a valid safety value                                                                                      $ the acceptable values are [[\"boundcheck|overflow|math|switch|unreachable|dyncast|bool|nan|sanity|null\"]]");
    SWAG_ERROR(Err0688, "unknown variable                                  $ cannot find the variable [[%s]]                                                                                                          $ ");
    SWAG_ERROR(Err0689, "unknown variable                                  $ cannot find the variable [[%s]] in [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0690, "unpack number mismatch                            $ cannot unpack [[%u]] variables because the tuple has [[%u]] fields                                                                       $ ");
    SWAG_ERROR(Err0691, "unpack number mismatch                            $ cannot unpack [[%u]] variables because the tuple has only [[%u]] fields                                                                  $ ");
    SWAG_ERROR(Err0692, "unresolved array dimension                        $ cannot deduce the array dimension because of a missing initialization                                                                    $ ");
    SWAG_ERROR(Err0693, "unresolved enum flag value                        $ cannot deduce the value of the flag [[%s]] as the previous value is not a power of two                                                   $ ");
    SWAG_ERROR(Err0694, "unresolved generic                                $ cannot deduce the generic arguments when calling %s [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0695, "unresolved identifier                             $ cannot solve the identifier [[%s]]                                                                                                       $ ");
    SWAG_ERROR(Err0696, "unresolved semantic                               $ cannot resolve this                                                                                                                      $ ");
    SWAG_ERROR(Err0697, "unresolved variable type                          $ cannot deduce the type of the variable because the expression is [[null]]                                                                $ ");
    SWAG_ERROR(Err0698, "unsuitable struct for union                       $ cannot use [[%s]] for a union because it contains an [[%s]] function                                                                     $ ");
    SWAG_ERROR(Err0699, "unused alias name                                 $ cannot find a corresponding variable for the alias name [[%s]]                                                                           $ consider removing it");
    SWAG_ERROR(Err0700, "unused return value                               $ cannot ignore the return value of the function [[%s]]                                                                                    $ consider prefixing the call with [[discard]] to ignore the return value");
    SWAG_ERROR(Err0701, "unused return value                               $ cannot ignore the return value of the intrinsic [[%s]]                                                                                   $ ");
    SWAG_ERROR(Err0702, "unused return value                               $ cannot ignore the return value of the lambda [[%s]]                                                                                      $ consider prefixing the call with [[discard]] to ignore the return value");
    SWAG_ERROR(Err0736, "invalid variable name                             $ cannot use [[#mix]] as a variable name outside of a [[#[Swag.Mixin]]] function                                                           $ ");
    SWAG_ERROR(Err0743, "misplaced [[#placeholder]]                        $ cannot use [[#placeholder]] outside of a top-level scope                                                                                 $ ");
	
    SWAG_ERROR(Err0703, "already defined [[#import]] location              $ cannot redefine an [[#import]] location                                                                                                  $ ");
    SWAG_ERROR(Err0704, "already defined [[#import]] location              $ cannot redefine the [[#import]] location of the module [[%s]]                                                                            $ already defined as [[%s]]");
    SWAG_ERROR(Err0705, "already defined [[#import]] version               $ cannot redefine an [[#import]] version                                                                                                   $ ");
    SWAG_ERROR(Err0706, "already defined [[#import]] version               $ cannot redefine the [[#import]] version of the module [[%s]]                                                                             $ already defined as [[%s]]");
    SWAG_ERROR(Err0707, "exception!                                        $ cannot proceed because of an execution exception                                                                                         $ ");
    SWAG_ERROR(Err0708, "failed generic instantiation                      $ cannot create the variable because of the generic type [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0726, "failed generic instantiation                      $ cannot create the constant because of the generic type [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0709, "failed generic instantiation                      $ cannot instantiate %s because of missing generic arguments                                                                               $ ");
    SWAG_ERROR(Err0710, "failed generic instantiation                      $ cannot instantiate the generic function [[%s]] because of missing generic arguments                                                      $ ");
    SWAG_ERROR(Err0711, "failed generic instantiation                      $ cannot instantiate the generic struct [[%s]] because of missing generic arguments                                                        $ ");
    SWAG_ERROR(Err0712, "fetch error                                       $ cannot fetch the file [[%s]] for module dependency [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0713, "file delete error                                 $ cannot delete the file [[%s]]                                                                                                            $ ");
    SWAG_ERROR(Err0714, "file format error                                 $ cannot process the file because the format must be ASCII, UTF-8, or UTF-8-BOM                                                            $ ");
    SWAG_ERROR(Err0715, "file not found                                    $ cannot find the documentation page [[%s]]                                                                                                $ ");
    SWAG_ERROR(Err0716, "file not found                                    $ cannot find the file [[%s]] in the module folder [[%s]]                                                                                  $ ");
    SWAG_ERROR(Err0717, "file open error                                   $ cannot open the [[#include]] file [[%s]]                                                                                                 $ ");
    SWAG_ERROR(Err0718, "file open error                                   $ cannot open the file [[%s]]                                                                                                              $ ");
    SWAG_ERROR(Err0719, "file open error                                   $ cannot open the file [[%s]]                                                                                                              $ ");
    SWAG_ERROR(Err0720, "file open error                                   $ cannot open the file [[%s]] for writing                                                                                                  $ ");
    SWAG_ERROR(Err0721, "file read error                                   $ cannot read the source file [[%s]]                                                                                                       $ ");
    SWAG_ERROR(Err0722, "file write error                                  $ cannot write to the file [[%s]]                                                                                                          $ ");
    SWAG_ERROR(Err0723, "folder error                                      $ cannot create the directory [[%s]]                                                                                                       $ ");
    SWAG_ERROR(Err0724, "folder error dependency                           $ cannot find the dependency module folder [[\"%s\"]]                                                                                      $ ");
    SWAG_ERROR(Err0725, "invalid assign                                    $ cannot assign because the left expression is not a value                                                                                 $ ");
    SWAG_ERROR(Err0727, "invalid expression                                $ expected an expression, found $$TKN$$ instead                                                                                            $ ");
    SWAG_ERROR(Err0729, "invalid [[#import]] location                      $ unexpected [[#import]] location format                                                                                                   $ expecting [[location=\"mode@accesspath\"]] where mode is [[swag]] or [[disk]]");
    SWAG_ERROR(Err0730, "invalid [[#import]] version                       $ unexpected [[#import]] version format                                                                                                    $ ");
    SWAG_ERROR(Err0754, "invalid [[#import]] version                       $ expected a [[#import]] major version because the revision was set to [[%d]]                                                              $ ");
    SWAG_ERROR(Err0755, "invalid [[#import]] version                       $ expected a [[#import]] revision because the build number was set to [[%d]]                                                               $ ");
    SWAG_ERROR(Err0731, "invalid literal                                   $ cannot convert the literal [[%I64u]]                                                                                                     $ ");
    SWAG_ERROR(Err0732, "invalid reference                                 $ cannot reference the current file scope                                                                                                  $ ");
    SWAG_ERROR(Err0733, "invalid return type                               $ cannot use [[%s]] as a function return type                                                                                              $ ");
    SWAG_ERROR(Err0734, "invalid runtime typeinfo                          $ cannot convert [[%s]] to a runtime typeinfo                                                                                              $ ");
    SWAG_ERROR(Err0735, "invalid type                                      $ cannot initialize with an expression of type [[void]]                                                                                    $ ");
    SWAG_ERROR(Err0737, "invalid variable name                             $ cannot use a variable name ([[%s]]) starting with [[#]]                                                                                  $ only [[#mix]] and [[#alias]] are accepted in that case");
    SWAG_ERROR(Err0738, "misplaced [[#dependencies]]                       $ expected [[#dependencies]] to be placed at the file level                                                                                $ ");
    SWAG_ERROR(Err0739, "misplaced [[#global testerror]]                   $ cannot use [[#global testerror]] outside of a test file in the [[./tests]] folder                                                        $ ");
    SWAG_ERROR(Err0740, "misplaced [[#global testwarning]]                 $ cannot use [[#global testwarning]] outside of a test file in the [[./tests]] folder                                                      $ ");
    SWAG_ERROR(Err0741, "misplaced [[#import]]                             $ cannot use [[#import]] outside the [[#dependencies]] block                                                                               $ ");
    SWAG_ERROR(Err0742, "misplaced [[#load]]                               $ cannot use [[#load]] outside the [[#dependencies]] block                                                                                 $ ");
    SWAG_ERROR(Err0744, "misplaced [[#test]]                               $ cannot use [[#test]] outside test modules (in the [[./tests]] folder)                                                                    $ ");
    SWAG_ERROR(Err0745, "missing [[#import]] string argument               $ expected the module name to import after [[#import]], found $$TKN$$ instead                                                              $ ");
    SWAG_ERROR(Err0746, "missing [[#include]] string argument              $ expected the file name to include after [[#include]], found $$TKN$$ instead                                                              $ ");
    SWAG_ERROR(Err0747, "missing [[#main]]                                 $ cannot find the program entry point [[#main]]                                                                                            $ ");
    SWAG_ERROR(Err0748, "missing initialization                            $ cannot declare an immutable variable without an explicit initialization                                                                  $ ");
    SWAG_ERROR(Err0749, "missing test error                                $ expected at least one error, but none was raised                                                                                         $ ");
    SWAG_ERROR(Err0750, "missing test warning                              $ expected at least one warning, but none was raised                                                                                       $ ");
    SWAG_ERROR(Err0751, "out of range call level                           $ unexpected call level                                                                                                                    $ the limit defined with [[--limit-recurse-bc:%d]] has been reached");
    SWAG_ERROR(Err0752, "out of range compiler limit                       $ unexpected size of the %s (maximum size is [[0x%I64x]] bytes)                                                                            $ ");
    SWAG_ERROR(Err0753, "out of range compiler limit                       $ unexpected size of the data segment [[%s]] (maximum size is [[0x%I64x]] bytes)                                                           $ ");
    SWAG_ERROR(Err0756, "system error                                      $ cannot create the process [[%s]]                                                                                                         $ ");
    SWAG_ERROR(Err0757, "system error                                      $ cannot create the process [[%s]] (::CreatePipe)                                                                                          $ ");
    SWAG_ERROR(Err0758, "type mismatch                                     $ cannot use the type [[%s]] with the type [[%s]] defined in the command line for [[%s]]; they are incompatible                            $ ");
    SWAG_ERROR(Err0759, "type mismatch operation                           $ cannot use the operation [['%s']] because the left expression is an enum type ([[%s]]) not marked with [[#[Swag.EnumFlags]]]             $ ");
    SWAG_ERROR(Err0760, "type mismatch operation                           $ cannot use the operation [['%s']] because the right expression is an enum type ([[%s]]) not marked with [[#[Swag.EnumFlags]]]            $ ");
    SWAG_ERROR(Err0761, "unexpected [[#import]] location                   $ expected a [[#import]] location path, found $$TKN$$ instead                                                                              $ ");
    SWAG_ERROR(Err0762, "unexpected [[#import]] location                   $ expected a [[#import]] version as a string, found $$TKN$$ instead                                                                        $ ");
    SWAG_ERROR(Err0763, "unknown dependency                                $ cannot find the module dependency [[%s]]                                                                                                 $ ");
    SWAG_ERROR(Err0764, "unknown foreign function                          $ cannot find the foreign function [[%s]]                                                                                                  $ ");
    SWAG_ERROR(Err0765, "unknown identifier                                $ cannot find the identifier [[%s]] in [[%s]]                                                                                              $ ");
    SWAG_ERROR(Err0766, "unknown value location                            $ cannot recognize [[\"%s\"]] as a valid [[location]] value                                                                                $ the acceptable values are [[\"swag\"]] and [[\"disk\"]]");
    SWAG_ERROR(Err0767, "unresolved dependency                             $ cannot resolve the dependency to the module [[%s]] because of a version mismatched                                                       $ ");
    SWAG_ERROR(Err0768, "unresolved dependency                             $ cannot resolve the dependency to the module [[%s]] because version [[%s]] was not found                                                  $ ");
    SWAG_ERROR(Err0769, "unresolved dependency                             $ cannot resolve the dependency to the module [[%s]] because version [[%s]] was not found at [[%s]]                                        $ ");
    SWAG_ERROR(Err0770, "unresolved dependency                             $ cannot resolve the module dependency [[%s]] because the [[location]] is empty                                                            $ ");
    SWAG_ERROR(Err0771, "unresolved foreign call                           $ cannot load the module [[%s]] while resolving the foreign function [[%s]]                                                                $ ");
    SWAG_ERROR(Err0772, "unresolved generic                                $ cannot deduce the generic type, this is too complicated (embedded tuples)                                                                $ ");
    SWAG_ERROR(Err0773, "unresolved interface                              $ cannot solve the interface because of the generic type [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0774, "unresolved variable type                          $ cannot deduce the type of %s [[%s]]                                                                                                      $ ");
    SWAG_ERROR(Err0775, "unsupported [[#nameof]] argument                  $ cannot evaluate the [[#nameof]] argument                                                                                                 $ ");
    SWAG_ERROR(Err0776, "unsupported [[#stringof]] argument                $ cannot evaluate the [[#stringof]] argument                                                                                               $ ");
	
    SWAG_ERROR(Err0728, "invalid type                                      $ expected an [[interface]] as the left expression of a [[%s]] cast, found type [[%s]] instead                                             $ ");
    SWAG_ERROR(Err0777, "invalid type                                      $ expected a [[struct]] type as the right expression of a [[%s]] cast, found type [[%s]] instead                                           $ ");
    SWAG_ERROR(Err0778, "invalid operation                                 $ cannot use operation [['%s']] on type [[null]]                                                                                           $ ");
    SWAG_ERROR(Err0779, "already defined switch value                      $ cannot use the [[switch]] value [[null]] because it already exists                                                                       $ ");
    SWAG_ERROR(Err0780, "invalid [[expect]] expression                     $ expected an expression compatible with an [[expect]] compile time check                                                                  $ the only valid expression for now is [[param != null]]");
    SWAG_ERROR(Err0782, "invalid [[expect]] expression                     $ expected a function parameter name                                                                                                       $ ");
    SWAG_ERROR(Err0781, "invalid non nullable type                         $ cannot make the type [[%s]] non nullable with [['!']]                                                                                    $ ");
    SWAG_ERROR(Err0783, nullptr);
    SWAG_ERROR(Err0784, nullptr);
    SWAG_ERROR(Err0785, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Nte0001, "[[%s]] could refer to either a type or a parameter name");
    SWAG_ERROR(Nte0002, "[[%s]] does not accept arguments within parentheses, so what follows should be a standard [[(expression)]]");
    SWAG_ERROR(Nte0003, "[[%s]] is %s of type [[%s]], which does not contain a sub-scope");
    SWAG_ERROR(Nte0004, "[[%s]] is %s, which does not have a sub-scope");
    SWAG_ERROR(Nte0005, "[[%s]] is a variable, and variables in expressions cannot be evaluated at compile-time");
    SWAG_ERROR(Nte0006, "[[%s]] is an array of type [[%s]], which does not have a sub-scope");
    SWAG_ERROR(Nte0007, "[[%s]] is interpreted as a type, not a generic value, due to the preceding [[var]]");
    SWAG_ERROR(Nte0008, "[[%s]] was found in [[%s]] because of a [[using]] field");
    SWAG_ERROR(Nte0009, "[[closure]] should be followed by capture parameters enclosed in [[|...|]]");
    SWAG_ERROR(Nte0010, "[[discard]] cannot be used with an intrinsic, as an intrinsic result should always be utilized");
    SWAG_ERROR(Nte0012, "a [[bool]] type is expected because the [[if]] statement checks if the variable is [[true]] (non-zero) or [[false]] (zero)");
    SWAG_ERROR(Nte0013, "a [[let]] variable is immutable and cannot be modified");
    SWAG_ERROR(Nte0014, "a [[public]] struct should export all of its special functions");
    SWAG_ERROR(Nte0015, "a constant requires compile-time evaluation");
    SWAG_ERROR(Nte0016, "a global variable requires compile-time evaluation");
    SWAG_ERROR(Nte0017, "a lambda can be converted to a closure type, but not vice versa");
    SWAG_ERROR(Nte0018, "a return type is missing");
    SWAG_ERROR(Nte0019, "a standard function in an [[impl]] block cannot overshadow a function from the corresponding interface");
    SWAG_ERROR(Nte0020, "an [[internal]] struct cannot export its special functions");
    SWAG_ERROR(Nte0021, "an attribute is not a function; consider removing it");
    SWAG_ERROR(Nte0022, "an implicit [[@countof]] is present here");
    SWAG_ERROR(Nte0023, "both branches of an [[orelse]] should have the same type");
    SWAG_ERROR(Nte0024, "but it is applied to this %s");
    SWAG_ERROR(Nte0025, "cannot resolve %s [[%s]]");
    SWAG_ERROR(Nte0026, "cannot resolve type [[%s]]");
    SWAG_ERROR(Nte0027, "consider adding [['&']] to get the address of this expression");
    SWAG_ERROR(Nte0028, "consider adding [[impl]] before if this is intentional");
    SWAG_ERROR(Nte0029, "consider adding [[using]] before [[self]] if you intend to access members of the instance directly");
    SWAG_ERROR(Nte0030, "consider adding a [[break]] if you want to exit without any action");
    SWAG_ERROR(Nte0031, "consider adding a [[break]] to exit, or use [[fallthrough]] to continue to the next [[case]]");
    SWAG_ERROR(Nte0032, "consider adding a return type [[->%s]] to the declaration");
    SWAG_ERROR(Nte0033, "consider adding an explicit [[cast(%s)]] if necessary");
    SWAG_ERROR(Nte0034, "consider adding the scope [[%s]] before [[.]]");
    SWAG_ERROR(Nte0035, "consider casting to the underlying [[any]] type");
    SWAG_ERROR(Nte0036, "consider casting with [[cast(%s)]]");
    SWAG_ERROR(Nte0037, "consider initializing the global variable with [[undefined]] instead of zero");
    SWAG_ERROR(Nte0038, "consider prefixing [[%s]] with [[const]] to declare a generic constant");
    SWAG_ERROR(Nte0039, "consider prefixing with [[#run]] to enforce a compile-time call");
    SWAG_ERROR(Nte0040, "consider removing [[var]] or replacing it with [[const]] if you intend to declare a generic value");
    SWAG_ERROR(Nte0041, "consider removing one [[using]]");
    SWAG_ERROR(Nte0042, "consider removing the %s or replacing it with the scope [[%s]]");
    SWAG_ERROR(Nte0043, "consider renaming it to [[_%s]] if this is intentional");
    SWAG_ERROR(Nte0044, "consider replacing [[undefined]] with an explicit initialization value");
    SWAG_ERROR(Nte0045, "consider taking the address with [['&']] to create a reference");
    SWAG_ERROR(Nte0046, "consider using [[#type]] before [[%s]] if it is a type, or specify a [[:type]] after [[%s]] if it is a parameter name");
    SWAG_ERROR(Nte0047, "consider using [[%s.item%s]] to access a struct or a tuple element");
    SWAG_ERROR(Nte0048, "consider using [['&']] to get the address of [[%s]]");
    SWAG_ERROR(Nte0049, "consider using [[++]] to concatenate literal strings at compile-time");
    SWAG_ERROR(Nte0050, "consider using [[-w:<path>]] or [[--workspace:<path>]] to specify a valid workspace folder, or run [[Swag]] from an appropriate workspace");
    SWAG_ERROR(Nte0051, "consider using [[//]] to start a line comment");
    SWAG_ERROR(Nte0052, "consider using [[?]] to unpack and discard a variable");
    SWAG_ERROR(Nte0053, "consider using [[#decltype]] to retrieve the type of an expression");
    SWAG_ERROR(Nte0054, "consider using [[const Value = #include \"path\"]] to embed an external file in a constant byte array");
    SWAG_ERROR(Nte0055, "consider using [[func(]] or [[closure(]] to declare a lambda type");
    SWAG_ERROR(Nte0056, "consider using [[func]] instead of [[mtd]] to avoid the implicit [[self]] parameter.");
    SWAG_ERROR(Nte0057, "consider using [[func]] to declare a function");
    SWAG_ERROR(Nte0058, "consider using [[mtd]] instead of [[func]] to implicitly include [[using self]] as the first parameter");
    SWAG_ERROR(Nte0059, "consider using [[alias]] to create an alias for %s");
    SWAG_ERROR(Nte0060, "consider using [[var]] or [[const]] instead of [[let]] to declare a global variable or constant");
    SWAG_ERROR(Nte0061, "consider using [[where <expression>]] after this to replace the [[if]] statement");
    SWAG_ERROR(Nte0062, "consider using square brackets [[%s[%s]]] to access an element by index");
    SWAG_ERROR(Nte0063, "consider using the [[@args()]] intrinsic to retrieve the program arguments");
    SWAG_ERROR(Nte0064, "consider using the full name of the enum value");
    SWAG_ERROR(Nte0065, "consider using the syntax [[func %s(...) -> %s]] to declare a function with a return type");
    SWAG_ERROR(Nte0066, "consider using the syntax [[var %s: %s]] to declare a variable");
    SWAG_ERROR(Nte0067, "consider using the syntax [[var name: type]] or [[var name = expression]] to declare a variable");
    SWAG_ERROR(Nte0068, "consider writing [[impl %s]] instead");
    SWAG_ERROR(Nte0069, "consider writing [[impl enum %s]] instead");
    SWAG_ERROR(Nte0070, "copying an array of structs is not allowed here");
    SWAG_ERROR(Nte0071, "could [[self]] be missing?");
    SWAG_ERROR(Nte0072, "could be an instance of the generic function [[%s]]");
    SWAG_ERROR(Nte0073, "could be this %s");
    SWAG_ERROR(Nte0074, "could be this other %s");
    SWAG_ERROR(Nte0075, "could be");
    SWAG_ERROR(Nte0076, "did you forget [[var]] or [[const]] to declare a global variable or constant?");
    SWAG_ERROR(Nte0077, "did you forget [[var]], [[let]], or [[const]] to declare a variable or constant?");
    SWAG_ERROR(Nte0078, "did you forget a [['.']] between [[%s]] and [[%s]]?");
    SWAG_ERROR(Nte0079, "did you mean [[%s]]?");
    SWAG_ERROR(Nte0080, "did you mean to assign a value with the symbol [['=']] instead?");
    SWAG_ERROR(Nte0081, "evaluation failed during compile-time");
    SWAG_ERROR(Nte0082, "function names starting with [[op]] and an uppercase letter are reserved for struct functions");
    SWAG_ERROR(Nte0083, "function parameters are immutable and cannot be modified");
    SWAG_ERROR(Nte0084, "it can only be applied to %s");
    SWAG_ERROR(Nte0085, "it seems like you're trying to access a nested member of [[%s]], but [[%s]] itself is not a value");
    SWAG_ERROR(Nte0086, "missing %s of type [[%s]]");
    SWAG_ERROR(Nte0087, "missing generic parameter [[%s]]");
    SWAG_ERROR(Nte0088, "missing parameter [[%s]] of type [[%s]]");
    SWAG_ERROR(Nte0089, "occurred during compile-time evaluation");
    SWAG_ERROR(Nte0090, "occurred during the [[verify]] check of the call to [[%s]]");
    SWAG_ERROR(Nte0091, "occurred during the [[where]] check of the call to [[%s]]");
    SWAG_ERROR(Nte0092, "occurred during the [[where]] check of the struct [[%s]]");
    SWAG_ERROR(Nte0093, "occurred during the generic instantiation of [[%s]]");
    SWAG_ERROR(Nte0094, "occurred during the inline expansion of [[%s]]");
    SWAG_ERROR(Nte0095, "occurred in generated code");
    SWAG_ERROR(Nte0096, "occurred while trying to convert [[%s]] to a function call argument of type [[%s]]");
    SWAG_ERROR(Nte0097, "one function declares [[throw]], while the other does not");
    SWAG_ERROR(Nte0098, "only basic types, [[enum]] and [[typeinfo]], are accepted for attribute parameters");
    SWAG_ERROR(Nte0099, "only the address of a returned reference can be taken, and this is %s");
    SWAG_ERROR(Nte0100, "parameter mismatch (type is [[%s]])");
    SWAG_ERROR(Nte0101, "pointer arithmetic is only valid for pointers declared with [['^']], not for those declared with [['^']]");
    SWAG_ERROR(Nte0102, "potential issue detected in your program's compile-time component");
    SWAG_ERROR(Nte0103, "referencing this runtime %s from the compile-time %s");
    SWAG_ERROR(Nte0104, "run [[Swag]] with [[--callstack]] for additional context and details");
    SWAG_ERROR(Nte0105, "run [[Swag]] with [[--dbg-catch]] to initiate the bytecode debugger when an exception is raised");
    SWAG_ERROR(Nte0106, "the % s [[%s]] has only been used as a scope to find function [[%s]]");
    SWAG_ERROR(Nte0107, "the %s [[%s]] is marked with [[throw]] and may raise errors you should handle");
    SWAG_ERROR(Nte0108, "the %s [[%s]] is waiting for %s [[%s]] to be resolved");
    SWAG_ERROR(Nte0109, "the %s [[%s]] wasn't found in [[%s]]. The alternative from [[%s]] was selected");
    SWAG_ERROR(Nte0110, "the [[%s]] block should either start with [[':']] or be enclosed in [[{}]]");
    SWAG_ERROR(Nte0111, "the [[%s]] block should either start with [[':']] or be enclosed in [[{}]]");
    SWAG_ERROR(Nte0112, "the [[#gettag]] default value should conform to this type");
    SWAG_ERROR(Nte0113, "the [[@init]] initialization value should conform to this pointed type ([[%s]])");
    SWAG_ERROR(Nte0114, "the address of [[%s]] is taken implicitly because it is a mutable UFCS argument");
    SWAG_ERROR(Nte0115, "the argument [[%s]] could be converted to %s");
    SWAG_ERROR(Nte0116, "the array has [[%d]] elements of type [[%s]], which does not match a slice of type [[%s]]");
    SWAG_ERROR(Nte0117, "the associated command line option is [[%s]]");
    SWAG_ERROR(Nte0118, "the call to [[%s]] returns type [[%s]], which does not have a sub-scope");
    SWAG_ERROR(Nte0119, "the duplicated underlying enum value is [[%s]]");
    SWAG_ERROR(Nte0120, "the function [[%s]] is not marked with [[#[Swag.ConstExpr]]]");
    SWAG_ERROR(Nte0121, "the function [[%s]] is tagged with [[#[Swag.CalleeReturn]]], indicating the return value is utilized within [[%s]]");
    SWAG_ERROR(Nte0122, "the function call returns an immutable [[%s]]");
    SWAG_ERROR(Nte0123, "the function is marked with [[#[Swag.Inline]]]");
    SWAG_ERROR(Nte0124, "the function is marked with [[#[Swag.Macro]]]");
    SWAG_ERROR(Nte0125, "the function is marked with [[#[Swag.Mixin]]]");
    SWAG_ERROR(Nte0126, "the function is supposed to be part of the interface due to [[impl]]");
    SWAG_ERROR(Nte0127, "the identifier [[%s]] is %s, not a function or a struct");
    SWAG_ERROR(Nte0128, "the interface declaration returns type [[%s]]");
    SWAG_ERROR(Nte0129, "the interface declaration yields no return");
    SWAG_ERROR(Nte0130, "the keyword [[%s]] cannot be used as an identifier");
    SWAG_ERROR(Nte0131, "the lambda type is [[%s]]");
    SWAG_ERROR(Nte0132, "the missing value can be found here");
    SWAG_ERROR(Nte0133, "the number of values ([[%d]]) is greater than one");
    SWAG_ERROR(Nte0134, "the number of values is variable and could be greater than one");
    SWAG_ERROR(Nte0135, "the only accepted type for an integer to pointer conversion is [[u64]]");
    SWAG_ERROR(Nte0136, "the operation is not allowed on a non-pointer type");
    SWAG_ERROR(Nte0137, "the operator [['++']] requires compile-time strings as arguments");
    SWAG_ERROR(Nte0138, "the other one is an implicit parameter [[using self]]");
    SWAG_ERROR(Nte0139, "the parameter should conform to the type [[%s]]");
    SWAG_ERROR(Nte0140, "the parent scope for [[impl]] is [[%s]], but the parent scope for [[%s]] is [[%s]]");
    SWAG_ERROR(Nte0141, "the return type of an [[#ast]] block should be of type [[string]]");
    SWAG_ERROR(Nte0142, "the symbol %s [[%s]] is waiting for the generation of the type [[%s]]");
    SWAG_ERROR(Nte0143, "the symbol [[%s]] is already present in the interface scope [[%s]]");
    SWAG_ERROR(Nte0144, "the symbol [[%s]] was found through a [[using]] statement");
    SWAG_ERROR(Nte0145, "the symbol [[...]] is used to declare variadic function parameters, which is not valid in this context");
    SWAG_ERROR(Nte0146, "the type [[%s]] is expected because it was inferred here during instantiation");
    SWAG_ERROR(Nte0147, "the type [[%s]] is expected because of %s");
    SWAG_ERROR(Nte0148, "the type [[%s]] is expected because of the enum's specific type");
    SWAG_ERROR(Nte0149, "the type [[%s]] is expected because of the function's return type");
    SWAG_ERROR(Nte0150, "the value could also come from [[%s]]");
    SWAG_ERROR(Nte0151, "the value could come from [[%s]]");
    SWAG_ERROR(Nte0152, "the version format should be [[version.revision.buildnum]], where each number is either >= 0 or the [[?]] character");
    SWAG_ERROR(Nte0153, "there are multiple [[using]] fields of type [[%s]] in [[%s]], so it is unclear which one to use");
    SWAG_ERROR(Nte0154, "there is a hidden call to [[%s]] for the type [[%s]]");
    SWAG_ERROR(Nte0155, "there is a hidden call to [[%s]]");
    SWAG_ERROR(Nte0156, "there is already an implied first parameter named [[self]] because of [[mtd]]");
    SWAG_ERROR(Nte0157, "there is an implied first parameter [[self]]");
    SWAG_ERROR(Nte0158, "this %s has [[%s]] access");
    SWAG_ERROR(Nte0159, "this %s has the [[#[Swag.Compiler]]] attribute, which makes it compile-time only");
    SWAG_ERROR(Nte0160, "this %s has type [[%s]]");
    SWAG_ERROR(Nte0161, "this [[discard]] should be removed");
    SWAG_ERROR(Nte0162, "this [[dref]] operation is not possible here");
    SWAG_ERROR(Nte0163, "this [[using]] field is convertible because [[%s]] implements the interface");
    SWAG_ERROR(Nte0164, "this argument has been named");
    SWAG_ERROR(Nte0165, "this can be converted too because [[%s]] also implements the interface");
    SWAG_ERROR(Nte0166, "this cannot be prefixed with an access specifier");
    SWAG_ERROR(Nte0167, "this cannot raise errors");
    SWAG_ERROR(Nte0168, "this function call cannot be evaluated at compile-time");
    SWAG_ERROR(Nte0169, "this function cannot be called with UFCS using a value of type [[%s]]");
    SWAG_ERROR(Nte0170, "this function does not support aliased names");
    SWAG_ERROR(Nte0171, "this function is marked with [[#[Swag.Compiler]]], making it compile-time only");
    SWAG_ERROR(Nte0172, "this has [[%s]] access (type is [[%s]])");
    SWAG_ERROR(Nte0173, "this is a constant");
    SWAG_ERROR(Nte0174, "this is a lambda expression");
    SWAG_ERROR(Nte0175, "this is a type value, also known as [[typeinfo]], or [[%s]]");
    SWAG_ERROR(Nte0176, "this is an enum implementation block");
    SWAG_ERROR(Nte0177, "this is an unnamed parameter ([['?']])");
    SWAG_ERROR(Nte0178, "this is another one");
    SWAG_ERROR(Nte0179, "this is one");
    SWAG_ERROR(Nte0180, "this is the %s [[%s]]");
    SWAG_ERROR(Nte0181, "this is the %s");
    SWAG_ERROR(Nte0182, "this is the corresponding parameter [[%s]]");
    SWAG_ERROR(Nte0183, "this is the corresponding parameter");
    SWAG_ERROR(Nte0184, "this is the declaration of the %s [[%s]]");
    SWAG_ERROR(Nte0185, "this is the deprecated definition");
    SWAG_ERROR(Nte0186, "this is the expected signature");
    SWAG_ERROR(Nte0187, "this is the failed [[%s]] constraint");
    SWAG_ERROR(Nte0188, "this is the field causing the recursion");
    SWAG_ERROR(Nte0189, "this is the first initialization");
    SWAG_ERROR(Nte0190, "this is the first usage");
    SWAG_ERROR(Nte0191, "this is the generic parameter [[%s]] of the %s");
    SWAG_ERROR(Nte0192, "this is the literal suffix [[%s]]");
    SWAG_ERROR(Nte0193, "this is the other [[#import]]");
    SWAG_ERROR(Nte0194, "this is the other definition");
    SWAG_ERROR(Nte0195, "this is the other return statement");
    SWAG_ERROR(Nte0196, "this is the previous definition");
    SWAG_ERROR(Nte0197, "this is the prior declaration");
    SWAG_ERROR(Nte0198, "this is the reference to the immutable value");
    SWAG_ERROR(Nte0199, "this is the runtime argument corresponding to [[%s]]");
    SWAG_ERROR(Nte0200, "this is the start of the block");
    SWAG_ERROR(Nte0201, "this is the start of the body");
    SWAG_ERROR(Nte0202, "this is the tuple definition");
    SWAG_ERROR(Nte0203, "this is unexpected in global scope");
    SWAG_ERROR(Nte0204, "this list of parameters is missing their type");
    SWAG_ERROR(Nte0205, "this parameter is missing its type");
    SWAG_ERROR(Nte0206, "this previous parameter has a default value");
    SWAG_ERROR(Nte0207, "this scope is unexpected");
    SWAG_ERROR(Nte0208, "this should be a function call or an affectation");
    SWAG_ERROR(Nte0209, "this should be associated with a [[%s]]");
    SWAG_ERROR(Nte0210, "this should be followed by an affectation or by arguments");
    SWAG_ERROR(Nte0211, "this should be less than this");
    SWAG_ERROR(Nte0212, "this slice appears to be null or empty");
    SWAG_ERROR(Nte0213, "this string appears to be null or empty");
    SWAG_ERROR(Nte0214, "this suffix forces the literal to be converted to [[%s]]");
    SWAG_ERROR(Nte0215, "this tuple has [[%d]] fields");
    SWAG_ERROR(Nte0216, "this type is [[%s]]");
    SWAG_ERROR(Nte0217, "this value can only be converted to the type [[%s]] with a dynamic call to [[opAffect]]");
    SWAG_ERROR(Nte0218, "trying to match the type of the other part of the conditional expression");
    SWAG_ERROR(Nte0219, "unnamed parameters ([['?']]) cannot have an explicit type");
    SWAG_ERROR(Nte0220, "the [[%s]] does not implement the [[%s]]");
    SWAG_ERROR(Nte0221, "this is the last [[%s]]");
    SWAG_ERROR(Nte0222, "consider using [[&%s]] if you want a function pointer for a lambda or a closure");
    SWAG_ERROR(Nte0011, "this makes the conversion from [[%s]] to [[%s]] ambiguous");
    SWAG_ERROR(Nte0223, "this is the culprit");
    SWAG_ERROR(Nte0224, nullptr);
    SWAG_ERROR(Nte0225, nullptr);
}

Utf8 formErr(ErrorID idx, ...)
{
    va_list args;
    va_start(args, idx);
    auto result = form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
    result      = form(result.cstr(), args);
    va_end(args);
    return result;
}

Utf8 formNte(ErrorID idx, ...)
{
    va_list args;
    va_start(args, idx);
    auto result = g_E[idx];
    result      = form(result.cstr(), args);
    va_end(args);
    return result;
}

Utf8 toErr(ErrorID idx)
{
    return form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
}

Utf8 toNte(ErrorID idx)
{
    return g_E[idx];
}
