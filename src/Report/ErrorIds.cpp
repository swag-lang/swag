#include "pch.h"
#include "Report/ErrorIds.h"

namespace
{
#undef SWAG_ERROR
#define SWAG_ERROR(__enum) #__enum
    const char* g_ErrList[] = {
#include "ErrorList.h"

    };
}

Utf8 g_E[MaxErrors];
#undef SWAG_ERROR
#define SWAG_ERROR(__n, __msg)                 \
    do                                         \
    {                                          \
        SWAG_ASSERT(g_E[(int) (__n)].empty()); \
        g_E[(int) (__n)] = __msg;              \
    } while (0)

void initErrors()
{
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Fat0001, "[cmdline] [[%s]] needs [[true]] or [[false]], got [[%s]]");
    SWAG_ERROR(Fat0002, "[cmdline] [[%s]] needs string argument");
    SWAG_ERROR(Fat0003, "[cmdline] [[%s]] needs integer argument, got [[%s]]");
    SWAG_ERROR(Fat0004, "[cmdline] [[%s]] needs integer argument");
    SWAG_ERROR(Fat0005, "[cmdline] [[%s]] requires [[%s]]");
    SWAG_ERROR(Fat0006, "[cmdline] [[--stack-size]] out of range (%s provided, range [%s, %s])");
    SWAG_ERROR(Fat0007, "[cmdline] unknown argument [[%s]]");
    SWAG_ERROR(Fat0008, "[cmdline] [[--arch]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0009, "[cmdline] [[--os]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0010, "[fatal] cache directory [[%s]] not found");
    SWAG_ERROR(Fat0011, "[fatal] dependency module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0012, "[fatal] duplicate module name [[%s]] in workspace (path [[%s]])");
    SWAG_ERROR(Fat0013, "[fatal] workspace folder [[--workspace]] required");
    SWAG_ERROR(Fat0014, "[fatal] compiler bootstrap issues");
    SWAG_ERROR(Fat0015, "[fatal] compiler runtime issues");
    SWAG_ERROR(Fat0016, "[fatal] cache directory [[%s]] creation failed");
    SWAG_ERROR(Fat0017, "[fatal] directory [[%s]] creation failed");
    SWAG_ERROR(Fat0018, "[fatal] file [[%s]] creation failed");
    SWAG_ERROR(Fat0019, "[fatal] public directory [[%s]] creation failed");
    SWAG_ERROR(Fat0020, "[fatal] script file [[%s]] creation failed");
    SWAG_ERROR(Fat0021, "[fatal] target directory [[%s]] creation failed");
    SWAG_ERROR(Fat0022, "[fatal] directory [[%s]] deletion failed");
    SWAG_ERROR(Fat0023, "[fatal] file [[%s]] deletion failed");
    SWAG_ERROR(Fat0024, "[fatal] [[--tag:%s]] value invalid (%s)");
    SWAG_ERROR(Fat0025, "[fatal] script file extension must be [[.swgs]], got [[%s]]");
    SWAG_ERROR(Fat0026, "[fatal] [[Swag]] command [[%s]] invalid");
    SWAG_ERROR(Fat0027, "[fatal] workspace [[%s]] invalid: missing [[modules/]] or [[tests/]]");
    SWAG_ERROR(Fat0028, "[fatal] module [[%s]] already exists in [[/modules]]");
    SWAG_ERROR(Fat0029, "[fatal] module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0030, "[fatal] file [[%s]] not found");
    SWAG_ERROR(Fat0031, "[fatal] script file missing (use [[--file:<filename>.swgs]])");
    SWAG_ERROR(Fat0032, "[fatal] compile tag value [[%s]] unexpected (use [[--tag:%s]])");
    SWAG_ERROR(Fat0033, "[fatal] compile tag type [[%s]] unknown (use [[--tag:%s]])");
    SWAG_ERROR(Fat0034, "[fatal] workspace folder [[%s]] already exists");
    SWAG_ERROR(Fat0035, "[fatal] workspace folder [[%s]] not found");
    SWAG_ERROR(Fat0036, "[fatal] windows sdk folder not found");
    SWAG_ERROR(Fat0037, "[fatal] file or folder to format missing (use [[--file]])");
    SWAG_ERROR(Fat0038, "[fatal] [[%s]] is not valid swag file");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Saf0001, "[safety] invalid cast from any         $ invalid cast from [[any]] to [[%s]]                                $ note: [[#[Swag.Safety(\"dyncast\")]]] is true");
    SWAG_ERROR(Saf0002, "[safety] null cast attempt             $ null value cannot cast to [[%s]]                                   $ note: [[#[Swag.Safety(\"dyncast\")]]] is true");
    SWAG_ERROR(Saf0003, "[safety] invalid boolean value         $ invalid boolean value used                                         $ note: [[#[Swag.Safety(\"bool\")]]] is true");
    SWAG_ERROR(Saf0004, "[safety] index out of bounds           $ index access outside bounds                                        $ note: [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0005, "[safety] invalid range bounds          $ lower bound exceeds upper bound                                    $ note: [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0006, "[safety] slice bounds error            $ lower bound exceeds upper bound                                    $ note: [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0007, "[safety] slice out of bounds           $ upper bound exceeds array bounds                                   $ note: [[#[Swag.Safety(\"boundcheck\")]]] is true");
    SWAG_ERROR(Saf0008, "[safety] arithmetic overflow           $ [[@abs]] overflow (type [[%s]])                                    $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0009, "[safety] invalid argument              $ [[@acos]] invalid argument (type [[%s]])                           $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0010, "[safety] invalid argument              $ [[@asin]] invalid argument (type [[%s]])                           $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0011, "[safety] invalid argument              $ [[@log]] invalid argument (type [[%s]])                            $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0012, "[safety] invalid argument              $ [[@log10]] invalid argument (type [[%s]])                          $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0013, "[safety] invalid argument              $ [[@log2]] invalid argument (type [[%s]])                           $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0014, "[safety] invalid argument              $ [[@sqrt]] invalid argument (type [[%s]])                           $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0015, "[safety] invalid argument              $ [[@pow]] invalid argument (type [[%s]])                            $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0016, "[safety] division by zero              $ division by zero                                                   $ note: [[#[Swag.Safety(\"math\")]]] is true");
    SWAG_ERROR(Saf0017, "[safety] nan value used                $ NaN (Not a Number) value used                                      $ note: [[#[Swag.Safety(\"nan\")]]] is true");
    SWAG_ERROR(Saf0018, "[safety] null pointer dereference      $ null pointer dereferenced                                          $ note: [[#[Swag.Safety(\"null\")]]] is true");
    SWAG_ERROR(Saf0019, "[safety] null error thrown             $ non-existent error thrown                                          $ note: [[#[Swag.Safety(\"null\")]]] is true");
    SWAG_ERROR(Saf0020, "[safety] negative to unsigned cast     $ negative value [[%I64d]] cannot cast to unsigned [[%s]]            $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0021, "[safety] negative to unsigned cast     $ negative type [[%s]] cannot cast to unsigned [[%s]]                $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0022, "[safety] negative to unsigned cast     $ negative value [[%g]] cannot cast to unsigned [[%s]]               $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0023, "[safety] value exceeds type limits     $ value [[%s]] ([[%I64u]]) exceeds [[%s]] limits                     $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0024, "[safety] value exceeds type limits     $ value [[%I64u]] exceeds [[%s]] limits                              $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0025, "[safety] value exceeds type limits     $ value [[%I64d]] exceeds [[%s]] limits                              $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0026, "[safety] value exceeds type limits     $ value [[%g]] exceeds [[%s]] limits                                 $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0027, "[safety] arithmetic overflow           $ operation [['%s']] overflow (type [[%s]])                          $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0028, "[safety] truncation not allowed        $ truncation from [[%s]] to [[%s]] not allowed                       $ note: [[#[Swag.Safety(\"overflow\")]]] is true");
    SWAG_ERROR(Saf0029, "[safety] unhandled switch value        $ unexpected switch value                                            $ note: [[#[Swag.Safety(\"switch\")]]] is true");
    SWAG_ERROR(Saf0030, nullptr);
    SWAG_ERROR(Saf0031, nullptr);
    SWAG_ERROR(Saf0032, nullptr);
    SWAG_ERROR(Saf0033, nullptr);
    SWAG_ERROR(Saf0034, nullptr);
    SWAG_ERROR(Saf0035, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(San0002, "[sanity] division by zero       $ potential division by zero");
    SWAG_ERROR(San0004, "[sanity] frame escape           $ potential return of stack memory");
    SWAG_ERROR(San0006, "[sanity] null dereference       $ potential null pointer dereference");
    SWAG_ERROR(San0007, "[sanity] stack overwrite        $ potential stack overwrite at offset [[%lld]] (stack size [[%lld]])");
    SWAG_ERROR(San0008, "[sanity] uninitialized usage    $ potential use of uninitialized memory");
    SWAG_ERROR(San0010, "[sanity] overflow               $ potential overflow in [['%s']] (type [[%s]])");
    SWAG_ERROR(San0001, "[sanity] null argument          $ potential null argument to [[%s]]");
    SWAG_ERROR(San0003, "[sanity] null return value      $ potential null return");

    SWAG_ERROR(San0005, nullptr);
    SWAG_ERROR(San0009, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Wrn0001, "%s");
    SWAG_ERROR(Wrn0002, "deprecated usage                $ %s [[%s]] uses a deprecated feature ([[#[Swag.Deprecated]]])      $ ");
    SWAG_ERROR(Wrn0003, "immutable local variable        $ variable [[%s]] is never modified after declaration               $ hint: declare it with [[let]] instead of [[var]] to mark it immutable");
    SWAG_ERROR(Wrn0004, "redundant local variable        $ variable [[%s]] initialized to a default value and never used     $ note: consider removing this variable if it serves no purpose");
    SWAG_ERROR(Wrn0005, "unreachable code                $ statement cannot be executed                                      $ ");
    SWAG_ERROR(Wrn0006, "unused symbol                   $ %s [[%s]] is declared but never used                              $ ");
    SWAG_ERROR(Wrn0007, "redundant [[break]]             $ [[break]] has no effect in this context                           $ note: [[break]] is only needed in empty [[case]] blocks");
    SWAG_ERROR(Wrn0008, "simplifiable [[if]] statement   $ [[if]] after [[else]] can be condensed                            $ hint: replace [[else: if]] with [[elif]]");
    SWAG_ERROR(Wrn0009, "simplifiable [[#if]] directive  $ [[#if]] after [[#else]] can be condensed                          $ hint: replace [[#else: #if]] with [[#elif]]");
    SWAG_ERROR(Wrn0010, "simplifiable [[if]] condition   $ [[if]] can be simplified with [[where]]                           $ ");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Err0001, "%s");
    SWAG_ERROR(Err0002, "%s");
    SWAG_ERROR(Err0003, "%s");

    SWAG_ERROR(Err0004, "symbol already defined                            $ %s [[%s]] already defined %s                                                                           $ ");
    SWAG_ERROR(Err0005, "conflicting [[#global export]] directive          $ multiple [[#global export]] directives found in the same file                                          $ ");
    SWAG_ERROR(Err0006, "multiple [[#main]] functions                      $ more than one [[#main]] function defined in this module                                                $ ");
    SWAG_ERROR(Err0007, "duplicate [[default]] clause                      $ multiple [[default]] clauses found in the same [[switch]] statement                                    $ ");
    SWAG_ERROR(Err0008, "invalid access specifier order                    $ [[%s]] cannot appear after [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0009, "enum redefinition                                 $ enum [[%s]] already defined                                                                            $ ");
    SWAG_ERROR(Err0010, "duplicate enum value                              $ enum value [[%s]] duplicates another with the same underlying value                                    $ ");
    SWAG_ERROR(Err0011, "duplicate field name                              $ field [[%s]] conflicts with an existing field                                                          $ ");
    SWAG_ERROR(Err0012, "duplicate generic symbol                          $ generic symbol [[%s]] already defined                                                                  $ ");
    SWAG_ERROR(Err0013, "duplicate [[switch]] value                        $ integer value [[%d]] already used in another [[case]]                                                  $ ");
    SWAG_ERROR(Err0014, "duplicate [[switch]] value                        $ floating value [[%f]] already used in another [[case]]                                                 $ ");
    SWAG_ERROR(Err0015, "duplicate [[switch]] value                        $ symbol value [[%s]] already used in another [[case]]                                                   $ ");
    SWAG_ERROR(Err0016, "duplicate [[switch]] value                        $ string value [[\"%s\"]] already used in another [[case]]                                               $ ");
    SWAG_ERROR(Err0017, "duplicate [[switch]] value                        $ [[null]] case already defined                                                                          $ ");
    SWAG_ERROR(Err0018, "symbol redefinition                               $ %s [[%s]] conflicts with an existing symbol                                                            $ ");
    SWAG_ERROR(Err0019, "ambiguous [[using]] reference                     $ [[using]] applies to multiple variables of type [[%s]]                                                 $ ");
    SWAG_ERROR(Err0020, "ambiguous cast conversion                         $ cast from [[%s]] to [[%s]] resolves to multiple possibilities                                          $ ");
    SWAG_ERROR(Err0021, "ambiguous enum value                              $ enum value [[%s]] resolves to multiple matches                                                         $ ");
    SWAG_ERROR(Err0022, "ambiguous interface cast                          $ cast from [[%s]] to interface [[%s]] resolves ambiguously                                              $ ");
    SWAG_ERROR(Err0023, "ambiguous symbol reference                        $ symbol [[%s]] resolves to multiple definitions                                                         $ ");
    SWAG_ERROR(Err0024, "ambiguous symbol reference                        $ %s [[%s]] resolves to multiple definitions                                                             $ ");
    SWAG_ERROR(Err0025, "ambiguous generic reference                       $ generic %s [[%s]] resolves to multiple definitions                                                     $ ");
    SWAG_ERROR(Err0026, "ambiguous lambda declaration                      $ unclear or conflicting parameter declaration in lambda                                                 $ ");
    SWAG_ERROR(Err0027, "bytecode stack overflow                           $ stack size exceeds [[%s]] limit set by [[--stack-size]]                                                $ ");
    SWAG_ERROR(Err0028, "capture size overflow                             $ capture size [[%u]] bytes exceeds limit [[%u]] bytes                                                   $ ");
    SWAG_ERROR(Err0029, "failed [[#assert]] evaluation                     $ [[#assert]] expression evaluated to false                                                              $ ");
    SWAG_ERROR(Err0030, "failed compile-time conversion                    $ cannot convert function return slice (type [[%s]]) into a compile-time value                           $ ");
    SWAG_ERROR(Err0031, "failed compile-time conversion                    $ cannot convert function return value (type [[%s]]) into constant array: [[opCount]] returned [[0]]     $ ");
    SWAG_ERROR(Err0032, "failed compile-time conversion                    $ cannot convert function return value (type [[%s]]) into constant array: [[opSlice]] returned empty slice $ ");
    SWAG_ERROR(Err0033, "non-constant expression                           $ type [[%s]] is not a compile-time constant expression                                                  $ ");
    SWAG_ERROR(Err0034, "invalid include path                              $ [[#include]] filename is not a compile-time constant                                                   $ ");
    SWAG_ERROR(Err0035, "invalid constant argument                         $ [[%s]] argument is not a compile-time constant                                                         $ ");
    SWAG_ERROR(Err0036, "invalid compile-time message                      $ [[%s]] message is not a compile-time constant                                                          $ ");
    SWAG_ERROR(Err0037, "invalid constant case                             $ [[case]] expression is not a compile-time constant                                                     $ note: a [[switch]] statement marked with the [[#[Swag.Complete]]] attribute requires constant case values");
    SWAG_ERROR(Err0038, "invalid array dimension                           $ array dimension is not a compile-time constant                                                         $ ");
    SWAG_ERROR(Err0039, "invalid attribute parameter                       $ attribute parameter is not a compile-time constant                                                     $ ");
    SWAG_ERROR(Err0040, "invalid constant expression                       $ expression is not a compile-time constant                                                              $ ");
    SWAG_ERROR(Err0041, "invalid constant parameter                        $ parameter [[%s]] of type [[%s]] is not a compile-time constant                                         $ ");
    SWAG_ERROR(Err0042, "invalid constant initialization                   $ initialization is not a compile-time constant                                                          $ ");
    SWAG_ERROR(Err0043, "invalid constant initialization                   $ initialization is not a compile-time constant                                                          $ hint: add the [[#[Swag.ConstExpr]]] attribute to [[opAffect]] to allow this");
    SWAG_ERROR(Err0044, "invalid constant operation                        $ operation on [[%s]] is not a compile-time constant                                                     $ hint: add the [[#[Swag.ConstExpr]]] attribute to the struct to allow this");
    SWAG_ERROR(Err0045, "conflicting attributes                            $ [[#[Swag.Compiler]]] and [[#[Swag.Tls]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0046, "conflicting attributes                            $ [[#[Swag.Inline]]] and [[#[Swag.NoInline]]] cannot be combined                                         $ ");
    SWAG_ERROR(Err0047, "conflicting attributes                            $ [[#[Swag.Macro]]] and [[#[Swag.Inline]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0048, "conflicting attributes                            $ [[#[Swag.Macro]]] and [[#[Swag.Mixin]]] cannot be combined                                             $ ");
    SWAG_ERROR(Err0049, "conflicting attributes                            $ [[#[Swag.Macro]]] and [[#[Swag.NoInline]]] cannot be combined                                          $ ");
    SWAG_ERROR(Err0050, "conflicting attributes                            $ [[#[Swag.Mixin]]] and [[#[Swag.Inline]]] cannot be combined                                            $ ");
    SWAG_ERROR(Err0051, "conflicting attributes                            $ [[#[Swag.Mixin]]] and [[#[Swag.NoInline]]] cannot be combined                                          $ ");
    SWAG_ERROR(Err0052, "conflicting modifiers                             $ [[%s]] and [[%s]] cannot be combined                                                                   $ ");
    SWAG_ERROR(Err0053, "division by zero                                  $ divider evaluated to 0                                                                                 $ ");
    SWAG_ERROR(Err0054, "division overflow                                 $ result exceeds range of [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0055, "duplicate attribute                               $ [[%s]] applied multiple times; [[Swag.AttrMulti]] not specified                                        $ ");
    SWAG_ERROR(Err0056, "duplicate initialization                          $ struct initialized with both type syntax and assignment                                                $ ");
    SWAG_ERROR(Err0057, "duplicate instruction modifier                    $ multiple [[%s]] modifiers detected                                                                     $ ");
    SWAG_ERROR(Err0058, "duplicate named argument                          $ multiple [[%s]] arguments detected                                                                     $ ");
    SWAG_ERROR(Err0059, "duplicate operator                                $ operator [['%s']] defined multiple times                                                               $ ");
    SWAG_ERROR(Err0061, "empty [[case]]                                    $ [[case]] statement has no content                                                                      $ ");
    SWAG_ERROR(Err0062, "empty [[default]]                                 $ [[default]] statement has no content                                                                   $ ");
    SWAG_ERROR(Err0063, "empty [[switch]]                                  $ [[switch]] statement has no body                                                                       $ hint: add one or more [[case]] statements, or remove the [[switch]]");
    SWAG_ERROR(Err0064, "empty array literal                               $ array literal contains no elements                                                                     $ ");
    SWAG_ERROR(Err0065, "empty attribute                                   $ attribute has no specified value                                                                       $ hint: specify the attribute name or remove it");
    SWAG_ERROR(Err0066, "empty binary literal                              $ binary literal contains no digits [[0]] or [[1]]                                                       $ ");
    SWAG_ERROR(Err0067, "empty expression                                  $ expression [[()]] contains nothing                                                                     $ ");
    SWAG_ERROR(Err0068, "empty float exponent                              $ float exponent value is missing                                                                        $ ");
    SWAG_ERROR(Err0069, "empty hexadecimal literal                         $ hexadecimal literal contains no digits ([[0-9]], [[A-F]], [[a-f]])                                     $ ");
    SWAG_ERROR(Err0070, "empty statement                                   $ [[;]] alone forms an invalid empty statement                                                           $ hint: use [[{}]] instead to create an empty block");
    SWAG_ERROR(Err0071, "error escapes [[defer]]                           $ error escapes from [[defer]] or [[defer<err>]] block                                                   $ ");
    SWAG_ERROR(Err0072, "stack frame mismatch                              $ %s [[%s]] resides in a different stack frame                                                           $ ");
    SWAG_ERROR(Err0073, "invalid [[%s]]                                    $ invalid [[%s]] %s, found $$TKN$$                                                                       $ ");
    SWAG_ERROR(Err0074, "missing [[;]] or body                             $ interface member [[%s]] lacks [[;]] or default implementation                                          $ ");
    SWAG_ERROR(Err0075, "missing function body                             $ missing [[{]] to start function body, found $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0076, "missing function body                             $ missing [[{]] to start %s body, found [[;]]                                                            $ ");
    SWAG_ERROR(Err0077, "missing replacement block                         $ missing [[{]] to start [[#inject]] block, found $$TKN$$                                                $ ");
    SWAG_ERROR(Err0078, "[[%s]] constraint failed                          $ %s [[%s]] violates [[%s]] constraint                                                                   $ ");
    SWAG_ERROR(Err0080, "invalid generic instantiation                     $ partial type alias ([[%s]]) cannot instantiate generic struct                                          $ ");
    SWAG_ERROR(Err0081, "missing generic arguments                         $ generic function [[%s]] lacks required generic arguments                                               $ ");
    SWAG_ERROR(Err0082, "missing generic arguments                         $ generic struct [[%s]] lacks required generic arguments                                                 $ ");
    SWAG_ERROR(Err0083, "[[@postcopy]] disallowed                          $ [[@postcopy]] on [[%s]] disallowed by [[#[Swag.NoCopy]]]                                               $ ");
    SWAG_ERROR(Err0084, "[[opDrop]] disallowed                             $ [[opDrop]] for [[%s]] disallowed by [[#[Swag.ConstExpr]]]                                              $ ");
    SWAG_ERROR(Err0085, "[[opPostCopy]] disallowed                         $ [[opPostCopy]] for [[%s]] disallowed by [[#[Swag.NoCopy]]]                                             $ ");
    SWAG_ERROR(Err0086, "[[compileString]] unavailable                     $ [[compileString]] not accessible in this context                                                       $ note: meta-programming is not permitted at this compiler stage");
    SWAG_ERROR(Err0087, "direct [[opDrop]] call                            $ direct call to [[opDrop]] is invalid                                                                   $ hint: use [[@drop]] instead");
    SWAG_ERROR(Err0088, "direct [[opPostCopy]] call                        $ direct call to [[opPostCopy]] is invalid                                                               $ hint: use [[@postcopy]] instead");
    SWAG_ERROR(Err0089, "direct [[opPostMove]] call                        $ direct call to [[opPostMove]] is invalid                                                               $ hint: use [[@postmove]] instead");
    SWAG_ERROR(Err0090, "copy disallowed                                   $ [[%s]] is marked [[#[Swag.NoCopy]]] and cannot be copied                                               $ ");
    SWAG_ERROR(Err0091, "immutable assignment                              $ [[%s]] is immutable and cannot be modified                                                             $ ");
    SWAG_ERROR(Err0092, "immutable assignment                              $ global [[%s]] is zero-initialized and immutable at compile-time                                        $ ");
    SWAG_ERROR(Err0093, "immutable assignment                              $ left expression is immutable and cannot receive a value                                                $ ");
    SWAG_ERROR(Err0094, "unterminated [[case]] list                        $ missing [[,]] or [[:]] before $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0095, "incomplete [[case]] list                          $ missing expression after [[,]] before $$TKN$$                                                          $ hint: add a case expression or remove the trailing [[,]]");
    SWAG_ERROR(Err0096, "unterminated alias list                           $ missing [[,]] or [['|']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0097, "incomplete alias list                             $ missing alias name after [[,]] before $$TKN$$                                                          $ hint: add an alias name or remove the trailing [[,]]");
    SWAG_ERROR(Err0098, "unterminated arguments list                       $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0099, "incomplete arguments list                         $ missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0100, "unterminated array dimensions                     $ missing [[,]] or [[']']] before $$TKN$$                                                                $ hint: add a dimension or close the list with [[']']]");
    SWAG_ERROR(Err0101, "incomplete array dimensions                       $ missing dimension after [[,]] before $$TKN$$                                                           $ hint: add a dimension or remove the trailing [[,]]");
    SWAG_ERROR(Err0102, "unterminated attribute arguments                  $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0103, "incomplete attribute arguments                    $ missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0104, "unterminated attribute list                       $ missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0105, "incomplete attribute list                         $ missing attribute after [[,]] before $$TKN$$                                                           $ hint: add an attribute or remove the trailing [[,]]");
    SWAG_ERROR(Err0106, "unterminated generic arguments                    $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0107, "incomplete generic arguments                      $ missing argument after [[,]] before $$TKN$$                                                            $ hint: add a generic argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0108, "unterminated index list                           $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0109, "incomplete index list                             $ missing index after [[,]] before $$TKN$$                                                               $ hint: add an index or remove the trailing [[,]]");
    SWAG_ERROR(Err0110, "unterminated initialization list                  $ missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0111, "unterminated initialization list                  $ missing [[,]] or [['}']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0112, "unterminated parameters list                      $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0113, "incomplete parameters list                        $ missing parameter after [[,]] before $$TKN$$                                                           $ hint: add a parameter or remove the trailing [[,]]");
    SWAG_ERROR(Err0114, "unterminated tuple unpacking                      $ missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0115, "incomplete tuple unpacking                        $ missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0116, "incomplete variables list                         $ missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0117, "infinite [[while]] loop                           $ [[while]] condition always evaluates to [[true]]                                                       $ hint: use [[for { ... }]] for an intentional infinite loop");
    SWAG_ERROR(Err0118, "invalid [[#alias]] name                           $ [[%s]] is not a valid [[#alias]] variable name                                                         $ hint: use [[#alias0]], [[#alias1]], and so on");
    SWAG_ERROR(Err0119, "invalid [[#alignof]] usage                        $ [[#alignof]] applied to generic expression                                                             $ ");
    SWAG_ERROR(Err0120, "invalid [[#inject]] keyword                       $ invalid $$TKN$$ inside [[#inject]] replacement block                                                   $ note: [[#inject]] only accepts [[break]] or [[continue]] as valid keywords");
    SWAG_ERROR(Err0121, "invalid [[#uniq]] name                            $ [[%s]] is not a valid [[#uniq]] variable name                                                          $ hint: use [[#uniq0]], [[#uniq1]], and so on");
    SWAG_ERROR(Err0122, "invalid [[#sizeof]] usage                         $ [[#sizeof]] applied to generic expression                                                              $ ");
    SWAG_ERROR(Err0123, "invalid [[#up]] count                             $ [[#up]] count cannot be zero                                                                           $ ");
    SWAG_ERROR(Err0124, "invalid [[#up]] count type                        $ [[#up]] count must be an untyped integer, got [[%s]]                                                   $ ");
    SWAG_ERROR(Err0125, "invalid [[#up]] scope depth                       $ cannot move [[%d]] scopes upward                                                                       $ ");
    SWAG_ERROR(Err0126, "invalid [[@cvaarg]] type                          $ variadic argument type [[%s]] not supported                                                            $ note: argument is promoted to [[%s]] at the call site");
    SWAG_ERROR(Err0127, "invalid [[code]] append                           $ next block statement cannot serve as [[code]] argument                                                 $ note: %s [[%s]] expects the following statement as a [[code]] argument, which is not allowed in [[%s]]");
    SWAG_ERROR(Err0128, "invalid [[discard]] usage                         $ [[discard]] applied to function returning nothing                                                      $ ");
    SWAG_ERROR(Err0129, "invalid [[expect]] expression                     $ missing function parameter name                                                                        $ ");
    SWAG_ERROR(Err0130, "invalid [[expect]] expression                     $ expression incompatible with [[expect]]                                                                $ note: only [[param != null]] expressions are supported");
    SWAG_ERROR(Err0131, "invalid [[foreach]] mode                          $ variadic type cannot be visited through pointer                                                        $ ");
    SWAG_ERROR(Err0132, "invalid [[foreach]] mode                          $ enum type cannot be visited through pointer                                                            $ ");
    SWAG_ERROR(Err0133, "invalid [[foreach]] target                        $ pointer type [[%s]] cannot be visited                                                                  $ ");
    SWAG_ERROR(Err0134, "invalid [[foreach]] name                          $ unrecognized [[visit]] specialization name: $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0135, "invalid [[foreach]] type                          $ tuple type cannot be visited                                                                           $ ");
    SWAG_ERROR(Err0136, "invalid [[foreach]] type                          $ type [[%s]] cannot be visited                                                                          $ ");
    SWAG_ERROR(Err0137, "invalid [[impl]] declaration                      $ missing struct name after [[for]], found %s [[%s]]                                                     $ ");
    SWAG_ERROR(Err0138, "invalid [[impl]] declaration                      $ [[impl]] applied to [[%s]], which is [[%s]], not struct or enum                                        $ ");
    SWAG_ERROR(Err0139, "invalid [[impl]] declaration                      $ [[impl]] applied to [[%s]], which is [[%s]], not an interface                                          $ ");
    SWAG_ERROR(Err0140, "invalid [[opVisit]] name                          $ [[%s]] is not a valid [[opVisit]] variant                                                              $ hint: must use a valid identifier name");
    SWAG_ERROR(Err0141, "invalid [[with]] reference                        $ [[.]] reference missing identifier, found $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0142, "compile-time/runtime mismatch                     $ compile-time %s [[%s]] accessed from runtime %s                                                        $ ");
    SWAG_ERROR(Err0143, "compile-time/runtime mismatch                     $ compile-time %s accessed from runtime %s                                                               $ ");
    SWAG_ERROR(Err0144, "invalid address                                   $ [[%s]] returns no value; no address available                                                          $ ");
    SWAG_ERROR(Err0145, "invalid address                                   $ %s has no address                                                                                      $ note: only variables have addresses");
    SWAG_ERROR(Err0146, "invalid address                                   $ string literal character has no address                                                                $ note: string literals have no storage");
    SWAG_ERROR(Err0147, "invalid address                                   $ constant type [[%s]] has no address                                                                    $ note: this constant type has no storage");
    SWAG_ERROR(Err0148, "invalid address                                   $ parameter type [[%s]] has no address                                                                   $ note: this parameter type has no storage");
    SWAG_ERROR(Err0149, "invalid address                                   $ function returning [[%s]] has no address                                                               $ ");
    SWAG_ERROR(Err0150, "invalid address                                   $ macro has no address                                                                                   $ ");
    SWAG_ERROR(Err0151, "invalid address                                   $ mixin has no address                                                                                   $ ");
    SWAG_ERROR(Err0152, "invalid address                                   $ [[let]] variable has no address                                                                        $ hint: use [[var]] for a mutable variable");
    SWAG_ERROR(Err0153, "invalid address                                   $ inline function has no address                                                                         $ ");
    SWAG_ERROR(Err0154, "invalid address                                   $ right-hand expression has no address                                                                   $ ");
    SWAG_ERROR(Err0155, "invalid align value                               $ [[#[Swag.Align]]] value not power of two; got [[%d]]                                                   $ ");
    SWAG_ERROR(Err0156, "invalid argument                                  $ first argument to [[@mkany]] cannot be [[null]]                                                        $ ");
    SWAG_ERROR(Err0157, "invalid argument                                  $ [[%s]] requires [[variable]] as first argument                                                         $ note: a variable is required when the second [[@init]] argument is omitted");
    SWAG_ERROR(Err0158, "invalid argument                                  $ [[#gettag]] last argument must be constant, got [[%s]]                                                 $ ");
    SWAG_ERROR(Err0159, "invalid argument                                  $ [[@countof]] received non-positive value [[%I64d]]                                                     $ ");
    SWAG_ERROR(Err0160, "invalid argument                                  $ [[@countof]] received non-positive value [[%d]]                                                        $ ");
    SWAG_ERROR(Err0161, "invalid array dimension                           $ array dimension cannot be zero                                                                         $ ");
    SWAG_ERROR(Err0162, "invalid assignment                                $ call produces no value to assign                                                                       $ ");
    SWAG_ERROR(Err0163, "invalid attribute                                 $ [[%s]] is %s, not a valid attribute                                                                    $ ");
    SWAG_ERROR(Err0164, "invalid bit-cast                                  $ invalid bit-cast source type [[%s]]                                                                    $ note: only integer, rune, float, or pointer types are allowed");
    SWAG_ERROR(Err0165, "invalid bit-cast                                  $ cannot bit-cast from [[%s]] to larger [[%s]]                                                           $ ");
    SWAG_ERROR(Err0166, "invalid bit-cast                                  $ invalid bit-cast target type [[%s]]                                                                    $ note: only integer, rune, or float types are allowed");
    SWAG_ERROR(Err0168, "invalid capture                                   $ [[%s]] is %s; capture not allowed                                                                      $ note: capturing %s is not permitted");
    SWAG_ERROR(Err0169, "invalid capture                                   $ [[%s]] is not plain old data                                                                           $ note: structs with [[opDrop]], [[opPostCopy]], or [[opPostMove]] cannot be captured");
    SWAG_ERROR(Err0170, "invalid character literal                         $ [['%s']] appears as string, not single character                                                       $ ");
    SWAG_ERROR(Err0171, "invalid character literal                         $ character literal incompatible with type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0172, "invalid compound name                             $ multiple identifiers found, expected single %s                                                         $ hint: remove the [['.']] separator");
    SWAG_ERROR(Err0173, "invalid const move reference                      $ [[const]] conflicts with move reference [[&&]]                                                         $ hint: remove [[const]] or use [[&]] instead");
    SWAG_ERROR(Err0174, "missing constant name                             $ missing constant name after [[const]], found $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0175, "invalid dereference                               $ [[%s]] lacks [[opIndex]] in [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0176, "invalid dereference                               $ [[%s]] of type [[%s]] cannot be dereferenced as struct or pointer                                      $ ");
    SWAG_ERROR(Err0177, "invalid dereference                               $ constant address cannot be dereferenced at compile-time                                                $ ");
    SWAG_ERROR(Err0178, "invalid dereference                               $ type [[%s]] cannot be dereferenced                                                                     $ ");
    SWAG_ERROR(Err0179, "invalid enum type                                 $ enum array type [[%s]] missing dimensions                                                              $ ");
    SWAG_ERROR(Err0180, "invalid escape format                             $ [['\\x']] requires two hexadecimal digits                                                              $ ");
    SWAG_ERROR(Err0181, "invalid escape format                             $ [['\\u']] requires four hexadecimal digits                                                             $ ");
    SWAG_ERROR(Err0182, "invalid escape format                             $ [['\\U']] requires eight hexadecimal digits                                                            $ ");
    SWAG_ERROR(Err0183, "invalid expression                                $ [[%s]] is statement-only, not usable as expression                                                     $ ");
    SWAG_ERROR(Err0184, "invalid expression                                $ missing expression after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0185, "invalid expression                                $ expression replaced by type                                                                            $ ");
    SWAG_ERROR(Err0186, "undefined function                                $ [[%s]] declared but not defined                                                                        $ ");
    SWAG_ERROR(Err0187, "invalid function call                             $ [[%s]] invoked with [[{}]] instead of [[()]]                                                           $ ");
    SWAG_ERROR(Err0188, "invalid function call                             $ [[%s]] of type [[%s]] has no call arguments                                                            $ ");
    SWAG_ERROR(Err0189, "invalid function call                             $ [[%s]] is [[%s]], not callable                                                                         $ ");
    SWAG_ERROR(Err0190, "invalid function declaration                      $ [[%s]] found in interface, requires [[func]] or [[mtd]]                                                $ hint: declare interface functions with [[func]] or [[mtd]]");
    SWAG_ERROR(Err0191, "missing function name                             $ missing function name, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0192, "invalid [[impl]] generation                       $ [[impl]] block generation only allowed in [[#message]] with [[Swag.CompilerMsgMask.AttributeGen]]      $ ");
    SWAG_ERROR(Err0193, "generic value mismatch                            $ generic [[%s]] deduced as [[%s]], incompatible with [[%s]]                                             $ ");
    SWAG_ERROR(Err0194, "invalid generic argument                          $ %s ([[%s]]) not valid as generic argument                                                              $ hint: generic arguments must be literals or types");
    SWAG_ERROR(Err0195, "invalid generic parameter                         $ [[%s]] expects literal but received type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0196, "missing generic parameter name                    $ missing generic name identifier, found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0197, "invalid generic type                              $ type starting with [[:]] not permitted for generic                                                     $ ");
    SWAG_ERROR(Err0198, "missing identifier                                $ missing identifier %s, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0199, "missing identifier                                $ missing identifier after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0200, "missing identifier                                $ missing identifier, found $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0201, "invalid initialization                            $ constant array type [[%s]] cannot be initialized with single value                                     $ note: only variables can be initialized this way");
    SWAG_ERROR(Err0202, "missing interface implementation                  $ [[%s]] to [[%s]] cast failed: implementation not found                                                 $ ");
    SWAG_ERROR(Err0203, "invalid interface function signature              $ first parameter [[%s]] invalid; expected [[me]]                                                        $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0204, "invalid interface function signature              $ interface function [[%s]] missing [[me]] as first parameter                                            $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0205, "invalid lambda call                               $ [[%s]] is %s, not callable variable                                                                    $ ");
    SWAG_ERROR(Err0206, "invalid literal suffix                            $ [[%s]] is [[%s]], invalid literal suffix                                                               $ note: suffix must correspond to a valid type");
    SWAG_ERROR(Err0207, "invalid literal suffix                            $ [[%s]] invalid for float literals                                                                      $ note: only [[f32]] and [[f64]] suffixes are allowed");
    SWAG_ERROR(Err0208, "invalid literal suffix                            $ [[%s]] invalid literal suffix                                                                          $ ");
    SWAG_ERROR(Err0209, "invalid literal conversion                        $ [[%s]] cannot initialize [[%s]]; missing [[opAffectLiteral]]                                           $ ");
    SWAG_ERROR(Err0210, "invalid logical operator                          $ mismatched logical operator; [[%s]] expected but found [[%s]]                                          $ ");
    SWAG_ERROR(Err0211, "empty module name                                 $ [[#[Swag.Foreign]]] module name is empty                                                               $ ");
    SWAG_ERROR(Err0212, "invalid module name                               $ [[.]] not permitted in [[#[Swag.Foreign]]] module name                                                 $ note: module names cannot contain file extensions");
    SWAG_ERROR(Err0213, "invalid [[move]] operation                        $ [[move]] applied to immutable expression of type [[%s]]                                                $ ");
    SWAG_ERROR(Err0214, "invalid namespace body                            $ namespace body missing; found [[;]]                                                                    $ ");
    SWAG_ERROR(Err0215, "missing namespace name                            $ missing namespace name, found $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0216, "invalid negation                                  $ type [[%s]] cannot be negated                                                                          $ ");
    SWAG_ERROR(Err0217, "invalid negation                                  $ unsigned type [[%s]] cannot be negated                                                                 $ ");
    SWAG_ERROR(Err0218, "null pointer dereference                          $ dereferencing null pointer                                                                             $ ");
    SWAG_ERROR(Err0219, "invalid nullable type                             $ type [[%s]] cannot be declared nullable                                                                $ ");
    SWAG_ERROR(Err0220, "invalid opaque struct                             $ [[#[Swag.Opaque]]] incompatible with [[#global export]]                                                $ ");
    SWAG_ERROR(Err0221, "invalid opaque struct                             $ [[#[Swag.Opaque]]] requires [[public]] access                                                          $ ");
    SWAG_ERROR(Err0222, "invalid operation                                 $ operation [['%s']] on [[null]] value                                                                   $ ");
    SWAG_ERROR(Err0223, "invalid packing value                             $ [[#[Swag.Pack]]] value invalid; got [[%d]] (not 0 or power of two)                                     $ ");
    SWAG_ERROR(Err0224, "invalid pointer arithmetic                        $ index operation on [[%s]] invalid; pointer arithmetic disallowed on [[%s]]                             $ ");
    SWAG_ERROR(Err0225, "invalid pointer arithmetic                        $ pointer arithmetic disallowed                                                                          $ ");
    SWAG_ERROR(Err0226, "invalid pointer arithmetic                        $ pointer arithmetic on [[void*]] disallowed                                                             $ note: [[void]] has no size");
    SWAG_ERROR(Err0227, "invalid pointer arithmetic                        $ pointer arithmetic requires integer, got [[%s]]                                                        $ ");
    SWAG_ERROR(Err0228, "invalid pointer slicing                           $ pointer slicing not supported on this type                                                             $ ");
    SWAG_ERROR(Err0229, "invalid range bounds                              $ lower bound [[%lld]] exceeds upper bound [[%lld]]                                                      $ hint: use [[#reverse]] for descending ranges");
    SWAG_ERROR(Err0230, "invalid range type                                $ type [[%s]] cannot define a range                                                                      $ note: only integer, rune, or float types can form ranges");
    SWAG_ERROR(Err0231, "invalid reference                                 $ [[ref]] applied to non-pointer or non-reference type [[%s]]                                            $ ");
    SWAG_ERROR(Err0232, "invalid return type                               $ [[void]] used as return type where a value is required                                                 $ hint: remove the return type if the function returns nothing");
    SWAG_ERROR(Err0233, "invalid return type                               $ [[opSlice]] returns unsupported type [[%s]]                                                            $ note: only [[string]] or [[slice]] return types are supported");
    SWAG_ERROR(Err0234, "invalid slice operation                           $ [[%s]] type lacks [[opSlice]] implementation in [[%s]]                                                 $ ");
    SWAG_ERROR(Err0235, "invalid slice operation                           $ multi-dimensional array cannot be sliced                                                               $ ");
    SWAG_ERROR(Err0236, "invalid slice operation                           $ type [[%s]] does not support slicing                                                                   $ ");
    SWAG_ERROR(Err0237, "invalid struct initialization                     $ [[()]] used instead of [[{}]] for struct initialization                                                $ hint: use [[{}]] for struct initialization; [[()]] is for function calls");
    SWAG_ERROR(Err0238, "missing struct name                               $ no struct name found, got $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0239, "missing struct operation                          $ [[%s]] to [[%s]] by index fails: no [[opIndexAffect]] defined                                          $ ");
    SWAG_ERROR(Err0240, "missing struct member                             $ [[%s]] not found in [[%s]]                                                                             $ ");
    SWAG_ERROR(Err0241, "missing struct operation                          $ operator [['%s']] undefined for [[%s]] in [[%s]]                                                       $ ");
    SWAG_ERROR(Err0242, "invalid suffix type                               $ suffix [[%s]] cannot apply to this literal                                                             $ note: suffixes are only valid for struct conversions");
    SWAG_ERROR(Err0243, "invalid suffix type                               $ no identifier or type found after suffix start, got $$TKN$$                                            $ ");
    SWAG_ERROR(Err0244, "unexpected symbol                                 $ unexpected symbol [['%s']] detected                                                                    $ ");
    SWAG_ERROR(Err0245, "invalid [[throw]] expression                      $ [[throw]] used with unsupported type [[%s]]                                                            $ note: only structs or [[@err]] expressions can be thrown");
    SWAG_ERROR(Err0246, "invalid [[throw]] expression                      $ [[throw]] used without struct or [[@err]] expression                                                   $ ");
    SWAG_ERROR(Err0247, "invalid top-level instruction                     $ token $$TKN$$ not valid as top-level instruction                                                       $ ");
    SWAG_ERROR(Err0248, "invalid tuple comparison                          $ tuple compared with incompatible type [[%s]]                                                           $ note: tuples can only be compared with other tuples");
    SWAG_ERROR(Err0249, "invalid tuple dereference                         $ tuple cannot be dereferenced as pointer                                                                $ ");
    SWAG_ERROR(Err0250, "empty tuple unpacking                             $ unpacking failed: tuple contains no elements                                                           $ ");
    SWAG_ERROR(Err0251, "invalid tuple unpacking                           $ type [[%s]] does not support unpacking                                                                 $ note: only struct or tuple types can be unpacked");
    SWAG_ERROR(Err0252, "invalid type                                      $ generic type cannot be evaluated                                                                       $ ");
    SWAG_ERROR(Err0253, "invalid type assignment                           $ [[%s]] second parameter type [[%s]] incompatible                                                       $ hint: implement or use [[opAssign]] for value copying");
    SWAG_ERROR(Err0254, "invalid type qualifier                            $ [[const]] version of [[%s]] is not supported                                                           $ ");
    SWAG_ERROR(Err0255, "access violation                                  $ [[internal]] field [[%s]] is not accessible                                                            $ ");
    SWAG_ERROR(Err0256, "invalid attribute parameter                       $ type [[%s]] not allowed as attribute parameter                                                         $ ");
    SWAG_ERROR(Err0257, "invalid [[@cvaarg]] argument                      $ type [[%s]] not valid for [[@cvaarg]]                                                                  $ ");
    SWAG_ERROR(Err0258, "invalid generic parameter                         $ [[%s]] parameter requires [[bool]], got [[%s]]                                                         $ ");
    SWAG_ERROR(Err0259, "invalid generic parameter                         $ [[%s]] parameter requires [[string]], got [[%s]]                                                       $ ");
    SWAG_ERROR(Err0260, "invalid type cast                                 $ right side [[%s]] cannot cast to [[struct]]                                                            $ ");
    SWAG_ERROR(Err0261, "invalid type cast                                 $ left side [[%s]] cannot cast to [[interface]]                                                          $ ");
    SWAG_ERROR(Err0262, "invalid parameter type                            $ [[%s]] first parameter type mismatch: expected [[%s]], got [[%s]]                                      $ ");
    SWAG_ERROR(Err0263, "invalid type declaration                          $ [[%s]] is %s, not a valid type                                                                         $ ");
    SWAG_ERROR(Err0264, "invalid type declaration                          $ token $$TKN$$ does not form a valid type declaration                                                   $ ");
    SWAG_ERROR(Err0265, "invalid array type declaration                    $ token $$TKN$$ invalid after array dimensions                                                           $ ");
    SWAG_ERROR(Err0266, "invalid unicode value                             $ value [[0x%x]] is not a valid Unicode code point                                                       $ ");
    SWAG_ERROR(Err0267, "invalid variable name                             $ [[#alias]] allowed only in [[#[Swag.Macro]]] or [[#[Swag.Mixin]]]                                      $ ");
    SWAG_ERROR(Err0268, "invalid variable name                             $ [[#uniq]] allowed only in [[#[Swag.Mixin]]]                                                            $ ");
    SWAG_ERROR(Err0269, "invalid variable name                             $ [[me]] cannot be used as a variable name                                                               $ ");
    SWAG_ERROR(Err0270, "missing variable name                             $ no variable name found, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0271, "missing variable name                             $ missing variable name after [[,]], got $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0272, "missing match variable                            $ missing match variable name, got $$TKN$$                                                               $ ");
    SWAG_ERROR(Err0273, "missing variable name                             $ no variable name found after [[%s]], got $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0274, "invalid variable type                             $ [[void]] used as variable type                                                                         $ ");
    SWAG_ERROR(Err0275, "invalid variable declaration                      $ [[if]] cannot declare multiple variables                                                               $ note: [[if]] allows only a single variable declaration");
    SWAG_ERROR(Err0276, "invalid variable declaration                      $ [[using]] cannot declare multiple variables                                                            $ note: [[using]] allows only a single variable declaration");
    SWAG_ERROR(Err0277, "invalid variable declaration                      $ [[with]] cannot declare multiple variables                                                             $ note: [[with]] allows only a single variable declaration");
    SWAG_ERROR(Err0278, "invalid dereference                               $ [[void*]] cannot be dereferenced                                                                       $ note: [[void]] has no size");
    SWAG_ERROR(Err0279, "isolated [[#elif]] directive                      $ [[#elif]] without preceding [[#if]]                                                                    $ ");
    SWAG_ERROR(Err0280, "isolated [[#else]] directive                      $ [[#else]] without preceding [[#if]] or [[#elif]]                                                       $ ");
    SWAG_ERROR(Err0281, "unmatched parenthesis                             $ [[)]] without matching [[(]]                                                                           $ ");
    SWAG_ERROR(Err0282, "unmatched bracket                                 $ [[]]] without matching [[[]]                                                                           $ ");
    SWAG_ERROR(Err0283, "isolated [[elif]] clause                          $ [[elif]] without preceding [[if]]                                                                      $ ");
    SWAG_ERROR(Err0284, "isolated [[else]] clause                          $ [[else]] without preceding [[if]] or [[elif]]                                                          $ ");
    SWAG_ERROR(Err0285, "unmatched brace                                   $ [[}]] without matching [[{]]                                                                           $ ");
    SWAG_ERROR(Err0286, "unmatched comment terminator                      $ [['*/']] after %s without matching [['/*']]                                                            $ ");
    SWAG_ERROR(Err0287, "literal overflow                                  $ character [[0x%x]] exceeds [[u16]] range                                                               $ ");
    SWAG_ERROR(Err0288, "literal overflow                                  $ character [[0x%x]] exceeds [[u8]] range                                                                $ ");
    SWAG_ERROR(Err0289, "literal overflow                                  $ [[%I64u]] does not fit in [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0290, "literal overflow                                  $ binary literal exceeds 64-bit range                                                                    $ ");
    SWAG_ERROR(Err0291, "literal overflow                                  $ hexadecimal literal exceeds 64-bit range                                                               $ ");
    SWAG_ERROR(Err0292, "literal overflow                                  $ numeric literal exceeds 64-bit range                                                                   $ ");
    SWAG_ERROR(Err0293, "literal overflow                                  $ negation of [[%I64d]] exceeds [[s64]]: [[%I64u]] too large                                             $ ");
    SWAG_ERROR(Err0294, "literal overflow                                  $ negation of [[%d]] exceeds [[%s]] range: [[%u]] too large                                              $ ");
    SWAG_ERROR(Err0295, "[[impl]] kind mismatch                            $ [[impl]] syntax targets [[%s]], but [[%s]] is [[%s]]                                                   $ ");
    SWAG_ERROR(Err0296, "access level conflict                             $ %s [[%s]] cannot be public: %s [[%s]] has [[%s]] access                                                $ ");
    SWAG_ERROR(Err0297, "access level conflict                             $ [[%s]] cannot be internal: struct declared [[public]]                                                  $ ");
    SWAG_ERROR(Err0298, "access level conflict                             $ [[%s]] cannot be public: struct declared [[internal]]                                                  $ ");
    SWAG_ERROR(Err0299, "interface signature mismatch                      $ signature mismatch in [[%s.%s]]                                                                        $ ");
    SWAG_ERROR(Err0300, "scope mismatch                                    $ [[impl]] declared outside scope of [[%s]]                                                              $ ");
    SWAG_ERROR(Err0301, "misplaced [[#dependencies]] directive             $ [[#dependencies]] only allowed in [[module.swg]] or [[.swgs]]                                          $ ");
    SWAG_ERROR(Err0302, "misplaced [[#global using]] directive             $ [[#global using]] only allowed in [[module.swg]] or [[.swgs]]                                          $ ");
    SWAG_ERROR(Err0303, "misplaced [[#global]] directive                   $ [[#global]] must appear at top of file                                                                 $ ");
    SWAG_ERROR(Err0304, "misplaced [[#import]] directive                   $ [[#import]] only allowed in [[module.swg]] or [[.swgs]]                                                $ ");
    SWAG_ERROR(Err0305, "misplaced [[@index]] usage                        $ [[@index]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                      $ ");
    SWAG_ERROR(Err0306, "misplaced [[#inject]] directive                   $ [[#inject]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                     $ ");
    SWAG_ERROR(Err0307, "misplaced [[#load]] directive                     $ [[#load]] only allowed in [[module.swg]] or [[.swgs]]                                                  $ ");
    SWAG_ERROR(Err0308, "misplaced [[#macro]] directive                    $ [[#macro]] only valid in [[#[Swag.Macro]]] functions                                                   $ ");
    SWAG_ERROR(Err0311, "misplaced [[#up]] directive                       $ [[#up]] only valid in [[#[Swag.Macro]]] functions                                                      $ ");
    SWAG_ERROR(Err0312, "conflicting keywords                              $ [[%s]] conflicts with [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0313, "duplicate keyword                                 $ [[%s]] cannot be combined with another [[%s]]                                                          $ ");
    SWAG_ERROR(Err0314, "invalid keyword placement                         $ [[%s]] not allowed in struct special function [[%s]]                                                   $ ");
    SWAG_ERROR(Err0315, "missing [[throw]] qualifier                       $ [[%s]] requires [[throw]] on [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0316, "invalid block syntax                              $ [[':]] before [[{]] not allowed                                                                        $ hint: use [[':']] or [[{]], not both");
    SWAG_ERROR(Err0317, "misplaced [[@cvastart]] usage                     $ [[@cvastart]] only valid in functions with [[cvarargs]] parameter                                      $ ");
    SWAG_ERROR(Err0318, "invalid [[@kindof]] usage                         $ [[@kindof]] applied to invalid type [[%s]]                                                             $ note: only allowed on [[any]] or interface types");
    SWAG_ERROR(Err0319, "invalid type declaration                          $ missing type after [[code]], got $$TKN$$                                                               $ note: [[code]] requires type or [[void]]");
    SWAG_ERROR(Err0321, "invalid [[alias]] usage                           $ [[alias]] not allowed on struct members                                                                $ ");
    SWAG_ERROR(Err0322, "misplaced [[break]] statement                     $ [[break]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                       $ ");
    SWAG_ERROR(Err0323, "missing [[const]] target                          $ missing [[me]] after [[const]] in parameter, got $$TKN$$                                               $ ");
    SWAG_ERROR(Err0324, "misplaced [[const]] usage                         $ [[const]] allowed only after [[mtd]], not [[func]]                                                     $ ");
    SWAG_ERROR(Err0325, "misplaced [[continue]] statement                  $ [[continue]] only valid in loop blocks ([[for]], [[foreach]], etc.)                                    $ ");
    SWAG_ERROR(Err0326, "invalid [[default]] usage                         $ [[default]] not valid in [[#[Swag.Complete]]] [[switch]]                                               $ ");
    SWAG_ERROR(Err0327, "invalid [[fallthrough]] usage                     $ [[fallthrough]] not valid in last [[case]]                                                             $ hint: remove it");
    SWAG_ERROR(Err0328, "misplaced [[fallthrough]] usage                   $ [[fallthrough]] only valid inside [[case]] blocks                                                      $ ");
    SWAG_ERROR(Err0329, "misplaced [[fallthrough]] usage                   $ [[fallthrough]] only valid in [[switch]] statement                                                     $ ");
    SWAG_ERROR(Err0330, "invalid [[for]] usage                             $ [[for]] not allowed in [[enum]] implementation                                                         $ ");
    SWAG_ERROR(Err0331, "misplaced [[impl]] usage                          $ [[impl]] on function only valid inside [[impl for]] block                                              $ ");
    SWAG_ERROR(Err0332, "invalid [[as]] usage                              $ match variable used with multiple [[case]] values                                                      $ hint: each [[case]] must have exactly one value");
    SWAG_ERROR(Err0333, "invalid [[as]] usage                              $ match variable used without [[switch]] expression                                                      $ ");
    SWAG_ERROR(Err0334, "invalid [[moveref]] usage                         $ [[moveref]] applied to compile-time value                                                              $ note: only allowed on pointers or references");
    SWAG_ERROR(Err0335, "invalid [[moveref]] usage                         $ [[moveref]] applied to immutable expression                                                            $ ");
    SWAG_ERROR(Err0336, "invalid [[moveref]] usage                         $ [[moveref]] applied to unsupported type [[%s]]                                                         $ ");
    SWAG_ERROR(Err0337, "misplaced [[moveref]] usage                       $ [[moveref]] must precede function arguments                                                            $ ");
    SWAG_ERROR(Err0338, "misplaced [[mtd]] usage                           $ [[mtd]] only valid inside struct [[impl]] blocks                                                       $ hint: use [[func]] instead");
    SWAG_ERROR(Err0339, "invalid [[mtd]] declaration                       $ [[mtd]] cannot declare lambda type                                                                     $ hint: use [[func]] instead");
    SWAG_ERROR(Err0340, "misplaced [[mtd]] usage                           $ [[mtd]] only valid inside struct [[impl]] blocks                                                       $ hint: use [[func]] instead");
    SWAG_ERROR(Err0341, "redundant [[return]] statement                    $ [[return]] after [[=>]] is implicit                                                                    $ hint: remove it");
    SWAG_ERROR(Err0342, "invalid [[retval]] usage                          $ [[retval]] used in function without return value                                                       $ ");
    SWAG_ERROR(Err0343, "misplaced [[retval]] usage                        $ [[retval]] only valid inside function body                                                             $ ");
    SWAG_ERROR(Err0344, "invalid [[retval]] usage                          $ [[retval]] used for return type instead of local variable type                                         $ ");
    SWAG_ERROR(Err0345, "misplaced [[me]] usage                            $ [[me]] only valid inside enum or struct [[impl]] blocks                                                $ ");
    SWAG_ERROR(Err0346, "invalid [[throw]] qualifier                       $ [[throw]] not valid on attributes                                                                      $ ");
    SWAG_ERROR(Err0347, "invalid [[using]] usage                           $ [[using]] applied to unsupported type [[%s]]                                                           $ note: only valid on a pointer to a struct");
    SWAG_ERROR(Err0348, "invalid [[using]] scope                           $ [[using]] not valid at [[%s]] scope                                                                    $ ");
    SWAG_ERROR(Err0349, "invalid [[using]] usage                           $ [[using]] applied to invalid type [[%s]]                                                               $ ");
    SWAG_ERROR(Err0350, "invalid [[using]] usage                           $ [[using]] applied to unsupported type [[%s]]                                                           $ note: only valid on a namespace, struct, or enum");
    SWAG_ERROR(Err0351, "invalid [[using]] usage                           $ [[using]] not valid on interface functions                                                             $ ");
    SWAG_ERROR(Err0352, "invalid [[var]] usage                             $ [[var]] not allowed in struct declarations                                                             $ hint: declare as [[fieldName: Type]] instead");
    SWAG_ERROR(Err0354, "invalid [[verify]] usage                          $ [[verify]] not valid on [[%s]]                                                                         $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0355, "invalid [[verify]] usage                          $ [[verify]] only valid on functions, not structs                                                        $ hint: use [[where]] instead");
    SWAG_ERROR(Err0356, "invalid [[where]] usage                           $ [[where]] used without [[switch]] expression                                                           $ ");
    SWAG_ERROR(Err0357, "invalid [[where]] usage                           $ [[where]] not valid on [[%s]]                                                                          $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0358, "invalid access specifier                          $ global variables cannot declare [[public]]                                                             $ ");
    SWAG_ERROR(Err0359, "misplaced access specifier                        $ [[%s]] only valid at global scope                                                                      $ ");
    SWAG_ERROR(Err0360, "invalid access specifier order                    $ [[%s]] cannot precede [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0361, "invalid alias name                                $ alias name not allowed on %s                                                                           $ ");
    SWAG_ERROR(Err0362, "invalid assignment                                $ unnamed parameters cannot receive assignments                                                          $ ");
    SWAG_ERROR(Err0363, "misplaced attribute                               $ attribute placed after [[%s]]                                                                          $ hint: move the attribute before [[%s]]");
    SWAG_ERROR(Err0364, "invalid attribute                                 $ [[#[Swag.CalleeReturn]]] not valid on %s                                                               $ ");
    SWAG_ERROR(Err0365, "invalid attribute                                 $ [[#[Swag.CalleeReturn]]] only valid on macro or mixin [[%s]]                                           $ note: requires [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] attribute");
    SWAG_ERROR(Err0366, "invalid attribute                                 $ [[#[Swag.Complete]]] used without [[switch]] expression                                                $ ");
    SWAG_ERROR(Err0367, "invalid attribute                                 $ [[#[Swag.Complete]]] only valid on [[opAffect]] or [[opAffectLiteral]], not [[%s]]                     $ ");
    SWAG_ERROR(Err0368, "invalid attribute                                 $ [[#[Swag.Discardable]]] only valid on lambda variables, not [[%s]]                                     $ ");
    SWAG_ERROR(Err0369, "invalid attribute                                 $ [[#[Swag.Implicit]]] not valid on generic %s                                                           $ ");
    SWAG_ERROR(Err0370, "invalid attribute                                 $ [[#[Swag.Implicit]]] only valid on [[opAffect]], [[opAffectLiteral]], or [[opCast]], not [[%s]]        $ ");
    SWAG_ERROR(Err0371, "invalid attribute                                 $ [[#[Swag.Inline]]] not valid on %s                                                                     $ ");
    SWAG_ERROR(Err0372, "invalid attribute                                 $ [[#[Swag.Macro]]] not valid on %s                                                                      $ ");
    SWAG_ERROR(Err0373, "invalid attribute                                 $ [[#[Swag.Mixin]]] not valid on %s                                                                      $ ");
    SWAG_ERROR(Err0374, "invalid attribute                                 $ [[#[Swag.NotGeneric]]] not valid on %s                                                                 $ ");
    SWAG_ERROR(Err0375, "invalid attribute                                 $ [[#[Swag.Offset]]] not valid on interface members                                                      $ ");
    SWAG_ERROR(Err0376, "invalid attribute usage                           $ [[%s]] not allowed in this context                                                                     $ ");
    SWAG_ERROR(Err0377, "invalid attribute usage                           $ [[%s]] not allowed inside [[#global]] block                                                            $ note: requires [[Swag.AttributeUsage.File]]");
    SWAG_ERROR(Err0378, "invalid attribute usage                           $ [[%s]] not valid on %s                                                                                 $ ");
    SWAG_ERROR(Err0379, "invalid attribute usage                           $ attribute not allowed in this location                                                                 $ ");
    SWAG_ERROR(Err0380, "invalid attribute usage                           $ [[AttributeUsage.Gen]] requires [[AttributeUsage.Struct]] or [[AttributeUsage.Enum]]                   $ ");
    SWAG_ERROR(Err0381, "invalid block start                               $ [[{]] not valid after [[try]], [[assume]], or [[catch]]                                                $ ");
    SWAG_ERROR(Err0382, "invalid [[opVisit]] name                          $ [[%s]] name violates naming rule for [[opVisit]] (must start uppercase)                                $ ");
    SWAG_ERROR(Err0383, "invalid closure                                   $ closure used outside function scope                                                                    $ note: closures allowed only within functions");
    SWAG_ERROR(Err0384, "misplaced compiler instruction                    $ [[#callerfunction]] used outside parameter list                                                        $ ");
    SWAG_ERROR(Err0385, "misplaced compiler instruction                    $ [[#callerlocation]] used outside parameter list                                                        $ ");
    SWAG_ERROR(Err0386, "invalid default parameters                        $ lambda or closure default parameters redefined                                                         $ ");
    SWAG_ERROR(Err0387, "invalid default value                             $ [[me]] cannot have a default value                                                                     $ ");
    SWAG_ERROR(Err0388, "invalid default value                             $ lambda parameters cannot define default values                                                         $ ");
    SWAG_ERROR(Err0389, "invalid digit separator                           $ [['_']] appears at end of number                                                                       $ ");
    SWAG_ERROR(Err0390, "invalid digit separator                           $ [['_']] starts exponent part                                                                           $ ");
    SWAG_ERROR(Err0391, "invalid digit separator                           $ [['_']] starts fractional part                                                                         $ ");
    SWAG_ERROR(Err0392, "invalid digit separator                           $ consecutive [['_']] detected                                                                           $ ");
    SWAG_ERROR(Err0393, "invalid error catching                            $ [[%s]] is %s, cannot be caught                                                                         $ ");
    SWAG_ERROR(Err0394, "invalid error catching                            $ [[%s]] nested inside [[%s]]                                                                            $ hint: use only one [[try]], [[catch]], or [[assume]] block");
    SWAG_ERROR(Err0395, "invalid error catching                            $ [[%s]] used outside function, macro, or mixin                                                          $ ");
    SWAG_ERROR(Err0396, "invalid error catching                            $ [[%s]] requires [[throw]] on [[%s]]                                                                    $ note: the function is missing the [[throw]] attribute");
    SWAG_ERROR(Err0397, "invalid function declaration                      $ function declared directly in struct                                                                   $ hint: place it inside an [[impl]] block instead");
    SWAG_ERROR(Err0398, "invalid generic argument                          $ type required but value provided                                                                       $ ");
    SWAG_ERROR(Err0399, "invalid generic argument                          $ value required but type provided                                                                       $ ");
    SWAG_ERROR(Err0400, "unexpected generic arguments                      $ %s [[%s]] defines no generic arguments                                                                 $ ");
    SWAG_ERROR(Err0401, "invalid match variable                            $ match variable only valid in [[interface]] or [[any]] [[switch]], not [[%s]]                           $ ");
    SWAG_ERROR(Err0402, "invalid move reference                            $ move reference [[&&]] only valid in function parameters                                                $ ");
    SWAG_ERROR(Err0403, "invalid range                                     $ range used in [[switch]] without expression                                                            $ ");
    SWAG_ERROR(Err0405, "misplaced special function                        $ [[%s]] outside corresponding [[impl]] block                                                            $ ");
    SWAG_ERROR(Err0406, "misplaced special function                        $ [[%s]] outside corresponding [[impl]] block                                                            $ note: [[impl for]] is only allowed for interface implementations");
    SWAG_ERROR(Err0407, "misplaced top-level [[using]]                     $ top-level [[using]] appears after declarations                                                         $ ");
    SWAG_ERROR(Err0408, "invalid tuple unpacking                           $ tuple unpacking not permitted in %s                                                                    $ ");
    SWAG_ERROR(Err0409, "invalid type                                      $ type [[%s]] only valid in function parameters                                                          $ ");
    SWAG_ERROR(Err0410, "invalid type                                      $ [[#code]] only valid in [[#[Swag.Macro]]] or [[#[Swag.Mixin]]]                                         $ ");
    SWAG_ERROR(Err0411, "misplaced variadic argument                       $ variadic argument not last                                                                             $ ");
    SWAG_ERROR(Err0412, "misplaced variadic parameter                      $ variadic parameter not last                                                                            $ ");
    SWAG_ERROR(Err0413, "invalid variadic parameter                        $ variadic parameters not allowed in inline functions                                                    $ ");
    SWAG_ERROR(Err0414, "missing [[#alias]] number                         $ [[#alias]] missing trailing number ([[#alias0]], [[#alias1]], etc.)                                    $ ");
    SWAG_ERROR(Err0415, "missing [[#foreignlib]] argument                  $ library name missing after [[#foreignlib]], got $$TKN$$                                                $ hint: add [[#foreignlib \"path/to/library\"]]");
    SWAG_ERROR(Err0416, "missing [[#global testerror]] argument            $ error string missing after [[#global testerror]], got $$TKN$$                                          $ ");
    SWAG_ERROR(Err0417, "missing [[#global testwarning]] argument          $ warning string missing after [[#global testwarning]], got $$TKN$$                                      $ ");
    SWAG_ERROR(Err0418, "missing [[#if]] expression                        $ boolean expression missing after [[#if]], got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0419, "missing [[#message]] parameter                    $ [[Swag.CompilerMsgMask]] parameter missing for [[#message]]                                            $ ");
    SWAG_ERROR(Err0420, "missing [[#uniq]] number                          $ [[#uniq]] missing trailing number ([[#uniq0]], [[#uniq1]], etc.)                                       $ ");
    SWAG_ERROR(Err0423, "missing [[%s]]                                    $ closing [[%s]] %s missing                                                                              $ ");
    SWAG_ERROR(Err0424, "missing block start                               $ [[:]] or [[{]] missing                                                                                 $ ");
    SWAG_ERROR(Err0425, "missing arguments start                           $ [[(]] missing to start [[%s]] arguments, got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0426, "missing parameters start                          $ [[(]] missing to start parameters, got $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0427, "missing [[in]]                                    $ [[in]] missing after [[for]] variable [[%s]]                                                           $ hint: write [[for variable in count]]");
    SWAG_ERROR(Err0429, "missing [[case]] expression                       $ [[case]] expression missing, got [[%s]]                                                                $ ");
    SWAG_ERROR(Err0430, "missing capture variable                          $ capture variable missing between [[,]] and [['|']]                                                     $ hint: add a variable or remove the trailing comma");
    SWAG_ERROR(Err0431, "missing [[foreach]] expression                    $ element expression missing before [[%s]]                                                               $ ");
    SWAG_ERROR(Err0432, "missing [[foreach]] variable                      $ [[foreach]] variable missing between [[,]] and [[:]]                                                   $ note: the first value is [[value]], the second is [[index]]");
    SWAG_ERROR(Err0433, "missing [[if]] expression                         $ boolean expression missing after [[if]], got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0434, "missing [[impl]] marker                           $ [[impl]] missing before [[%s]] to mark implementation of [[%s]]                                        $ ");
    SWAG_ERROR(Err0435, "missing [[for]] count                             $ [[for]] count missing before [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0436, "missing [[switch]] value                          $ [[%s.%s]] missing in [[switch]]                                                                        $ ");
    SWAG_ERROR(Err0437, "missing [[while]] expression                      $ boolean expression missing before [[%s]]                                                               $ ");
    SWAG_ERROR(Err0438, "missing affectation                               $ assignment or arguments missing after %s, got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0439, "missing arguments                                 $ %s [[%s]] missing arguments between [[()]]                                                             $ ");
    SWAG_ERROR(Err0440, "missing attribute                                 $ [[opVisit]] missing [[#[Swag.Macro]]] attribute                                                        $ ");
    SWAG_ERROR(Err0441, "missing attribute name                            $ attribute name missing before [[(]]                                                                    $ ");
    SWAG_ERROR(Err0442, "unhandled error                                   $ [[%s]] lacks error handling                                                                            $ hint: add [[try]], [[catch]], or [[assume]] to handle it");
    SWAG_ERROR(Err0443, "missing constant type                             $ assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0444, "missing default value                             $ %s missing default value: previous parameter defines one                                               $ ");
    SWAG_ERROR(Err0445, "missing dereference index                         $ array [[%s]] of type [[%s]] missing index                                                              $ hint: add an index in brackets");
    SWAG_ERROR(Err0446, "missing end of line                               $ line break or [[;]] missing after %s, got $$TKN$$                                                      $ hint: add a line break or separate with [[;]]");
    SWAG_ERROR(Err0447, "missing enum name                                 $ enum name missing before [['{']]                                                                       $ ");
    SWAG_ERROR(Err0448, "missing enum name                                 $ enum name missing before [[':']]                                                                       $ ");
    SWAG_ERROR(Err0449, "missing function parameters                       $ parameters [[()]] missing before [[{]]                                                                 $ hint: add [[()]] after [[%s]] if there are no parameters");
    SWAG_ERROR(Err0450, "missing generic parameters                        $ [[%s]] missing generic parameters                                                                      $ ");
    SWAG_ERROR(Err0451, "missing generic parameters                        $ struct [[%s]] missing generic parameters: [[%s]] is generic                                            $ ");
    SWAG_ERROR(Err0452, "missing generic parameters                        $ struct [[%s]] unresolved: generic field [[%s]]                                                         $ ");
    SWAG_ERROR(Err0453, "missing generic parameters                        $ no generic parameters between [[()]]                                                                   $ hint: remove [[()]] if not generic");
    SWAG_ERROR(Err0454, "missing initialization                            $ [[let]] variable not initialized                                                                       $ ");
    SWAG_ERROR(Err0455, "missing initialization                            $ constant not initialized                                                                               $ ");
    SWAG_ERROR(Err0456, "missing initialization                            $ reference not initialized                                                                              $ ");
    SWAG_ERROR(Err0457, "missing initialization                            $ enum value [[%s]] of type [[%s]] not initialized                                                       $ ");
    SWAG_ERROR(Err0458, "missing initialization                            $ [[%s]] not initialized: [[%s]] has no zero value                                                       $ ");
    SWAG_ERROR(Err0459, "missing interface functions                       $ interface [[%s]] not fully implemented for [[%s]]                                                      $ ");
    SWAG_ERROR(Err0460, "missing intrinsic arguments                       $ [[%s]] arguments missing between [[()]]                                                                $ ");
    SWAG_ERROR(Err0461, "missing lambda parameter type                     $ parameter type missing after [[:]] or assignment                                                       $ note: cannot mix inferred and explicit types");
    SWAG_ERROR(Err0462, "missing named argument                            $ %s missing name: previous arguments are named                                                          $ ");
    SWAG_ERROR(Err0463, "missing namespace name                            $ namespace name missing before [[;]]                                                                    $ ");
    SWAG_ERROR(Err0464, "missing namespace name                            $ namespace name missing before [['{']]                                                                  $ ");
    SWAG_ERROR(Err0465, "missing parameter name                            $ parameter name and [[:]] missing before [[%s]]                                                         $ ");
    SWAG_ERROR(Err0466, "missing parameter type                            $ assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0467, "missing parameters                                $ special function [[%s]] missing parameters                                                             $ ");
    SWAG_ERROR(Err0469, "missing return type                               $ special function [[%s]] missing return type                                                            $ ");
    SWAG_ERROR(Err0470, "missing return type                               $ special function [[%s]] missing return type [[%s]]                                                     $ ");
    SWAG_ERROR(Err0471, "missing return type                               $ [[#[Swag.Discardable]]] [[%s]] missing return value                                                    $ ");
    SWAG_ERROR(Err0472, "missing return value                              $ %s missing return statement with [[%s]]                                                                $ ");
    SWAG_ERROR(Err0473, "missing return value                              $ return type already inferred as [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0474, "missing return value                              $ return value of type [[%s]] missing                                                                    $ ");
    SWAG_ERROR(Err0475, "missing return value                              $ control path missing return value in %s                                                                $ ");
    SWAG_ERROR(Err0476, "missing slice upper bound                         $ upper bound missing after [[until]]                                                                    $ hint: use [[to]] to slice until the end");
    SWAG_ERROR(Err0477, "missing struct name                               $ struct name missing before [['{']]                                                                     $ ");
    SWAG_ERROR(Err0478, "missing type                                      $ type missing after [[#type]], got $$TKN$$                                                              $ ");
    SWAG_ERROR(Err0479, "missing variable type                             $ assignment or [[:]] missing for type, got $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0480, "UFCS misuse                                       $ %s [[%s]] not used as first argument of [[%s]]                                                         $ ");
    SWAG_ERROR(Err0482, "non-contiguous [[#alias]]                         $ non-contiguous [[#alias]] in [[%s]]                                                                    $ note: [[#alias%u]] is missing in the sequence");
    SWAG_ERROR(Err0483, "non-transferable type                             $ [[cvarargs]] parameter cannot be passed to another function                                            $ ");
    SWAG_ERROR(Err0484, "static/instance mismatch                          $ [[%s]] is static member of [[%s]], used as instance field                                              $ ");
    SWAG_ERROR(Err0485, "not a value                                       $ [[%s]] is %s, not a value                                                                              $ ");
    SWAG_ERROR(Err0486, "too few attribute arguments                       $ attribute [[%s]] has insufficient arguments                                                            $ ");
    SWAG_ERROR(Err0487, "too few call arguments                            $ %s [[%s]] has insufficient call arguments                                                              $ ");
    SWAG_ERROR(Err0488, "too few generic arguments                         $ %s [[%s]] has insufficient generic arguments                                                           $ ");
    SWAG_ERROR(Err0489, "too few generic parameters                        $ [[%s]] has insufficient generic parameters                                                             $ ");
    SWAG_ERROR(Err0490, "too few initializers                              $ array requires [[%d]] values, got [[%d]]                                                               $ ");
    SWAG_ERROR(Err0491, "too few initializers                              $ tuple requires [[%d]] values, got [[%d]]                                                               $ ");
    SWAG_ERROR(Err0492, "too few parameters                                $ [[%s]] requires [[%d]] parameters, got [[%d]]                                                          $ ");
    SWAG_ERROR(Err0493, "too few parameters                                $ [[%s]] requires at least [[%d]] parameters, got [[%d]]                                                 $ ");
    SWAG_ERROR(Err0494, "[[#alias]] number out of range                    $ [[#alias]] number [[%u]] exceeds valid range                                                           $ note: valid range is [0, 31]");
    SWAG_ERROR(Err0495, "[[#uniq]] number out of range                     $ [[#uniq]] number [[%u]] exceeds valid range                                                            $ note: valid range is [0, 31]");
    SWAG_ERROR(Err0496, "[[#up]] count out of range                        $ [[#up]] count [[%u]] exceeds valid range                                                               $ note: valid range is [1, 255]");
    SWAG_ERROR(Err0497, "too many array dimensions                         $ array dimensions exceed [[254]]                                                                        $ ");
    SWAG_ERROR(Err0498, "too many callback parameters                      $ callback limited to [[%d]] parameters, got [[%d]]                                                      $ ");
    SWAG_ERROR(Err0499, "enum value out of range                           $ enum value [[%s]] exceeds range of [[%s]]                                                              $ ");
    SWAG_ERROR(Err0500, "index out of range                                $ index [[%I64u]] exceeds maximum index of [[%I64u]]                                                     $ ");
    SWAG_ERROR(Err0501, "inline level exceeded                             $ [[%s]] expansion exceeds [[--limit-inline:%d]]                                                         $ ");
    SWAG_ERROR(Err0502, "slice bound out of range                          $ slice bound [[%I64u]] exceeds maximum value of [[%I64u]]                                               $ ");
    SWAG_ERROR(Err0503, "slice bounds unordered                            $ lower bound [[%I64u]] exceeds upper bound [[%I64u]]                                                    $ ");
    SWAG_ERROR(Err0504, "slice bound out of range                          $ [[until]] value cannot be zero                                                                         $ ");
    SWAG_ERROR(Err0505, "too many variadic arguments                       $ variadic arguments exceed [[%d]], got [[%d]]                                                           $ ");
    SWAG_ERROR(Err0506, "overload mismatch                                 $ no matching overload found                                                                             $ ");
    SWAG_ERROR(Err0507, "recursive evaluation                              $ struct [[%s]] directly or indirectly references itself                                                 $ ");
    SWAG_ERROR(Err0508, "redundant access specifier                        $ duplicate visibility specifier [[%s]] conflicts with [[#global export]]                                $ hint: remove [[public]] since [[#global export]] already makes all declarations public");
    SWAG_ERROR(Err0509, "redundant nullable                                $ parameter already nullable due to [[null]] default                                                     $ hint: remove [[#null]] attribute");
    SWAG_ERROR(Err0510, "reserved field name                               $ field name [[%s]] is reserved                                                                          $ note: names beginning with [[item]] are reserved");
    SWAG_ERROR(Err0511, "reserved function name                            $ function name [[%s]] is reserved                                                                       $ ");
    SWAG_ERROR(Err0512, "reserved identifier                               $ identifier [[_]] is reserved by compiler                                                               $ note: single [[_]] is reserved for internal use");
    SWAG_ERROR(Err0513, "reserved identifier                               $ identifier [[%s]] uses reserved [[__]] prefix                                                          $ note: [[__]] prefix is reserved for compiler use");
    SWAG_ERROR(Err0514, "reserved namespace name                           $ namespace [[%s]] is reserved                                                                           $ ");
    SWAG_ERROR(Err0515, "cyclic dependency                                 $ %s [[%s]] forms a semantic dependency cycle                                                            $ ");
    SWAG_ERROR(Err0516, "unused expression                                 $ expression result discarded                                                                            $ hint: remove the unused expression");
    SWAG_ERROR(Err0517, "argument overflow                                 $ too many arguments: expected [[%d]], found [[%d]]                                                      $ ");
    SWAG_ERROR(Err0518, "generic argument overflow                         $ too many generic arguments for %s [[%s]]: expected [[%d]], found [[%d]]                                $ ");
    SWAG_ERROR(Err0519, "generic parameter overflow                        $ [[%s]] defines one generic parameter but received [[%d]]                                               $ ");
    SWAG_ERROR(Err0520, "invalid generic parameter count                   $ [[%s]] has an invalid number of generic parameters                                                     $ ");
    SWAG_ERROR(Err0521, "initializer overflow                              $ excessive initializers: expected [[%d]] for [[%s]], found [[%d]]                                       $ hint: remove extra initializer values");
    SWAG_ERROR(Err0522, "initializer overflow                              $ array initialized with [[%d]] values but only [[%d]] allowed                                           $ ");
    SWAG_ERROR(Err0523, "initializer overflow                              $ tuple initialized with [[%d]] values but only [[%d]] allowed                                           $ ");
    SWAG_ERROR(Err0524, "initializer count mismatch                        $ type [[%s]] initialized with incorrect number of values                                                $ ");
    SWAG_ERROR(Err0525, "parameter overflow                                $ [[%s]] declared [[%d]] parameters but received [[%d]]                                                  $ ");
    SWAG_ERROR(Err0526, "tuple type mismatch                               $ tuple source type incompatible with target tuple                                                       $ ");
    SWAG_ERROR(Err0527, "type mismatch                                     $ closure type cannot be cast to lambda type                                                             $ ");
    SWAG_ERROR(Err0528, "type mismatch                                     $ type value ([[typeinfo]]) cannot cast to compile-time type ([[%s]])                                    $ ");
    SWAG_ERROR(Err0529, "invalid interface cast                            $ interface cannot cast to struct                                                                        $ note: interface can only be cast to a struct pointer");
    SWAG_ERROR(Err0530, "type cast failure                                 $ [[%s]] cannot be cast to [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0531, "invalid initialization                            $ [[%s]] cannot be initialized from [[%s]]                                                               $ ");
    SWAG_ERROR(Err0532, "incompatible range types                          $ range mixes signed and unsigned bounds                                                                 $ note: lower and upper bounds must have the same sign");
    SWAG_ERROR(Err0533, "return type mismatch                              $ [[%s]] declared return type [[%s]] but returned [[%s]]                                                 $ ");
    SWAG_ERROR(Err0534, "invalid slice bound                               $ slice bound must be integer, got [[%s]]                                                                $ ");
    SWAG_ERROR(Err0535, "assignment type mismatch                          $ [[%s]] assignment expects [[%s]], found [[%s]]                                                         $ ");
    SWAG_ERROR(Err0536, "type mismatch                                     $ expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0537, "UFCS type mismatch                                $ UFCS received [[%s]] instead of [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0538, "invalid [[#message]] type                         $ [[#message]] received [[%s]] instead of [[Swag.CompilerMsgMask]]                                       $ ");
    SWAG_ERROR(Err0539, "invalid [[@mkany]] pointer type                   $ pointer type [[%s]] incompatible with second argument [[%s]]                                           $ note: first argument must be a pointer to [[%s]] or match second argument type [[%s]]");
    SWAG_ERROR(Err0540, "invalid [[orelse]] argument                       $ [[struct]] not allowed as [[orelse]] argument                                                          $ ");
    SWAG_ERROR(Err0541, "invalid [[orelse]] argument type                  $ type [[%s]] not allowed as [[orelse]] argument                                                         $ ");
    SWAG_ERROR(Err0542, "invalid [[switch]] type                           $ type [[%s]] cannot be used in [[switch]]                                                               $ ");
    SWAG_ERROR(Err0543, "invalid [[with]] usage                            $ [[with]] applied to enum variable [[%s]] instead of enum type                                          $ note: [[with]] applies to enum types, not variables");
    SWAG_ERROR(Err0544, "invalid [[with]] type                             $ [[with]] applied to type [[%s]] not allowed                                                            $ note: requires a namespace, enum, struct, or struct pointer type");
    SWAG_ERROR(Err0545, "invalid [[@countof]] argument                     $ tuple type not valid as [[@countof]] argument                                                          $ ");
    SWAG_ERROR(Err0546, "invalid [[@dataof]] argument                      $ tuple type not valid as [[@dataof]] argument                                                           $ ");
    SWAG_ERROR(Err0547, "invalid [[@dataof]] argument type                 $ type [[%s]] not valid as [[@dataof]] argument                                                          $ ");
    SWAG_ERROR(Err0548, "invalid [[#include]] argument                     $ [[#include]] received [[%s]] instead of [[string]]                                                     $ ");
    SWAG_ERROR(Err0549, "invalid [[#inject]] argument                      $ [[#inject]] received [[%s]] instead of [[code]]                                                        $ ");
    SWAG_ERROR(Err0550, "invalid [[where]] argument                        $ [[where]] received [[%s]] instead of [[bool]]                                                          $ ");
    SWAG_ERROR(Err0551, "invalid [[#runes]] argument                       $ [[#runes]] received [[%s]] instead of [[string]]                                                       $ ");
    SWAG_ERROR(Err0552, "invalid [[@mkany]] argument                       $ [[@mkany]] second argument received [[%s]] instead of [[typeinfo]]                                     $ ");
    SWAG_ERROR(Err0553, "invalid [[@mkinterface]] argument                 $ [[@mkinterface]] second argument received [[%s]] instead of [[typeinfo]]                               $ ");
    SWAG_ERROR(Err0554, "invalid first argument                            $ [[%s]] first argument must be block pointer for multiple values, found [[%s]]                          $ ");
    SWAG_ERROR(Err0555, "invalid first argument                            $ [[%s]] first argument must be block pointer for variable count, found [[%s]]                           $ ");
    SWAG_ERROR(Err0556, "invalid first argument                            $ [[%s]] first argument requires block pointer, found [[%s]]                                             $ ");
    SWAG_ERROR(Err0557, "invalid first argument                            $ [[%s]] first argument requires pointer, found [[%s]]                                                   $ ");
    SWAG_ERROR(Err0558, "invalid [[@mkinterface]] argument type            $ [[@mkinterface]] first argument requires pointer or struct, found [[%s]]                               $ ");
    SWAG_ERROR(Err0559, "invalid [[@mkstring]] argument type               $ [[@mkstring]] first argument requires [[*u8]], found [[%s]]                                            $ ");
    SWAG_ERROR(Err0560, "invalid [[@mkcallback]] argument type             $ [[@mkcallback]] received [[%s]] instead of function pointer                                            $ ");
    SWAG_ERROR(Err0561, "argument type mismatch                            $ expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0562, "invalid [[@countof]] argument type                $ [[@countof]] received [[%s]] instead of integer                                                        $ ");
    SWAG_ERROR(Err0563, "invalid count argument                            $ [[%s]] count received [[%s]] instead of integer                                                        $ ");
    SWAG_ERROR(Err0564, "invalid [[@mkinterface]] argument name            $ [[@mkinterface]] third argument received [[%s]] instead of interface name                              $ ");
    SWAG_ERROR(Err0565, "invalid [[%s]] argument type                      $ [[%s]] received [[%s]] instead of [[string]]                                                           $ ");
    SWAG_ERROR(Err0566, "invalid array element type                        $ static array cannot use [[void]] as element type                                                       $ ");
    SWAG_ERROR(Err0567, "invalid array dimension type                      $ array dimension received [[%s]] instead of integer                                                     $ ");
    SWAG_ERROR(Err0568, "invalid array index type                          $ array index received [[%s]] instead of integer                                                         $ ");
    SWAG_ERROR(Err0569, "tuple assignment mismatch                         $ right-hand tuple incompatible with left-hand tuple                                                     $ ");
    SWAG_ERROR(Err0570, "invalid function assignment                       $ function pointer cannot assign to constant                                                             $ ");
    SWAG_ERROR(Err0571, "invalid comparison                                $ slice can only compare with [[null]], not [[%s]]                                                       $ ");
    SWAG_ERROR(Err0572, "invalid comparison                                $ interface can only compare with [[null]], another interface, or [[typeinfo]]                           $ ");
    SWAG_ERROR(Err0573, "invalid comparison                                $ [[any]] can only compare with [[null]] or [[typeinfo]], not [[%s]]                                     $ ");
    SWAG_ERROR(Err0574, "invalid comparison                                $ tuples do not support comparison operations                                                            $ ");
    SWAG_ERROR(Err0575, "invalid comparison operation                      $ operator [['%s']] not supported for type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0576, "invalid comparison operation                      $ operator [['%s']] not supported for left operand type [[%s]]                                           $ ");
    SWAG_ERROR(Err0577, "invalid comparison operation                      $ operator [['%s']] not supported for right operand type [[%s]]                                          $ ");
    SWAG_ERROR(Err0578, "constness violation                               $ immutable [[%s]] cannot cast to mutable [[%s]]                                                         $ ");
    SWAG_ERROR(Err0579, "constness violation                               $ [[%s]] first argument requires mutable type, found [[%s]]                                              $ ");
    SWAG_ERROR(Err0580, "constness violation                               $ [[%s]] first argument requires mutable pointer, found [[%s]]                                           $ ");
    SWAG_ERROR(Err0581, "constness violation                               $ [[%s]] first argument requires mutable variable, found [[%s]]                                          $ ");
    SWAG_ERROR(Err0582, "invalid enum reference                            $ expected enum type but received [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0583, "invalid enum base type                            $ type [[%s]] not valid for enum                                                                         $ ");
    SWAG_ERROR(Err0584, "invalid [[#[Swag.EnumFlags]]] enum base type      $ type [[%s]] not valid for [[#[Swag.EnumFlags]]] enum                                                   $ note: requires an unsigned integer type");
    SWAG_ERROR(Err0585, "invalid [[#[Swag.EnumIndex]]] enum base type      $ type [[%s]] not valid for [[#[Swag.EnumIndex]]] enum                                                   $ note: requires an integer type");
    SWAG_ERROR(Err0586, "invalid [[#[Swag.NoDuplicate]]] enum base type    $ type [[%s]] not valid for [[#[Swag.NoDuplicate]]] enum                                                 $ ");
    SWAG_ERROR(Err0587, "invalid enum base type                            $ [[cstring]] not valid as enum base type                                                                $ hint: use [[string]] instead");
    SWAG_ERROR(Err0588, "enum type mismatch                                $ expected enum type [[%s]], found [[%s]]                                                                $ ");
    SWAG_ERROR(Err0589, "constness violation in enum array                 $ enum array type [[%s]] must be [[const]]                                                               $ hint: declare as [[const %s]]");
    SWAG_ERROR(Err0590, "constness violation in enum slice                 $ enum slice type [[%s]] must be [[const]]                                                               $ hint: declare as [[const %s]]");
    SWAG_ERROR(Err0591, "field type mismatch                               $ field [[%s]] requires [[%s]], found [[%s]]                                                             $ ");
    SWAG_ERROR(Err0592, "generic type mismatch                             $ expected [[%s]], found [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0593, "invalid generic parameter type                    $ tuple types not allowed as generic parameters                                                          $ ");
    SWAG_ERROR(Err0594, "invalid bitwise operation                         $ bit inversion [['~']] invalid for type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0595, "invalid operation type                            $ operator [['%s']] requires integer, found [[%s]]                                                       $ ");
    SWAG_ERROR(Err0596, "invalid operation                                 $ operator [['%s']] invalid for type [[%s]]                                                              $ ");
    SWAG_ERROR(Err0597, "invalid operation                                 $ operator [['%s']] invalid for left operand type [[%s]]                                                 $ ");
    SWAG_ERROR(Err0598, "invalid operation                                 $ operator [['%s']] invalid for right operand type [[%s]]                                                $ ");
    SWAG_ERROR(Err0599, "invalid tuple operation                           $ operator [['%s']] invalid for tuple types                                                              $ ");
    SWAG_ERROR(Err0600, "invalid pointer cast                              $ value pointer [[%s]] cannot cast to block pointer [[%s]]                                               $ ");
    SWAG_ERROR(Err0601, "invalid pointer cast                              $ cannot cast [[%s]] to pointer type                                                                     $ ");
    SWAG_ERROR(Err0602, "conflicting return types                          $ return type [[%s]] conflicts with deduced [[%s]]                                                       $ ");
    SWAG_ERROR(Err0603, "conflicting return types                          $ return type [[%s]] conflicts with deduced nothing                                                      $ ");
    SWAG_ERROR(Err0604, "return type mismatch                              $ [[#ast]] returns [[%s]] instead of [[string]]                                                          $ ");
    SWAG_ERROR(Err0605, "invalid callback return type                      $ callback returns invalid type [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0606, "unclosed argument list                            $ missing closing [[)]] in attribute arguments                                                           $ ");
    SWAG_ERROR(Err0607, "unclosed character literal                        $ missing closing quote before line end                                                                  $ ");
    SWAG_ERROR(Err0608, "unclosed comment                                  $ missing closing [['*/']]                                                                               $ ");
    SWAG_ERROR(Err0609, "unclosed string literal                           $ missing closing [['\"']] before line end                                                               $ hint: use [[\"\"\"string\"\"\"]] for multi-line strings");
    SWAG_ERROR(Err0610, "invalid [[#scope]] identifier                     $ invalid [[#scope]] identifier, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0611, "invalid [[#up]] count                             $ [[#up]] requires integer literal, got $$TKN$$                                                          $ ");
    SWAG_ERROR(Err0612, "invalid [[break]] syntax                          $ invalid token after [[break]], got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0613, "invalid [[discard]] usage                         $ invalid token after [[discard]], got $$TKN$$                                                           $ ");
    SWAG_ERROR(Err0614, "invalid [[foreach]] specialization                $ [[foreach]] specialization invalid for [[%s]]                                                          $ note: only valid for struct visits");
    SWAG_ERROR(Err0615, "invalid [[switch]] content                        $ [[switch]] missing [[case]] or [[default]], got $$TKN$$                                                $ ");
    SWAG_ERROR(Err0616, "invalid [[with]] expression                       $ [[with]] used with invalid expression type                                                             $ ");
    SWAG_ERROR(Err0617, "invalid assignment                                $ [['=']] not allowed in expression                                                                      $ hint: use [['==']] for comparison");
    SWAG_ERROR(Err0618, "invalid alias name                                $ invalid alias target, got $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0619, "invalid alias name                                $ invalid alias name after [[%s]], got $$TKN$$                                                           $ ");
    SWAG_ERROR(Err0620, "invalid variable alias                            $ invalid variable alias name, got $$TKN$$                                                               $ ");
    SWAG_ERROR(Err0621, "invalid aliased names                             $ variable aliasing not allowed for [[%s]]: not macro or mixin                                           $ ");
    SWAG_ERROR(Err0622, "invalid argument name                             $ missing argument name before [[:]], got $$TKN$$                                                        $ ");
    SWAG_ERROR(Err0623, "invalid attribute name                            $ invalid attribute name, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0624, "invalid attribute return type                     $ [[->]] return type not allowed in attribute                                                            $ ");
    SWAG_ERROR(Err0625, "invalid binary digit                              $ invalid binary digit $$TKN$$                                                                           $ note: binary literals may only contain [[0]] or [[1]]");
    SWAG_ERROR(Err0626, "invalid character                                 $ invalid character [['%s']]                                                                             $ ");
    SWAG_ERROR(Err0627, "invalid comparison                                $ [['==']] not allowed here                                                                              $ hint: use [['=']] for assignment");
    SWAG_ERROR(Err0628, "invalid compiler instruction scope                $ compiler instruction cannot have a scope                                                               $ note: compiler instructions must not be scoped");
    SWAG_ERROR(Err0629, "invalid default value                             $ default values not allowed for variadic parameters                                                     $ ");
    SWAG_ERROR(Err0630, "invalid embedded instruction                      $ missing embedded instruction or curly block, got $$TKN$$                                               $ ");
    SWAG_ERROR(Err0631, "invalid embedded instruction                      $ missing embedded instruction, got $$TKN$$                                                              $ ");
    SWAG_ERROR(Err0632, "invalid enum identifier                           $ invalid enum value identifier, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0633, "invalid enum name                                 $ invalid enum name, got $$TKN$$                                                                         $ ");
    SWAG_ERROR(Err0634, "invalid function body                             $ [[#[Swag.Foreign]]] function cannot have a body                                                        $ ");
    SWAG_ERROR(Err0635, "duplicate function definition                     $ duplicate function [[%s]]                                                                              $ hint: mark all overloads with [[#[Swag.Overload]]]");
    SWAG_ERROR(Err0636, "invalid generic arguments                         $ generic arguments not allowed after %s                                                                 $ ");
    SWAG_ERROR(Err0637, "invalid generic arguments                         $ generic arguments not allowed after name                                                               $ ");
    SWAG_ERROR(Err0638, "invalid generic arguments                         $ generic arguments not allowed after variable [[%s]]                                                    $ ");
    SWAG_ERROR(Err0639, "forbidden generic function                        $ generic function [[%s]] marked [[#[Swag.NotGeneric]]]                                                  $ ");
    SWAG_ERROR(Err0640, "invalid generic parameters                        $ generic parameters not allowed in [[%s]]                                                               $ ");
    SWAG_ERROR(Err0641, "forbidden generic parameters                      $ generic parameters not allowed in [[%s]]: marked [[#[Swag.NotGeneric]]]                                $ ");
    SWAG_ERROR(Err0642, "invalid interface generics                        $ generic parameters not allowed in interface function                                                   $ ");
    SWAG_ERROR(Err0643, "invalid hexadecimal digit                         $ invalid hexadecimal digit $$TKN$$                                                                      $ note: hexadecimal digits must be [[0-9]], [[A-F]], or [[a-f]]");
    SWAG_ERROR(Err0644, "consecutive identifiers                           $ consecutive identifiers not allowed                                                                    $ ");
    SWAG_ERROR(Err0645, "invalid identifier                                $ identifier [[%s]] invalid at file level                                                                $ note: only mixin function calls are allowed at the top level");
    SWAG_ERROR(Err0646, "invalid intrinsic scope                           $ intrinsic cannot have a scope                                                                          $ note: intrinsics must not define a scope");
    SWAG_ERROR(Err0647, "invalid instruction modifier                      $ modifier [[%s]] invalid for [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0648, "invalid lambda parameter name                     $ parameter name not allowed in lambda type declaration                                                  $ hint: remove the parameter name");
    SWAG_ERROR(Err0649, "too many [[foreach]] aliases                      $ [[foreach]] allows maximum [[2]] alias names, got [[%u]]                                               $ ");
    SWAG_ERROR(Err0650, "invalid number prefix                             $ invalid number prefix 0$$TKN$$                                                                         $ hint: use [[0x]] for hexadecimal or [[0b]] for binary literals");
    SWAG_ERROR(Err0651, "invalid parameter name                            $ invalid parameter name, got $$TKN$$                                                                    $ ");
    SWAG_ERROR(Err0652, "invalid compiler parameters                       $ compiler %s cannot have parameters                                                                     $ hint: replace with [[{]] to start a block");
    SWAG_ERROR(Err0653, "invalid return value                              $ [[#[Swag.CalleeReturn]]] function cannot declare return value                                          $ ");
    SWAG_ERROR(Err0654, "invalid return value                              $ %s cannot return a value                                                                               $ ");
    SWAG_ERROR(Err0655, "missing return type arrow                         $ missing [[->]] before $$TKN$$ in return type                                                           $ ");
    SWAG_ERROR(Err0656, "invalid return arrow                              $ [[->]] expected but got $$TKN$$ in return type                                                         $ ");
    SWAG_ERROR(Err0657, "invalid return type                               $ return type [[%s]] not allowed                                                                         $ ");
    SWAG_ERROR(Err0658, "invalid function return type                      $ [[%s]] has invalid return type [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0659, "invalid symbol                                    $ invalid symbol [['%s']] after %s                                                                       $ ");
    SWAG_ERROR(Err0660, "invalid tuple unpacking                           $ invalid variable name or [[?]], got $$TKN$$                                                            $ ");
    SWAG_ERROR(Err0661, "invalid declaration start                         $ declaration cannot begin with a type                                                                   $ ");
    SWAG_ERROR(Err0662, "invalid type alias                                $ type alias not allowed as [[impl]] block name                                                          $ hint: use the direct type name instead");
    SWAG_ERROR(Err0663, "invalid type declaration                          $ type declaration not allowed after [[me]]                                                              $ note: [[me]] is implicitly typed");
    SWAG_ERROR(Err0664, "invalid type declaration                          $ type declaration not allowed after unnamed parameter                                                   $ ");
    SWAG_ERROR(Err0665, "invalid type suffix                               $ invalid type suffix after %s                                                                           $ ");
    SWAG_ERROR(Err0666, "invalid [[#global]] instruction                   $ [[%s]] not recognized as valid [[#global]] instruction                                                 $ ");
    SWAG_ERROR(Err0667, "misplaced [[mtd]]                                 $ [[mtd]] lambda missing capture parameters                                                              $ hint: use [[func]] or declare captures between [[|...|]]");
    SWAG_ERROR(Err0669, "unvisitable [[foreach]] type                      $ type [[%s]] cannot be visited                                                                          $ note: missing [[opVisit]] implementation");
    SWAG_ERROR(Err0670, "missing [[foreach]] specialization                $ visit specialization [[%s]] not found in [[%s]]                                                        $ ");
    SWAG_ERROR(Err0671, "unknown attribute                                 $ attribute [[%s]] not found                                                                             $ ");
    SWAG_ERROR(Err0672, "unknown attribute                                 $ attribute [[%s]] not found in [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0673, "unknown compiler instruction                      $ [[%s]] not recognized as compiler instruction                                                          $ note: compiler instructions must begin with [['#']]");
    SWAG_ERROR(Err0674, "unknown enum                                      $ enum [[%s]] not found                                                                                  $ ");
    SWAG_ERROR(Err0675, "unknown enum value                                $ enum value [[%s]] not found in [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0676, "unknown escape code                               $ [['%c']] not recognized as valid escape code                                                           $ ");
    SWAG_ERROR(Err0677, "unknown field                                     $ field [[%s]] not found in [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0678, "missing file                                      $ file [[\"%s\"]] not found                                                                              $ ");
    SWAG_ERROR(Err0679, "unknown function                                  $ function [[%s]] not found                                                                              $ ");
    SWAG_ERROR(Err0680, "unknown function                                  $ function [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0404, "invalid dot notation                              $ statement starting with [[.]] only allowed in [[with]] or [[mtd]]                                      $ hint: use [[me.field]] or wrap the expression in [[with]]");
    SWAG_ERROR(Err0681, "unresolved shorthand                              $ shorthand [[%s]] unresolved: no [[enum]], [[with]], or [[mtd]] context                                 $ ");
    SWAG_ERROR(Err0682, "unknown identifier                                $ identifier [[%s]] not found                                                                            $ ");
    SWAG_ERROR(Err0683, "unknown identifier                                $ identifier [[%s]] not found in [[%s]] or %s [[%s]]                                                     $ ");
    SWAG_ERROR(Err0684, "unknown tuple identifier                          $ identifier [[%s]] not found in tuple                                                                   $ ");
    SWAG_ERROR(Err0685, "unknown interface function                        $ function [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0686, "unknown intrinsic                                 $ [[%s]] not recognized as valid intrinsic                                                               $ ");
    SWAG_ERROR(Err0687, "unknown label                                     $ scope label [[%s]] not found                                                                           $ ");
    SWAG_ERROR(Err0688, "unknown method                                    $ method [[%s]] not found in [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0689, "unknown named argument                            $ named argument [[%s]] not found                                                                        $ ");
    SWAG_ERROR(Err0690, "unknown compiler pass                             $ [[%s]] not recognized as compiler pass                                                                 $ ");
    SWAG_ERROR(Err0691, "unknown relocation offset                         $ struct member [[%s]] not found                                                                         $ ");
    SWAG_ERROR(Err0692, "unknown struct                                    $ struct [[%s]] not found                                                                                $ ");
    SWAG_ERROR(Err0693, "unknown struct                                    $ struct [[%s]] not found in [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0694, "unknown type                                      $ type [[%s]] not found                                                                                  $ ");
    SWAG_ERROR(Err0695, "invalid value export                              $ [[\"%s\"]] not valid [[#[Swag.ExportType]]]                                                            $ hint: use [[\"methods\"]] or [[\"nozero\"]]");
    SWAG_ERROR(Err0696, "invalid match value                               $ [[\"%s\"]] is not a valid [[#[Swag.Match]]] value                                                      $ hint: use [[\"where\"]] or [[\"me\"]]");
    SWAG_ERROR(Err0697, "invalid optimization value                        $ [[\"%s\"]] is not a valid [[#[Swag.Optim]]] value                                                      $ hint: use [[\"bytecode\"]] or [[\"backend\"]]");
    SWAG_ERROR(Err0698, "invalid safety setting                            $ [[\"%s\"]] is not a recognized safety option                                                           $ hint: use one of [[\"boundcheck|overflow|math|switch|unreachable|dyncast|bool|nan|null\"]]");
    SWAG_ERROR(Err0699, "undefined variable                                $ variable [[%s]] not found                                                                              $ ");
    SWAG_ERROR(Err0700, "undefined variable                                $ variable [[%s]] not found in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0701, "tuple unpack mismatch                             $ tuple has [[%u]] fields, but [[%u]] variables were provided                                            $ ");
    SWAG_ERROR(Err0702, "tuple unpack mismatch                             $ tuple has only [[%u]] fields, but [[%u]] variables were provided                                       $ ");
    SWAG_ERROR(Err0703, "undetermined array dimension                      $ array dimension could not be inferred: missing initialization                                          $ ");
    SWAG_ERROR(Err0704, "invalid enum flag value                           $ flag [[%s]] value cannot be derived: previous value not a power of two                                 $ ");
    SWAG_ERROR(Err0705, "unresolved generic arguments                      $ generic arguments for %s [[%s]] could not be determined                                                $ ");
    SWAG_ERROR(Err0706, "unresolved identifier                             $ identifier [[%s]] could not be resolved                                                                $ ");
    SWAG_ERROR(Err0707, "unresolved semantic element                       $ failed to resolve semantic reference                                                                   $ ");
    SWAG_ERROR(Err0708, "undetermined variable type                        $ variable type could not be inferred: expression is [[null]]                                            $ ");
    SWAG_ERROR(Err0709, "invalid struct in union                           $ [[%s]] cannot be part of a union: contains [[%s]]                                                      $ ");
    SWAG_ERROR(Err0710, "unused alias                                      $ no matching variable found for alias [[%s]]                                                            $ hint: remove the alias");
    SWAG_ERROR(Err0711, "ignored return value                              $ function [[%s]] return value cannot be ignored                                                         $ hint: add [[discard]] to explicitly ignore it");
    SWAG_ERROR(Err0712, "ignored return value                              $ intrinsic [[%s]] return value cannot be ignored                                                        $ ");
    SWAG_ERROR(Err0713, "ignored return value                              $ lambda [[%s]] return value cannot be ignored                                                           $ hint: add [[discard]] to explicitly ignore it");
    SWAG_ERROR(Err0714, "duplicate [[#import]] location                    $ [[#import]] location already defined                                                                   $ ");
    SWAG_ERROR(Err0715, "duplicate [[#import]] location                    $ module [[%s]] location already defined as [[%s]]                                                       $ ");
    SWAG_ERROR(Err0716, "duplicate [[#import]] version                     $ [[#import]] version already defined                                                                    $ ");
    SWAG_ERROR(Err0717, "duplicate [[#import]] version                     $ module [[%s]] version already defined as [[%s]]                                                        $ ");
    SWAG_ERROR(Err0718, "execution failure                                 $ runtime execution error occurred                                                                       $ ");
    SWAG_ERROR(Err0719, "invalid generic instantiation                     $ variable creation failed: generic type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0720, "invalid generic instantiation                     $ constant creation failed: generic type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0721, "missing generic arguments                         $ %s has no generic arguments provided                                                                   $ ");
    SWAG_ERROR(Err0722, "missing generic arguments                         $ generic function [[%s]] lacks required generic arguments                                               $ ");
    SWAG_ERROR(Err0723, "missing generic arguments                         $ generic struct [[%s]] lacks required generic arguments                                                 $ ");
    SWAG_ERROR(Err0724, "module fetch failure                              $ failed to fetch file [[%s]] for module [[%s]]                                                          $ ");
    SWAG_ERROR(Err0725, "file deletion failed                              $ unable to delete file [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0726, "unsupported file encoding                         $ file encoding must be ASCII, UTF-8, or UTF-8-BOM                                                       $ ");
    SWAG_ERROR(Err0727, "missing documentation page                        $ documentation page [[%s]] not found                                                                    $ ");
    SWAG_ERROR(Err0728, "missing file                                      $ file [[%s]] not found in module [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0729, "include file open failed                          $ [[#include]] file [[%s]] cannot be opened                                                              $ ");
    SWAG_ERROR(Err0730, "file open failed                                  $ file [[%s]] cannot be opened                                                                           $ ");
    SWAG_ERROR(Err0731, "file open failed                                  $ file [[%s]] cannot be opened                                                                           $ ");
    SWAG_ERROR(Err0732, "file write access failed                          $ file [[%s]] cannot be opened for writing                                                               $ ");
    SWAG_ERROR(Err0733, "file read failed                                  $ source file [[%s]] cannot be read                                                                      $ ");
    SWAG_ERROR(Err0734, "file write failed                                 $ file [[%s]] cannot be written                                                                          $ ");
    SWAG_ERROR(Err0735, "folder creation failed                            $ directory [[%s]] could not be created                                                                  $ ");
    SWAG_ERROR(Err0736, "missing dependency folder                         $ dependency module folder [[\"%s\"]] not found                                                          $ ");
    SWAG_ERROR(Err0737, "invalid assignment target                         $ left expression is not assignable                                                                      $ ");
    SWAG_ERROR(Err0738, "invalid expression                                $ expression missing or invalid, got $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0739, "invalid [[#import]] location format               $ [[#import]] location format is invalid                                                                 $ hint: use [[location=\"mode@accesspath\"]], where mode is [[swag]] or [[disk]]");
    SWAG_ERROR(Err0740, "invalid [[#import]] version format                $ [[#import]] version format is invalid                                                                  $ ");
    SWAG_ERROR(Err0741, "incomplete [[#import]] version                    $ major version missing: revision set to [[%d]]                                                          $ ");
    SWAG_ERROR(Err0742, "incomplete [[#import]] version                    $ revision missing: build number set to [[%d]]                                                           $ ");
    SWAG_ERROR(Err0743, "invalid literal conversion                        $ literal [[%I64u]] cannot be converted                                                                  $ ");
    SWAG_ERROR(Err0744, "invalid file reference                            $ current file scope cannot be referenced                                                                $ ");
    SWAG_ERROR(Err0745, "invalid function return type                      $ [[%s]] not valid as function return type                                                               $ ");
    SWAG_ERROR(Err0746, "invalid runtime type conversion                   $ [[%s]] cannot be converted to runtime typeinfo                                                         $ ");
    SWAG_ERROR(Err0747, "invalid [[void]] initialization                   $ [[void]] expression cannot initialize a value                                                          $ ");
    SWAG_ERROR(Err0748, "invalid variable name                             $ variable name [[%s]] starts with [[#]], not allowed                                                    $ hint: only [[#uniq]] and [[#alias]] are permitted");
    SWAG_ERROR(Err0749, "misplaced [[#dependencies]] directive             $ [[#dependencies]] directive not at file level                                                          $ ");
    SWAG_ERROR(Err0750, "misplaced [[#global testerror]] directive         $ [[#global testerror]] allowed only in test files ([[./tests]] folder)                                  $ ");
    SWAG_ERROR(Err0751, "misplaced [[#global testwarning]] directive       $ [[#global testwarning]] allowed only in test files ([[./tests]] folder)                                $ ");
    SWAG_ERROR(Err0752, "misplaced [[#import]] directive                   $ [[#import]] only allowed inside [[#dependencies]] block                                                $ ");
    SWAG_ERROR(Err0753, "misplaced [[#load]] directive                     $ [[#load]] only allowed inside [[#dependencies]] block                                                  $ ");
    SWAG_ERROR(Err0754, "misplaced [[#test]] directive                     $ [[#test]] allowed only in test modules ([[./tests]] folder)                                            $ ");
    SWAG_ERROR(Err0755, "missing [[#import]] argument                      $ missing module name after [[#import]], got $$TKN$$                                                     $ ");
    SWAG_ERROR(Err0756, "missing [[#include]] argument                     $ missing filename after [[#include]], got $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0757, "entry point missing                               $ [[#main]] function not found                                                                           $ ");
    SWAG_ERROR(Err0758, "missing initialization                            $ immutable variable lacks initialization                                                                $ ");
    SWAG_ERROR(Err0759, "missing test error                                $ no error detected where at least one was required                                                      $ ");
    SWAG_ERROR(Err0760, "missing test warning                              $ no warning detected where at least one was required                                                    $ ");
    SWAG_ERROR(Err0761, "call depth limit reached                          $ call level limit [[--limit-recurse-bc:%d]] exceeded                                                    $ ");
    SWAG_ERROR(Err0762, "compiler limit exceeded                           $ %s size exceeds [[0x%I64x]] bytes                                                                      $ ");
    SWAG_ERROR(Err0763, "compiler limit exceeded                           $ data segment [[%s]] size exceeds [[0x%I64x]] bytes                                                     $ ");
    SWAG_ERROR(Err0764, "system process failure                            $ process [[%s]] creation failed                                                                         $ ");
    SWAG_ERROR(Err0765, "system pipe failure                               $ process [[%s]] creation failed (::CreatePipe)                                                          $ ");
    SWAG_ERROR(Err0766, "type mismatch                                     $ type [[%s]] incompatible with command-line [[%s]] type [[%s]]                                          $ ");
    SWAG_ERROR(Err0767, "invalid enum operation                            $ operation [['%s']] invalid: left enum [[%s]] not marked [[#[Swag.EnumFlags]]]                          $ hint: add the [[#[Swag.EnumFlags]]] attribute to the left enum");
    SWAG_ERROR(Err0768, "invalid enum operation                            $ operation [['%s']] invalid: right enum [[%s]] not marked [[#[Swag.EnumFlags]]]                         $ hint: add the [[#[Swag.EnumFlags]]] attribute to the right enum");
    SWAG_ERROR(Err0769, "missing [[#import]] location argument             $ location path missing after [[#import]], got $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0770, "missing [[#import]] version argument              $ version string missing after [[#import]], got $$TKN$$                                                  $ ");
    SWAG_ERROR(Err0771, "missing dependency module                         $ module dependency [[%s]] not found                                                                     $ ");
    SWAG_ERROR(Err0772, "missing foreign function                          $ foreign function [[%s]] not found                                                                      $ ");
    SWAG_ERROR(Err0774, "invalid [[location]] value                        $ [[\"%s\"]] is not a valid [[location]] value                                                           $ hint: use [[\"swag\"]] or [[\"disk\"]]");
    SWAG_ERROR(Err0775, "unresolved dependency version                     $ module [[%s]] dependency has version mismatch                                                          $ ");
    SWAG_ERROR(Err0776, "unresolved dependency version                     $ module [[%s]] dependency version [[%s]] not found                                                      $ ");
    SWAG_ERROR(Err0777, "unresolved dependency version                     $ module [[%s]] dependency version [[%s]] not found at [[%s]]                                            $ ");
    SWAG_ERROR(Err0778, "unresolved dependency location                    $ module [[%s]] dependency has empty [[location]]                                                        $ ");
    SWAG_ERROR(Err0779, "unresolved foreign function call                  $ failed to load module [[%s]] for foreign function [[%s]]                                               $ ");
    SWAG_ERROR(Err0780, "unresolved generic type                           $ generic type could not be inferred: embedded tuples too complex                                        $ ");
    SWAG_ERROR(Err0781, "unresolved interface type                         $ interface resolution failed for generic type [[%s]]                                                    $ ");
    SWAG_ERROR(Err0782, "unresolved variable type                          $ %s [[%s]] type could not be determined                                                                 $ ");
    SWAG_ERROR(Err0783, "unsupported [[#nameof]] argument                  $ [[#nameof]] argument evaluation failed                                                                 $ ");
    SWAG_ERROR(Err0784, "unsupported [[#stringof]] argument                $ [[#stringof]] argument evaluation failed                                                               $ ");
    SWAG_ERROR(Err0786, "invalid intrinsic usage                           $ [[%s]] used incorrectly with arguments                                                                 $ hint: [[%s]] is a value, not a function call; remove [['(']]");
    SWAG_ERROR(Err0428, "invalid assignment                                $ struct member cannot initialize with function pointer                                                  $ ");
    SWAG_ERROR(Err0353, "file patch failed                                 $ icon patch operation failed in [[%s]] : %s                                                             $ ");
    SWAG_ERROR(Err0785, "missing [[#import]] location                      $ second [[#import]] argument missing or invalid, got $$TKN$$                                            $ hint: use [[location:\"location\"]]");
    SWAG_ERROR(Err0773, "missing [[#import]] version                       $ third [[#import]] argument missing or invalid, got $$TKN$$                                             $ hint: use [[version:\"version\"]]");
    SWAG_ERROR(Err0668, "UFCS type mismatch                                $ UFCS type [[%s]] incompatible                                                                          $ ");
    SWAG_ERROR(Err0310, "invalid top-level call                            $ [[%s]] not marked [[#[Swag.Mixin]]]                                                                    $ hint: only mixin calls are allowed at the top level");

    SWAG_ERROR(Err0167, nullptr);
    SWAG_ERROR(Err0421, nullptr);
    SWAG_ERROR(Err0309, nullptr);
    SWAG_ERROR(Err0422, nullptr);
    SWAG_ERROR(Err0468, nullptr);
    SWAG_ERROR(Err0060, nullptr);
    SWAG_ERROR(Err0079, nullptr);
    SWAG_ERROR(Err0320, nullptr);
    SWAG_ERROR(Err0481, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
}

Utf8 formErr(ErrorID idx, ...)
{
    va_list args;
    va_start(args, idx);
    auto result = form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
    result      = form(result.cstr(), args);
    va_end(args);
    return result;
}

Utf8 toErr(ErrorID idx)
{
    return form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
}
