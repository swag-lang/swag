#include "pch.h"
#include "Report/ErrorIds.h"

namespace
{
#undef SWAG_ERROR
#define SWAG_ERROR(__enum) #__enum
    const char* g_ErrList[] = {
#include "ErrorList.h"

    };
}

Utf8 g_E[MaxErrors];
#undef SWAG_ERROR
#define SWAG_ERROR(__n, __msg)                 \
    do                                         \
    {                                          \
        SWAG_ASSERT(g_E[(int) (__n)].empty()); \
        g_E[(int) (__n)] = __msg;              \
    } while (0)

void initErrors()
{
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Fat0001, "[cmdline] [[%s]] needs [[true]] or [[false]], got [[%s]]");
    SWAG_ERROR(Fat0002, "[cmdline] [[%s]] needs string argument");
    SWAG_ERROR(Fat0003, "[cmdline] [[%s]] needs integer argument, got [[%s]]");
    SWAG_ERROR(Fat0004, "[cmdline] [[%s]] needs integer argument");
    SWAG_ERROR(Fat0005, "[cmdline] [[%s]] requires [[%s]]");
    SWAG_ERROR(Fat0006, "[cmdline] [[--stack-size]] out of range (%s provided, range [%s, %s])");
    SWAG_ERROR(Fat0007, "[cmdline] unknown argument [[%s]]");
    SWAG_ERROR(Fat0008, "[cmdline] [[--arch]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0009, "[cmdline] [[--os]] [[%s]] unsupported for SCBE backend");
    SWAG_ERROR(Fat0010, "[fatal] cache directory [[%s]] not found");
    SWAG_ERROR(Fat0011, "[fatal] dependency module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0012, "[fatal] duplicate module name [[%s]] in workspace (path [[%s]])");
    SWAG_ERROR(Fat0013, "[fatal] workspace folder [[--workspace]] required");
    SWAG_ERROR(Fat0014, "[fatal] compiler bootstrap issues");
    SWAG_ERROR(Fat0015, "[fatal] compiler runtime issues");
    SWAG_ERROR(Fat0016, "[fatal] cache directory [[%s]] creation failed");
    SWAG_ERROR(Fat0017, "[fatal] directory [[%s]] creation failed");
    SWAG_ERROR(Fat0018, "[fatal] file [[%s]] creation failed");
    SWAG_ERROR(Fat0019, "[fatal] public directory [[%s]] creation failed");
    SWAG_ERROR(Fat0020, "[fatal] script file [[%s]] creation failed");
    SWAG_ERROR(Fat0021, "[fatal] target directory [[%s]] creation failed");
    SWAG_ERROR(Fat0022, "[fatal] directory [[%s]] deletion failed");
    SWAG_ERROR(Fat0023, "[fatal] file [[%s]] deletion failed");
    SWAG_ERROR(Fat0024, "[fatal] [[--tag:%s]] value invalid (%s)");
    SWAG_ERROR(Fat0025, "[fatal] script file extension must be [[.swgs]], got [[%s]]");
    SWAG_ERROR(Fat0026, "[fatal] [[Swag]] command [[%s]] invalid");
    SWAG_ERROR(Fat0027, "[fatal] workspace [[%s]] invalid: missing [[modules/]] or [[tests/]]");
    SWAG_ERROR(Fat0028, "[fatal] module [[%s]] already exists in [[/modules]]");
    SWAG_ERROR(Fat0029, "[fatal] module [[%s]] not found in workspace");
    SWAG_ERROR(Fat0030, "[fatal] file [[%s]] not found");
    SWAG_ERROR(Fat0031, "[fatal] script file missing (use [[--file:<filename>.swgs]])");
    SWAG_ERROR(Fat0032, "[fatal] compile tag value [[%s]] unexpected (use [[--tag:%s]])");
    SWAG_ERROR(Fat0033, "[fatal] compile tag type [[%s]] unknown (use [[--tag:%s]])");
    SWAG_ERROR(Fat0034, "[fatal] workspace folder [[%s]] already exists");
    SWAG_ERROR(Fat0035, "[fatal] workspace folder [[%s]] not found");
    SWAG_ERROR(Fat0036, "[fatal] windows sdk folder not found");
    SWAG_ERROR(Fat0037, "[fatal] file or folder to format missing (use [[--file]])");
    SWAG_ERROR(Fat0038, "[fatal] [[%s]] is not a valid swag file");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Saf0001, "[safety] invalid cast from [[any]] to [[%s]]                                $ note: this safety check was triggered because [[#[Swag.Safety(\"dyncast\")]]] is enabled");
    SWAG_ERROR(Saf0002, "[safety] cannot cast a null value to [[%s]]                                 $ note: this safety check was triggered because [[#[Swag.Safety(\"dyncast\")]]] is enabled");
    SWAG_ERROR(Saf0003, "[safety] invalid boolean value detected                                     $ note: this safety check was triggered because [[#[Swag.Safety(\"bool\")]]] is enabled");
    SWAG_ERROR(Saf0004, "[safety] index out of range                                                 $ note: this safety check was triggered because [[#[Swag.Safety(\"boundcheck\")]]] is enabled");
    SWAG_ERROR(Saf0005, "[safety] lower bound greater than upper bound                               $ note: this safety check was triggered because [[#[Swag.Safety(\"boundcheck\")]]] is enabled");
    SWAG_ERROR(Saf0006, "[safety] lower bound greater than upper bound                               $ note: this safety check was triggered because [[#[Swag.Safety(\"boundcheck\")]]] is enabled");
    SWAG_ERROR(Saf0007, "[safety] upper bound exceeds array length                                   $ note: this safety check was triggered because [[#[Swag.Safety(\"boundcheck\")]]] is enabled");
    SWAG_ERROR(Saf0008, "[safety] overflow detected in [[@abs]] (type [[%s]])                        $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0009, "[safety] invalid argument passed to [[@acos]] (type [[%s]])                 $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0010, "[safety] invalid argument passed to [[@asin]] (type [[%s]])                 $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0011, "[safety] invalid argument passed to [[@log]] (type [[%s]])                  $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0012, "[safety] invalid argument passed to [[@log10]] (type [[%s]])                $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0013, "[safety] invalid argument passed to [[@log2]] (type [[%s]])                 $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0014, "[safety] invalid argument passed to [[@sqrt]] (type [[%s]])                 $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0015, "[safety] invalid argument passed to [[@pow]] (type [[%s]])                  $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0016, "[safety] division by zero                                                   $ note: this safety check was triggered because [[#[Swag.Safety(\"math\")]]] is enabled");
    SWAG_ERROR(Saf0017, "[safety] NaN (Not a Number) value detected                                  $ note: this safety check was triggered because [[#[Swag.Safety(\"nan\")]]] is enabled");
    SWAG_ERROR(Saf0018, "[safety] attempted to dereference a null pointer                            $ note: this safety check was triggered because [[#[Swag.Safety(\"null\")]]] is enabled");
    SWAG_ERROR(Saf0019, "[safety] attempted to throw a null error value                              $ note: this safety check was triggered because [[#[Swag.Safety(\"null\")]]] is enabled");
    SWAG_ERROR(Saf0030, "[safety] null argument passed to [[%s]]                                     $ note: this safety check was triggered because [[#[Swag.Safety(\"null\")]]] is enabled");
    SWAG_ERROR(Saf0031, "[safety] cannot return a null value                                         $ note: this safety check was triggered because [[#[Swag.Safety(\"null\")]]] is enabled");
    SWAG_ERROR(Saf0020, "[safety] negative value [[%I64d]] cannot cast to unsigned type [[%s]]       $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0021, "[safety] negative type [[%s]] cannot cast to unsigned type [[%s]]           $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0022, "[safety] negative value [[%g]] cannot cast to unsigned type [[%s]]          $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0023, "[safety] value [[%s]] ([[%I64u]]) too large for type [[%s]] (overflow)      $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0024, "[safety] value [[%I64u]] too large for type [[%s]] (overflow)               $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0025, "[safety] value [[%I64d]] too large for type [[%s]] (overflow)               $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0026, "[safety] value [[%g]] too large for type [[%s]] (overflow)                  $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0027, "[safety] overflow detected during [['%s']] operation (type [[%s]])          $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0028, "[safety] truncation from [[%s]] to [[%s]] not allowed (possible data loss)  $ note: this safety check was triggered because [[#[Swag.Safety(\"overflow\")]]] is enabled");
    SWAG_ERROR(Saf0029, "[safety] unexpected switch value (no matching case found)                   $ note: this safety check was triggered because [[#[Swag.Safety(\"switch\")]]] is enabled");
    SWAG_ERROR(Saf0032, "[safety] return of stack memory                                             $ note: this safety check was triggered because [[#[Swag.Safety(\"memory\")]]] is enabled");
    SWAG_ERROR(Saf0033, "[safety] stack overwrite at offset [[%lld]] (stack size [[%lld]])           $ note: this safety check was triggered because [[#[Swag.Safety(\"memory\")]]] is enabled");
    SWAG_ERROR(Saf0034, "[safety] use of uninitialized memory                                        $ note: this safety check was triggered because [[#[Swag.Safety(\"memory\")]]] is enabled");
    SWAG_ERROR(Saf0035, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Wrn0001, "%s                                                                                                    $ ");
    SWAG_ERROR(Wrn0002, "%s [[%s]] is deprecated ([[#[Swag.Deprecated]]])                                                      $ ");
    SWAG_ERROR(Wrn0003, "unused variable [[%s]]                                                                                $ note: never modified after declaration $ hint: declare it with [[let]] instead of [[var]] to mark it immutable");
    SWAG_ERROR(Wrn0004, "unused variable [[%s]]                                                                                $ note: initialized to a default value and never used $ note: consider removing this variable if it serves no purpose");
    SWAG_ERROR(Wrn0005, "unreachable code detected                                                                             $ ");
    SWAG_ERROR(Wrn0006, "unused %s [[%s]]                                                                                      $ note: declared but never used");
    SWAG_ERROR(Wrn0007, "ineffective [[break]] statement                                                                       $ note: [[break]] is only needed in empty [[case]] blocks");
    SWAG_ERROR(Wrn0008, "redundant [[if]] after [[else]]                                                                       $ hint: replace [[else: if]] with [[elif]]");
    SWAG_ERROR(Wrn0009, "redundant [[#if]] after [[#else]]                                                                     $ hint: replace [[#else: #if]] with [[#elif]]");
    SWAG_ERROR(Wrn0010, "simplifiable [[if]] statement                                                                         $ hint: can be simplified with [[where]]");

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////

    SWAG_ERROR(Err0001, "%s");
    SWAG_ERROR(Err0002, "%s");
    SWAG_ERROR(Err0003, "%s");
    
    SWAG_ERROR(Err0024, "ambiguous %s [[%s]]                                                                                    $ ");
    SWAG_ERROR(Err0020, "ambiguous cast from [[%s]] to [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0022, "ambiguous cast from [[%s]] to interface [[%s]]                                                         $ ");
    SWAG_ERROR(Err0021, "ambiguous enum value [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0025, "ambiguous generic %s [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0026, "ambiguous lambda parameter declaration                                                                 $ ");
    SWAG_ERROR(Err0023, "ambiguous symbol [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0029, "assertion failed: [[#assert]] expression evaluated to false                                            $ ");
    SWAG_ERROR(Err0255, "cannot access [[internal]] field [[%s]]                                                                $ ");
    SWAG_ERROR(Err0484, "cannot access static member [[%s]] of [[%s]] as an instance field                                      $ ");
    SWAG_ERROR(Err0027, "cannot allocate stack: size exceeds [[%s]] limit set by [[--stack-size]]                               $ ");
    SWAG_ERROR(Err0509, "cannot apply [[#null]] modifier: parameter already nullable due to [[null]] default value              $ hint: remove the [[#null]] modifier");
    SWAG_ERROR(Err0213, "cannot apply [[move]] to immutable expression of type [[%s]]                                           $ ");
    SWAG_ERROR(Err0531, "cannot assign [[%s]] to [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0362, "cannot assign to unnamed parameters                                                                    $ ");
    SWAG_ERROR(Err0162, "cannot assign: call produces no value                                                                  $ ");
    SWAG_ERROR(Err0093, "cannot assign: left expression is immutable                                                            $ ");
    SWAG_ERROR(Err0165, "cannot bit-cast from [[%s]] to larger [[%s]]                                                           $ ");
    SWAG_ERROR(Err0028, "cannot capture: size [[%u]] bytes exceeds limit [[%u]] bytes                                           $ ");
    SWAG_ERROR(Err0530, "cannot cast [[%s]] to [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0202, "cannot cast [[%s]] to [[%s]]: implementation not found                                                 $ ");
    SWAG_ERROR(Err0601, "cannot cast [[%s]] to pointer type                                                                     $ ");
    SWAG_ERROR(Err0528, "cannot cast a type value to a compile-time type ([[%s]])                                               $ ");
    SWAG_ERROR(Err0628, "cannot cast a value to a type                                                                          $ ");
    SWAG_ERROR(Err0529, "cannot cast an interface to a struct                                                                   $ note: interfaces can only be cast to struct pointers");
    SWAG_ERROR(Err0578, "cannot cast immutable [[%s]] to mutable [[%s]]                                                         $ ");
    SWAG_ERROR(Err0261, "cannot cast left side [[%s]] to [[interface]]                                                          $ ");
    SWAG_ERROR(Err0260, "cannot cast right side [[%s]] to [[struct]]                                                            $ ");
    SWAG_ERROR(Err0600, "cannot cast value pointer [[%s]] to block pointer [[%s]]                                               $ ");
    SWAG_ERROR(Err0045, "cannot combine [[#[Swag.Compiler]]] and [[#[Swag.Tls]]]                                                $ ");
    SWAG_ERROR(Err0046, "cannot combine [[#[Swag.Inline]]] and [[#[Swag.NoInline]]]                                             $ ");
    SWAG_ERROR(Err0047, "cannot combine [[#[Swag.Macro]]] and [[#[Swag.Inline]]]                                                $ ");
    SWAG_ERROR(Err0048, "cannot combine [[#[Swag.Macro]]] and [[#[Swag.Mixin]]]                                                 $ ");
    SWAG_ERROR(Err0049, "cannot combine [[#[Swag.Macro]]] and [[#[Swag.NoInline]]]                                              $ ");
    SWAG_ERROR(Err0050, "cannot combine [[#[Swag.Mixin]]] and [[#[Swag.Inline]]]                                                $ ");
    SWAG_ERROR(Err0051, "cannot combine [[#[Swag.Mixin]]] and [[#[Swag.NoInline]]]                                              $ ");
    SWAG_ERROR(Err0052, "cannot combine [[%s]] and [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0313, "cannot combine [[%s]] with another [[%s]]                                                              $ ");
    SWAG_ERROR(Err0239, "cannot convert [[%s]] to [[%s]] by index: missing [[opIndexAffect]]                                    $ ");
    SWAG_ERROR(Err0746, "cannot convert [[%s]] to runtime [[typeinfo]]                                                          $ ");
    SWAG_ERROR(Err0527, "cannot convert a closure type to a lambda type                                                         $ ");
    SWAG_ERROR(Err0030, "cannot convert function return slice into a compile-time value                                         $ note: function return type is [[%s]]");
    SWAG_ERROR(Err0031, "cannot convert function return value into constant array: [[opCount]] returned [[0]]                   $ note: function return type is [[%s]]");
    SWAG_ERROR(Err0032, "cannot convert function return value into constant array: [[opSlice]] returned empty slice             $ note: function return type is [[%s]]");
    SWAG_ERROR(Err0743, "cannot convert literal [[%I64u]]                                                                       $ ");
    SWAG_ERROR(Err0033, "cannot convert type [[%s]] to a compile-time constant                                                  $ ");
    SWAG_ERROR(Err0090, "cannot copy [[%s]]: marked [[#[Swag.NoCopy]]]                                                          $ ");
    SWAG_ERROR(Err0720, "cannot create constant with generic type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0735, "cannot create directory [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0719, "cannot create variable with generic type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0358, "cannot declare [[public]] on global variables                                                          $ ");
    SWAG_ERROR(Err0640, "cannot declare generic parameters for function [[%s]]                                                  $ ");
    SWAG_ERROR(Err0641, "cannot declare generic parameters for function [[%s]]                                                  $ note: the function has the [[#[Swag.NotGeneric]]] attribute");
    SWAG_ERROR(Err0339, "cannot declare lambda type with [[mtd]]                                                                $ hint: use [[func]] instead");
    SWAG_ERROR(Err0275, "cannot declare multiple variables in [[if]]                                                            $ note: [[if]] allows only a single variable declaration");
    SWAG_ERROR(Err0276, "cannot declare multiple variables in [[using]]                                                         $ note: [[using]] allows only a single variable declaration");
    SWAG_ERROR(Err0277, "cannot declare multiple variables in [[with]]                                                          $ note: [[with]] allows only a single variable declaration");
    SWAG_ERROR(Err0219, "cannot declare type [[%s]] as nullable                                                                 $ ");
    SWAG_ERROR(Err0704, "cannot deduce flag [[%s]] from the previous value                                                      $ note: the previous value ([[%llu]]) is not a power of two $ note: flag enumerations under [[#[Swag.EnumFlags]]] must use power-of-two values (1, 2, 4, 8, ...)");
    SWAG_ERROR(Err0634, "cannot define a body for function marked with [[#[Swag.Foreign]]]                                      $ note: the [[#[Swag.Foreign]]] attribute indicates the function is externally defined");
    SWAG_ERROR(Err0507, "cannot define struct [[%s]] that directly or indirectly references itself                              $ ");
    SWAG_ERROR(Err0725, "cannot delete file [[%s]]                                                                              $ ");
    SWAG_ERROR(Err0176, "cannot dereference [[%s]] of type [[%s]] as struct or pointer                                          $ ");
    SWAG_ERROR(Err0278, "cannot dereference [[void*]]                                                                           $ note: [[void]] has no size");
    SWAG_ERROR(Err0249, "cannot dereference a tuple as a pointer                                                                $ ");
    SWAG_ERROR(Err0177, "cannot dereference constant address at compile-time                                                    $ ");
    SWAG_ERROR(Err0218, "cannot dereference null pointer                                                                        $ ");
    SWAG_ERROR(Err0178, "cannot dereference type [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0782, "cannot determine %s [[%s]] type                                                                        $ ");
    SWAG_ERROR(Err0705, "cannot determine generic arguments for %s [[%s]]                                                       $ ");
    SWAG_ERROR(Err0763, "cannot emit data segment [[%s]]: size exceeds [[0x%I64x]] bytes                                        $ ");
    SWAG_ERROR(Err0252, "cannot evaluate generic type                                                                           $ ");
    SWAG_ERROR(Err0757, "cannot find [[#main]] function                                                                         $ ");
    SWAG_ERROR(Err0240, "cannot find [[%s]] in [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0671, "cannot find attribute [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0672, "cannot find attribute [[%s]] in [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0736, "cannot find dependency module folder [[\"%s\"]]                                                        $ ");
    SWAG_ERROR(Err0776, "cannot find dependency version [[%s]] for module [[%s]]                                                $ ");
    SWAG_ERROR(Err0777, "cannot find dependency version [[%s]] for module [[%s]] at [[%s]]                                      $ ");
    SWAG_ERROR(Err0727, "cannot find documentation page [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0674, "cannot find enum [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0675, "cannot find enum value [[%s]] in [[%s]]                                                                $ ");
    SWAG_ERROR(Err0677, "cannot find field [[%s]] in [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0728, "cannot find file [[%s]] in module [[%s]]                                                               $ ");
    SWAG_ERROR(Err0678, "cannot find file [[\"%s\"]]                                                                            $ ");
    SWAG_ERROR(Err0772, "cannot find foreign function [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0679, "cannot find function [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0680, "cannot find function [[%s]] in [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0685, "cannot find function [[%s]] in [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0682, "cannot find identifier [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0683, "cannot find identifier [[%s]] in [[%s]] or %s [[%s]]                                                   $ ");
    SWAG_ERROR(Err0684, "cannot find identifier [[%s]] in tuple                                                                 $ ");
    SWAG_ERROR(Err0506, "cannot find matching overload                                                                          $ ");
    SWAG_ERROR(Err0710, "cannot find matching variable for alias [[%s]]                                                         $ hint: remove the alias");
    SWAG_ERROR(Err0688, "cannot find method [[%s]] in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0771, "cannot find module [[%s]]                                                                              $ ");
    SWAG_ERROR(Err0689, "cannot find named argument [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0687, "cannot find scope label [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0692, "cannot find struct [[%s]]                                                                              $ ");
    SWAG_ERROR(Err0693, "cannot find struct [[%s]] in [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0691, "cannot find struct member [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0694, "cannot find type [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0699, "cannot find variable [[%s]]                                                                            $ ");
    SWAG_ERROR(Err0700, "cannot find variable [[%s]] in [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0670, "cannot find visit specialization [[%s]] in [[%s]]                                                      $ ");
    SWAG_ERROR(Err0711, "cannot ignore return value of function [[%s]]                                                          $ hint: use [[discard]] to explicitly ignore the return value if intentional");
    SWAG_ERROR(Err0712, "cannot ignore return value of intrinsic [[%s]]                                                         $ ");
    SWAG_ERROR(Err0713, "cannot ignore return value of lambda [[%s]]                                                            $ hint: use [[discard]] to explicitly ignore the return value if intentional");
    SWAG_ERROR(Err0708, "cannot infer a variable type from a [[null]] expression                                                $ ");
    SWAG_ERROR(Err0703, "cannot infer array length                                                                              $ note: missing initialization");
    SWAG_ERROR(Err0780, "cannot infer generic type: embedded tuples too complex                                                 $ ");
    SWAG_ERROR(Err0209, "cannot initialize [[%s]] with a special literal                                                        $ note: [[%s]] does not implement [[opAffectLiteral]]");
    SWAG_ERROR(Err0747, "cannot initialize a value with [[void]] expression                                                     $ ");
    SWAG_ERROR(Err0201, "cannot initialize constant array type [[%s]] with a single value                                       $ note: only variables can be initialized this way");
    SWAG_ERROR(Err0428, "cannot initialize struct member with function pointer                                                  $ ");
    SWAG_ERROR(Err0501, "cannot inline [[%s]]: expansion exceeds the configuration limit                                        $ note: [[--limit-inline:%d]]");
    SWAG_ERROR(Err0080, "cannot instantiate generic struct with partial type alias ([[%s]])                                     $ ");
    SWAG_ERROR(Err0296, "cannot make %s [[%s]] public: %s [[%s]] has [[%s]] access                                              $ ");
    SWAG_ERROR(Err0297, "cannot make [[%s]] internal: struct declared [[public]]                                                $ ");
    SWAG_ERROR(Err0298, "cannot make [[%s]] public: struct declared [[internal]]                                                $ ");
    SWAG_ERROR(Err0498, "cannot make a callback of function [[%s]]                                                              $ note: function [[%s]] has too many parameters, maximum is [[%d]], found [[%d]]");
    SWAG_ERROR(Err0639, "cannot mark generic function [[%s]] with [[#[Swag.NotGeneric]]]                                        $ ");
    SWAG_ERROR(Err0091, "cannot modify [[%s]]: immutable                                                                        $ ");
    SWAG_ERROR(Err0092, "cannot modify global [[%s]]: zero-initialized and immutable at compile-time                            $ ");
    SWAG_ERROR(Err0125, "cannot move [[%d]] scopes upward                                                                       $ ");
    SWAG_ERROR(Err0216, "cannot negate type [[%s]]                                                                              $ ");
    SWAG_ERROR(Err0217, "cannot negate unsigned type [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0729, "cannot open [[#include]] file [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0730, "cannot open file [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0731, "cannot open file [[%s]]                                                                                $ ");
    SWAG_ERROR(Err0732, "cannot open file [[%s]] for writing                                                                    $ ");
    SWAG_ERROR(Err0156, "cannot pass [[null]] as first argument to [[@mkany]]                                                   $ ");
    SWAG_ERROR(Err0483, "cannot pass a parameter of type [[cvarargs]] to another function                                       $ ");
    SWAG_ERROR(Err0008, "cannot place [[%s]] after [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0360, "cannot precede [[%s]] with [[%s]]                                                                      $ ");
    SWAG_ERROR(Err0762, "cannot process %s: size exceeds [[0x%I64x]] bytes                                                      $ ");
    SWAG_ERROR(Err0733, "cannot read source file [[%s]]                                                                         $ ");
    SWAG_ERROR(Err0761, "cannot recurse further: call level limit [[--limit-recurse-bc:%d]] exceeded                            $ ");
    SWAG_ERROR(Err0744, "cannot reference current file scope                                                                    $ ");
    SWAG_ERROR(Err0235, "cannot slice a multi-dimensional array                                                                 $ ");
    SWAG_ERROR(Err0636, "cannot specify generic arguments after %s                                                              $ ");
    SWAG_ERROR(Err0637, "cannot specify generic arguments after name                                                            $ ");
    SWAG_ERROR(Err0638, "cannot specify generic arguments after variable [[%s]]                                                 $ ");
    SWAG_ERROR(Err0144, "cannot take address of [[%s]]: returns no value                                                        $ ");
    SWAG_ERROR(Err0145, "cannot take address: %s has no address                                                                 $ note: only variables have addresses");
    SWAG_ERROR(Err0152, "cannot take address: [[let]] variable has no address                                                   $ hint: use [[var]] for a mutable variable");
    SWAG_ERROR(Err0147, "cannot take address: constant type [[%s]] has no address                                               $ note: this constant type has no storage");
    SWAG_ERROR(Err0149, "cannot take address: function returning [[%s]] has no address                                          $ ");
    SWAG_ERROR(Err0153, "cannot take address: inline function has no address                                                    $ ");
    SWAG_ERROR(Err0150, "cannot take address: macro has no address                                                              $ ");
    SWAG_ERROR(Err0151, "cannot take address: mixin has no address                                                              $ ");
    SWAG_ERROR(Err0148, "cannot take address: parameter type [[%s]] has no address                                              $ note: this parameter type has no storage");
    SWAG_ERROR(Err0154, "cannot take address: right-hand expression has no address                                              $ ");
    SWAG_ERROR(Err0146, "cannot take address: string literal character has no address                                           $ note: string literals have no storage");
    SWAG_ERROR(Err0250, "cannot unpack tuple: contains no elements                                                              $ ");
    SWAG_ERROR(Err0701, "cannot unpack%s[[%u]] variables because right tuple has%s[[%u]] fields                                 $ ");
    SWAG_ERROR(Err0485, "cannot use %s [[%s]] as a value                                                                        $ ");
    SWAG_ERROR(Err0123, "cannot use [[#up]] count of zero                                                                       $ ");
    SWAG_ERROR(Err0583, "cannot use [[%s]] as enum base type                                                                    $ ");
    SWAG_ERROR(Err0584, "cannot use [[%s]] as enum base type                                                                    $ note: enum has the [[#[Swag.EnumFlags]]] attribute, so only unsigned integer types are allowed");
    SWAG_ERROR(Err0585, "cannot use [[%s]] as enum base type                                                                    $ note: enum has the [[#[Swag.EnumIndex]]] attribute, so only integer types are allowed");
    SWAG_ERROR(Err0586, "cannot use [[%s]] as enum base type                                                                    $ note: enum has the [[#[Swag.NoDuplicate]]] attribute, so only basic types are allowed");
    SWAG_ERROR(Err0709, "cannot use [[%s]] in a union: contains [[%s]]                                                          $ ");
    SWAG_ERROR(Err0396, "cannot use [[%s]] on non-throwing function [[%s]]                                                      $ note: function [[%s]] is not marked with [[throw]] and cannot raise errors");
    SWAG_ERROR(Err0269, "cannot use [[me]] as a variable name                                                                   $ ");
    SWAG_ERROR(Err0589, "cannot use array type [[%s]] for enum                                                                  $ note: enum array type must be constant $ hint: declare it as [[const %s]]");
    SWAG_ERROR(Err0642, "cannot use generic parameters in interface functions                                                   $ note: interface functions must have fully specified, non-generic signatures");
    SWAG_ERROR(Err0127, "cannot use next block statement as [[code]] argument                                                   $ note: %s [[%s]] expects the following statement as a [[code]] argument, which is not allowed in [[%s]]");
    SWAG_ERROR(Err0648, "cannot use parameter name in lambda type declaration                                                   $ note: lambda type declarations only specify parameter types, not names $ hint: remove the parameter name");
    SWAG_ERROR(Err0590, "cannot use slice type [[%s]] for enum                                                                  $ note: enum slice type must be constant $ hint: declare it as [[const %s]]");
    SWAG_ERROR(Err0413, "cannot use variadic parameters in inline functions                                                     $ ");
    SWAG_ERROR(Err0161, "cannot use zero array dimension                                                                        $ ");
    SWAG_ERROR(Err0131, "cannot visit a variadic type by pointer                                                                $ ");
    SWAG_ERROR(Err0132, "cannot visit an enum type by pointer                                                                   $ ");
    SWAG_ERROR(Err0133, "cannot visit pointer type [[%s]]                                                                       $ ");
    SWAG_ERROR(Err0135, "cannot visit tuple type                                                                                $ ");
    SWAG_ERROR(Err0136, "cannot visit type [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0669, "cannot visit type [[%s]]                                                                               $ note: missing [[opVisit]] implementation");
    SWAG_ERROR(Err0734, "cannot write file [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0018, "duplicate %s [[%s]] definition                                                                         $ ");
    SWAG_ERROR(Err0004, "duplicate %s [[%s]] definition %s                                                                      $ ");
    SWAG_ERROR(Err0005, "duplicate [[#global export]] directives in the same file                                               $ ");
    SWAG_ERROR(Err0714, "duplicate [[#import]] location definition                                                              $ ");
    SWAG_ERROR(Err0716, "duplicate [[#import]] version definition                                                               $ ");
    SWAG_ERROR(Err0006, "duplicate [[#main]] function in this module                                                            $ ");
    SWAG_ERROR(Err0058, "duplicate [[%s]] arguments detected                                                                    $ ");
    SWAG_ERROR(Err0057, "duplicate [[%s]] modifiers detected                                                                    $ ");
    SWAG_ERROR(Err0013, "duplicate [[case]] value [[%d]]                                                                        $ ");
    SWAG_ERROR(Err0014, "duplicate [[case]] value [[%f]]                                                                        $ ");
    SWAG_ERROR(Err0015, "duplicate [[case]] value [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0016, "duplicate [[case]] value [[\"%s\"]]                                                                    $ ");
    SWAG_ERROR(Err0007, "duplicate [[default]] clauses in the same [[switch]] statement                                         $ ");
    SWAG_ERROR(Err0017, "duplicate [[null]] case                                                                                $ ");
    SWAG_ERROR(Err0055, "duplicate application of [[%s]]; [[Swag.AttrMulti]] not specified                                      $ ");
    SWAG_ERROR(Err0635, "duplicate definition of function [[%s]]                                                                $ hint: mark all overloads with [[#[Swag.Overload]]]");
    SWAG_ERROR(Err0009, "duplicate enum [[%s]] definition                                                                       $ ");
    SWAG_ERROR(Err0011, "duplicate field [[%s]] definition                                                                      $ ");
    SWAG_ERROR(Err0012, "duplicate generic symbol [[%s]] definition                                                             $ ");
    SWAG_ERROR(Err0715, "duplicate module [[%s]] location definition                                                            $ note: already defined as [[%s]]");
    SWAG_ERROR(Err0717, "duplicate module [[%s]] version definition                                                             $ note: already defined as [[%s]]");
    SWAG_ERROR(Err0059, "duplicate operator [['%s']] definition                                                                 $ ");
    SWAG_ERROR(Err0718, "execution failed at runtime                                                                            $ ");
    SWAG_ERROR(Err0764, "failed to create process [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0765, "failed to create process [[%s]] (::CreatePipe)                                                         $ ");
    SWAG_ERROR(Err0783, "failed to evaluate [[#nameof]] argument                                                                $ ");
    SWAG_ERROR(Err0784, "failed to evaluate [[#stringof]] argument                                                              $ ");
    SWAG_ERROR(Err0724, "failed to fetch file [[%s]] for module [[%s]]                                                          $ ");
    SWAG_ERROR(Err0779, "failed to load module [[%s]] for foreign function [[%s]]                                               $ ");
    SWAG_ERROR(Err0353, "failed to patch icon in [[%s]] : %s                                                                    $ ");
    SWAG_ERROR(Err0706, "failed to resolve identifier [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0781, "failed to resolve interface for generic type [[%s]]                                                    $ ");
    SWAG_ERROR(Err0707, "failed to resolve semantic reference                                                                   $ ");
    SWAG_ERROR(Err0173, "incompatible [[const]] with move reference [[&&]]                                                      $ hint: remove [[const]] or use [[&]] instead");
    SWAG_ERROR(Err0300, "incompatible [[impl]] parent scope of [[%s]]                                                           $ ");
    SWAG_ERROR(Err0220, "incompatible attributes: [[#[Swag.Opaque]]] with [[#global export]]                                    $ ");
    SWAG_ERROR(Err0171, "incompatible character literal with type [[%s]]                                                        $ ");
    SWAG_ERROR(Err0248, "incompatible comparison: tuple with [[%s]]                                                             $ note: tuples can only be compared with other tuples");
    SWAG_ERROR(Err0775, "incompatible dependency version for module [[%s]]                                                      $ ");
    SWAG_ERROR(Err0588, "incompatible enum type [[%s]]                                                                          $ note: expected [[%s]], found [[%s]]");
    SWAG_ERROR(Err0130, "incompatible expression with [[expect]]                                                                $ note: only [[param != null]] expressions are supported");
    SWAG_ERROR(Err0193, "incompatible generic [[%s]]: deduced as [[%s]], expected [[%s]]                                        $ ");
    SWAG_ERROR(Err0253, "incompatible second parameter type for [[%s]]: expected [[%s]]                                         $ hint: implement or use [[opAssign]] for value copying");
    SWAG_ERROR(Err0526, "incompatible tuple types                                                                               $ ");
    SWAG_ERROR(Err0582, "incompatible type                                                                                      $ note: expected an enum type, found [[%s]]");
    SWAG_ERROR(Err0766, "incompatible type [[%s]] with command-line [[%s]] type [[%s]]                                          $ ");
    SWAG_ERROR(Err0539, "incompatible types for [[@mkany]]                                                                      $ note: first argument has type [[%s]], and should be a pointer to type [[%s]]");
    SWAG_ERROR(Err0459, "incomplete interface implementation for [[%s]] on [[%s]]                                               $ ");
    SWAG_ERROR(Err0475, "inconsistent control paths: not all return a value in %s                                               $ ");
    SWAG_ERROR(Err0603, "inconsistent return type [[%s]]                                                                        $ note: the previous [[return]] has no value");
    SWAG_ERROR(Err0602, "inconsistent return type [[%s]]                                                                        $ note: the previous [[return]] has type [[%s]]");
    SWAG_ERROR(Err0500, "index out of range                                                                                     $ note: index [[%I64u]] exceeds the maximum value of [[%I64u]]");
    SWAG_ERROR(Err0119, "invalid $$TKN$$ inside [[#inject]] replacement block                                                   $ note: [[#inject]] only accepts [[break]] or [[continue]] as valid keywords");
    SWAG_ERROR(Err0266, "invalid Unicode code point [[0x%x]]                                                                    $ ");
    SWAG_ERROR(Err0155, "invalid [[#[Swag.Align]]] value: not a power of two; found [[%d]]                                      $ ");
    SWAG_ERROR(Err0364, "invalid [[#[Swag.CalleeReturn]]] on %s                                                                 $ ");
    SWAG_ERROR(Err0365, "invalid [[#[Swag.CalleeReturn]]] on [[%s]]                                                             $ note: requires [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] attribute");
    SWAG_ERROR(Err0367, "invalid [[#[Swag.Complete]]] on [[%s]]                                                                 $ note: only valid on [[opAffect]] or [[opAffectLiteral]]");
    SWAG_ERROR(Err0366, "invalid [[#[Swag.Complete]]] without [[switch]] expression                                             $ ");
    SWAG_ERROR(Err0368, "invalid [[#[Swag.Discardable]]] on [[%s]]                                                              $ note: only valid on lambda variables");
    SWAG_ERROR(Err0212, "invalid [[#[Swag.Foreign]]] module name: [[.]] not allowed                                             $ note: module names cannot contain file extensions");
    SWAG_ERROR(Err0370, "invalid [[#[Swag.Implicit]]] on [[%s]]                                                                 $ note: only valid on [[opAffect]], [[opAffectLiteral]], or [[opCast]]");
    SWAG_ERROR(Err0369, "invalid [[#[Swag.Implicit]]] on generic %s                                                             $ ");
    SWAG_ERROR(Err0371, "invalid [[#[Swag.Inline]]] on %s                                                                       $ ");
    SWAG_ERROR(Err0372, "invalid [[#[Swag.Macro]]] on %s                                                                        $ ");
    SWAG_ERROR(Err0373, "invalid [[#[Swag.Mixin]]] on %s                                                                        $ ");
    SWAG_ERROR(Err0374, "invalid [[#[Swag.NotGeneric]]] on %s                                                                   $ ");
    SWAG_ERROR(Err0375, "invalid [[#[Swag.Offset]]] on interface members                                                        $ ");
    SWAG_ERROR(Err0223, "invalid [[#[Swag.Pack]]] value: found [[%d]] (not 0 or power of two)                                   $ ");
    SWAG_ERROR(Err0267, "invalid [[#alias]] context: allowed only in [[#[Swag.Macro]]] or [[#[Swag.Mixin]]]                     $ ");
    SWAG_ERROR(Err0482, "invalid [[#alias]] sequence in [[%s]]                                                                  $ note: [[#alias%u]] is missing in the sequence");
    SWAG_ERROR(Err0118, "invalid [[#alias]] variable name [[%s]]                                                                $ hint: use [[#alias0]], [[#alias1]], and so on");
    SWAG_ERROR(Err0604, "invalid [[#ast]] expression return type                                                                $ note: expected [[string]], found [[%s]]");
    SWAG_ERROR(Err0410, "invalid [[#code]] type usage                                                                           $ note: [[#code]] is only valid in a [[#[Swag.Macro]]] or [[#[Swag.Mixin]]] function");
    SWAG_ERROR(Err0749, "invalid [[#dependencies]] directive placement                                                          $ note: must be at file level");
    SWAG_ERROR(Err0279, "invalid [[#elif]]: without preceding [[#if]]                                                           $ ");
    SWAG_ERROR(Err0280, "invalid [[#else]]: without preceding [[#if]] or [[#elif]]                                              $ ");
    SWAG_ERROR(Err0158, "invalid [[#gettag]] last argument: must be constant, got [[%s]]                                        $ ");
    SWAG_ERROR(Err0666, "invalid [[#global]] instruction [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0303, "invalid [[#global]] placement                                                                          $ note: must appear at top of file");
    SWAG_ERROR(Err0739, "invalid [[#import]] location format                                                                    $ hint: use [[location=\"mode@accesspath\"]], where mode is [[swag]] or [[disk]]");
    SWAG_ERROR(Err0740, "invalid [[#import]] version format                                                                     $ ");
    SWAG_ERROR(Err0548, "invalid [[#include]] argument type [[%s]]                                                              $ note: [[#include]] requires a [[string]] argument");
    SWAG_ERROR(Err0034, "invalid [[#include]] filename: not a compile-time constant                                             $ ");
    SWAG_ERROR(Err0549, "invalid [[#inject]] argument type [[%s]]                                                               $ note: [[#inject]] requires a [[code]] argument");
    SWAG_ERROR(Err0538, "invalid [[#message]] argument type [[%s]]                                                              $ note: [[#message]] requires a [[Swag.CompilerMsgMask]] argument");
    SWAG_ERROR(Err0551, "invalid [[#runes]] argument type [[%s]]                                                                $ note: [[#runes]] requires a [[string]] argument");
    SWAG_ERROR(Err0610, "invalid [[#scope]] name                                                                                $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0122, "invalid [[#sizeof]]: applied to generic expression                                                     $ ");
    SWAG_ERROR(Err0268, "invalid [[#uniq]] context: allowed only in [[#[Swag.Mixin]]]                                           $ ");
    SWAG_ERROR(Err0121, "invalid [[#uniq]] variable name [[%s]]                                                                 $ hint: use [[#uniq0]], [[#uniq1]], and so on");
    SWAG_ERROR(Err0611, "invalid [[#up]] argument                                                                               $ note: expected an integer literal, found $$TKN$$");
    SWAG_ERROR(Err0124, "invalid [[#up]] count: must be an untyped integer, got [[%s]]                                          $ ");
    SWAG_ERROR(Err0565, "invalid [[%s]] argument type [[%s]]                                                                    $ note: [[%s]] requires a [[%s]] argument");
    SWAG_ERROR(Err0535, "invalid [[%s]] assignment                                                                              $ note: expects [[%s]], found [[%s]]");
    SWAG_ERROR(Err0673, "invalid [[%s]] compiler instruction                                                                    $ ");
    SWAG_ERROR(Err0563, "invalid [[%s]] count type [[%s]]                                                                       $ note: [[%s]] count must be an integer");
    SWAG_ERROR(Err0406, "invalid [[%s]] declaration                                                                             $ note: [[%s]] cannot be declared outside a corresponding [[impl]] block");
    SWAG_ERROR(Err0580, "invalid [[%s]] first argument                                                                          $ note: [[%s]] requires a mutable pointer, found [[%s]]");
    SWAG_ERROR(Err0579, "invalid [[%s]] first argument                                                                          $ note: [[%s]] requires a mutable type, found [[%s]]");
    SWAG_ERROR(Err0581, "invalid [[%s]] first argument                                                                          $ note: [[%s]] requires a mutable variable, found [[%s]]");
    SWAG_ERROR(Err0556, "invalid [[%s]] first argument type [[%s]]                                                              $ note: [[%s]] requires a block pointer as its first argument");
    SWAG_ERROR(Err0555, "invalid [[%s]] first argument type [[%s]]                                                              $ note: [[%s]] requires a block pointer when the element count exceeds one");
    SWAG_ERROR(Err0557, "invalid [[%s]] first argument type [[%s]]                                                              $ note: [[%s]] requires a pointer as its first argument");
    SWAG_ERROR(Err0376, "invalid [[%s]] in this context                                                                         $ ");
    SWAG_ERROR(Err0377, "invalid [[%s]] inside [[#global]] block                                                                $ note: this requires [[Swag.AttributeUsage.File]]");
    SWAG_ERROR(Err0394, "invalid [[%s]] nested inside [[%s]]                                                                    $ hint: use only one [[try]], [[catch]], or [[assume]] block");
    SWAG_ERROR(Err0378, "invalid [[%s]] on %s                                                                                   $ ");
    SWAG_ERROR(Err0533, "invalid [[%s]] return type [[%s]]                                                                      $ note: [[%s]] requires a [[%s]] return type");
    SWAG_ERROR(Err0617, "invalid [['=']] in expression                                                                          $ hint: use [['==']] for comparison");
    SWAG_ERROR(Err0627, "invalid [['==']]                                                                                       $ hint: use [['=']] for assignment");
    SWAG_ERROR(Err0545, "invalid [[@countof]] argument type [[%s]]                                                              $ ");
    SWAG_ERROR(Err0562, "invalid [[@countof]] argument type [[%s]]                                                              $ note: [[@countof]] requires an integer argument");
    SWAG_ERROR(Err0159, "invalid [[@countof]] value: non-positive [[%I64d]]                                                     $ ");
    SWAG_ERROR(Err0160, "invalid [[@countof]] value: non-positive [[%d]]                                                        $ ");
    SWAG_ERROR(Err0540, "invalid [[@cvastart]] argument type [[%s]]                                                             $ note: [[@cvastart]] requires a [[%s]] argument");
    SWAG_ERROR(Err0547, "invalid [[@dataof]] argument type [[%s]]                                                               $ ");
    SWAG_ERROR(Err0318, "invalid [[@kindof]] target type [[%s]]                                                                 $ note: [[@kindof]] is only allowed on [[any]] or interface types");
    SWAG_ERROR(Err0552, "invalid [[@mkany]] second argument type [[%s]]                                                         $ note: [[@mkany]] requires a [[typeinfo]] as its second argument");
    SWAG_ERROR(Err0560, "invalid [[@mkcallback]] argument type [[%s]]                                                           $ note: [[@mkcallback]] requires a function pointer argument");
    SWAG_ERROR(Err0558, "invalid [[@mkinterface]] first argument type [[%s]]                                                    $ note: [[@mkinterface]] requires a pointer or a struct as its first argument");
    SWAG_ERROR(Err0553, "invalid [[@mkinterface]] second argument type [[%s]]                                                   $ note: [[@mkinterface]] requires a [[typeinfo]] as its second argument");
    SWAG_ERROR(Err0564, "invalid [[@mkinterface]] third argument type [[%s]]                                                    $ note: [[@mkinterface]] requires an interface name as its third argument");
    SWAG_ERROR(Err0559, "invalid [[@mkstring]] first argument type [[%s]]                                                       $ note: [[@mkstring]] requires type [[*u8]] as its first argument");
    SWAG_ERROR(Err0083, "invalid [[@postcopy]] on [[%s]]: disallowed by [[#[Swag.NoCopy]]]                                      $ ");
    SWAG_ERROR(Err0380, "invalid [[AttributeUsage.Gen]]                                                                         $ note: [[AttributeUsage.Gen]] requires [[AttributeUsage.Struct]] or [[AttributeUsage.Enum]]");
    SWAG_ERROR(Err0037, "invalid [[case]] expression: not a compile-time constant                                               $ note: a [[switch]] statement marked with the [[#[Swag.Complete]]] attribute requires constant case values");
    SWAG_ERROR(Err0401, "invalid [[case]] match variable                                                                        $ note: a match variable is only valid for an [[interface]] or an [[any]] $ note: switch expression has type [[%s]]");
    SWAG_ERROR(Err0403, "invalid [[case]] range without a [[switch]] expression                                                 $ note: a [[case]] range requires a [[switch]] expression to compare against");
    SWAG_ERROR(Err0324, "invalid [[const]] placement                                                                            $ note: only allowed after [[mtd]], not [[func]]");
    SWAG_ERROR(Err0326, "invalid [[default]]                                                                                    $ note: [[default]] is invalid for a [[switch]] marked as [[#[Swag.Complete]]]");
    SWAG_ERROR(Err0613, "invalid [[discard]] argument                                                                           $ note: found $$TKN$$");
    SWAG_ERROR(Err0128, "invalid [[discard]] on function returning nothing                                                      $ ");
    SWAG_ERROR(Err0316, "invalid [[do]] before [[{]]                                                                            $ hint: use [[do]] or [[{]], not both");
    SWAG_ERROR(Err0283, "invalid [[elif]]: without preceding [[if]]                                                             $ ");
    SWAG_ERROR(Err0284, "invalid [[else]]: without preceding [[if]] or [[elif]]                                                 $ ");
    SWAG_ERROR(Err0327, "invalid [[fallthrough]] in last [[case]]                                                               $ hint: remove it");
    SWAG_ERROR(Err0614, "invalid [[foreach]] specialization                                                                     $ note: [[foreach]] specialization is only valid for [[struct]] visit, found [[%s]]");
    SWAG_ERROR(Err0192, "invalid [[impl]] block generation                                                                      $ note: only allowed in [[#message]] with [[Swag.CompilerMsgMask.AttributeGen]]");
    SWAG_ERROR(Err0662, "invalid [[impl]] block name                                                                            $ note: an [[impl]] block must reference a concrete type, not an alias $ hint: use the original type name instead of the alias");
    SWAG_ERROR(Err0331, "invalid [[impl]] on function outside [[impl for]] block                                                $ ");
    SWAG_ERROR(Err0295, "invalid [[impl]] syntax: targets [[%s]], but [[%s]] is [[%s]]                                          $ ");
    SWAG_ERROR(Err0139, "invalid [[impl]] target: [[%s]] is [[%s]], not an interface                                            $ ");
    SWAG_ERROR(Err0138, "invalid [[impl]] target: [[%s]] is [[%s]], not struct or enum                                          $ ");
    SWAG_ERROR(Err0774, "invalid [[location]] value [[\"%s\"]]                                                                  $ hint: use [[\"swag\"]] or [[\"disk\"]]");
    SWAG_ERROR(Err0387, "invalid [[me]] default value                                                                           $ ");
    SWAG_ERROR(Err0334, "invalid [[moveref]] on compile-time value                                                              $ note: only allowed on pointers or references");
    SWAG_ERROR(Err0335, "invalid [[moveref]] on immutable expression                                                            $ ");
    SWAG_ERROR(Err0336, "invalid [[moveref]] on unsupported type [[%s]]                                                         $ ");
    SWAG_ERROR(Err0337, "invalid [[moveref]] placement: must precede function arguments                                         $ ");
    SWAG_ERROR(Err0084, "invalid [[opDrop]] for [[%s]]: disallowed by [[#[Swag.ConstExpr]]]                                     $ ");
    SWAG_ERROR(Err0085, "invalid [[opPostCopy]] for [[%s]]: disallowed by [[#[Swag.NoCopy]]]                                    $ ");
    SWAG_ERROR(Err0233, "invalid [[opSlice]] return type [[%s]]                                                                 $ note: only [[string]] or [[slice]] return types are supported");
    SWAG_ERROR(Err0382, "invalid [[opVisit]] specialization name [[%s]]                                                         $ note: [[opVisit]] specializations must start with an uppercase letter");
    SWAG_ERROR(Err0140, "invalid [[opVisit]] variant [[%s]]                                                                     $ hint: must use a valid identifier name");
    SWAG_ERROR(Err0541, "invalid [[orelse]] argument type [[%s]]                                                                $ note: [[orelse]] requires a nullable type");
    SWAG_ERROR(Err0231, "invalid [[ref]]: applied to non-pointer or non-reference type [[%s]]                                   $ ");
    SWAG_ERROR(Err0341, "invalid [[return]] after [[=>]]                                                                        $ hint: remove it");
    SWAG_ERROR(Err0346, "invalid [[throw]] in attribute definition                                                              $ note: attributes are not functions; remove it");
    SWAG_ERROR(Err0245, "invalid [[throw]] type [[%s]]                                                                          $ note: only structs or [[@err]] expressions can be thrown");
    SWAG_ERROR(Err0246, "invalid [[throw]]: requires struct or [[@err]] expression                                              $ ");
    SWAG_ERROR(Err0348, "invalid [[using]] at [[%s]] scope                                                                      $ ");
    SWAG_ERROR(Err0351, "invalid [[using]] on interface functions                                                               $ ");
    SWAG_ERROR(Err0349, "invalid [[using]] target type [[%s]]                                                                   $ ");
    SWAG_ERROR(Err0350, "invalid [[using]] target type [[%s]]                                                                   $ note: only valid on a namespace, struct, or enum");
    SWAG_ERROR(Err0347, "invalid [[using]] target type [[%s]]                                                                   $ note: only valid on a pointer to a struct");
    SWAG_ERROR(Err0019, "invalid [[using]]: applied to multiple variables of type [[%s]]                                        $ ");
    SWAG_ERROR(Err0352, "invalid [[var]] in struct declarations                                                                 $ hint: declare as [[fieldName: Type]] instead");
    SWAG_ERROR(Err0354, "invalid [[verify]] on [[%s]]                                                                           $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0355, "invalid [[verify]] on structs                                                                          $ hint: use [[where]] instead");
    SWAG_ERROR(Err0134, "invalid [[visit]] specialization name: $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0550, "invalid [[where]] condition type [[%s]]                                                                $ note: [[where]] requires a boolean expression");
    SWAG_ERROR(Err0357, "invalid [[where]] on [[%s]]                                                                            $ note: unsupported for [[opDrop]], [[opPostCopy]], and [[opPostMove]]");
    SWAG_ERROR(Err0356, "invalid [[where]] without [[switch]] expression                                                        $ ");
    SWAG_ERROR(Err0117, "invalid [[while]] condition: always evaluates to [[true]]                                              $ hint: use [[for { ... }]] for an intentional infinite loop");
    SWAG_ERROR(Err0616, "invalid [[with]] expression                                                                            $ ");
    SWAG_ERROR(Err0381, "invalid [[{]] after [[try]], [[assume]], or [[catch]]                                                  $ ");
    SWAG_ERROR(Err0142, "invalid access: compile-time %s [[%s]] accessed from runtime %s                                        $ ");
    SWAG_ERROR(Err0143, "invalid access: compile-time %s accessed from runtime %s                                               $ ");
    SWAG_ERROR(Err0619, "invalid alias name                                                                                     $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0361, "invalid alias name on %s                                                                               $ ");
    SWAG_ERROR(Err0618, "invalid alias target                                                                                   $ note: expected an identifier or a type, found $$TKN$$");
    SWAG_ERROR(Err0035, "invalid argument [[%s]]: not a compile-time constant                                                   $ ");
    SWAG_ERROR(Err0195, "invalid argument for [[%s]]: expects literal but received type [[%s]]                                  $ ");
    SWAG_ERROR(Err0622, "invalid argument name before [[:]]                                                                     $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0567, "invalid array dimension type [[%s]]                                                                    $ note: array dimension must be an integer");
    SWAG_ERROR(Err0038, "invalid array dimension: not a compile-time constant                                                   $ ");
    SWAG_ERROR(Err0568, "invalid array index type [[%s]]                                                                        $ note: array index must be an integer");
    SWAG_ERROR(Err0570, "invalid assignment of function pointer to constant                                                     $ ");
    SWAG_ERROR(Err0737, "invalid assignment target: left expression is not assignable                                           $ ");
    SWAG_ERROR(Err0163, "invalid attribute [[%s]]: is %s                                                                        $ ");
    SWAG_ERROR(Err0379, "invalid attribute in this location                                                                     $ ");
    SWAG_ERROR(Err0623, "invalid attribute name                                                                                 $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0256, "invalid attribute parameter type [[%s]]                                                                $ ");
    SWAG_ERROR(Err0039, "invalid attribute parameter: not a compile-time constant                                               $ ");
    SWAG_ERROR(Err0363, "invalid attribute placement: must appear before [[%s]]                                                 $ hint: move the attribute before [[%s]]");
    SWAG_ERROR(Err0625, "invalid binary digit $$TKN$$                                                                           $ note: binary literals may only contain [[0]] or [[1]]");
    SWAG_ERROR(Err0290, "invalid binary literal: exceeds 64-bit range                                                           $ ");
    SWAG_ERROR(Err0164, "invalid bit-cast source type [[%s]]                                                                    $ note: only integer, rune, float, or pointer types are allowed");
    SWAG_ERROR(Err0166, "invalid bit-cast target type [[%s]]                                                                    $ note: only integer, rune, or float types are allowed");
    SWAG_ERROR(Err0594, "invalid bitwise inversion [['~']] for type [[%s]]                                                      $ ");
    SWAG_ERROR(Err0282, "invalid bracket closure: [[[]]] without matching [[[]                                                  $ ");
    SWAG_ERROR(Err0189, "invalid call target [[%s]]: is [[%s]], not callable                                                    $ ");
    SWAG_ERROR(Err0537, "invalid call to [[%s]] with type [[%s]]                                                                $ note: [[%s]] requires type [[%s]] as its first argument");
    SWAG_ERROR(Err0187, "invalid call: [[%s]] invoked with [[{}]] instead of [[()]]                                             $ ");
    SWAG_ERROR(Err0205, "invalid callable variable [[%s]]: is %s                                                                $ ");
    SWAG_ERROR(Err0168, "invalid capture of [[%s]]: is %s                                                                       $ note: capturing %s is not allowed");
    SWAG_ERROR(Err0169, "invalid capture: [[%s]] is not plain old data                                                          $ note: structs with [[opDrop]], [[opPostCopy]], or [[opPostMove]] cannot be captured");
    SWAG_ERROR(Err0626, "invalid character [['%s']]                                                                             $ ");
    SWAG_ERROR(Err0170, "invalid character literal: [['%s']] appears as string, not single character                            $ ");
    SWAG_ERROR(Err0287, "invalid character: [[0x%x]] exceeds [[u16]] range                                                      $ ");
    SWAG_ERROR(Err0288, "invalid character: [[0x%x]] exceeds [[u8]] range                                                       $ ");
    SWAG_ERROR(Err0383, "invalid closure outside a function scope                                                               $ note: closure definitions are allowed only within functions");
    SWAG_ERROR(Err0312, "invalid combination: [[%s]] conflicts with [[%s]]                                                      $ ");
    SWAG_ERROR(Err0572, "invalid comparison for interface type                                                                  $ note: interfaces can only be compared with [[null]], another interface, or [[typeinfo]], found [[%s]]");
    SWAG_ERROR(Err0571, "invalid comparison for slice type                                                                      $ note: slices can only be compared with [[null]], found [[%s]]");
    SWAG_ERROR(Err0573, "invalid comparison for type [[any]]                                                                    $ note: [[any]] can only be compared with [[null]] or [[typeinfo]], found [[%s]]");
    SWAG_ERROR(Err0690, "invalid compiler pass [[%s]]                                                                           $ ");
    SWAG_ERROR(Err0644, "invalid consecutive identifiers                                                                        $ ");
    SWAG_ERROR(Err0254, "invalid const version of [[%s]]                                                                        $ ");
    SWAG_ERROR(Err0078, "invalid constraint: %s [[%s]] violates [[%s]]                                                          $ ");
    SWAG_ERROR(Err0086, "invalid context: [[compileString]] not accessible at this compiler stage                               $ note: meta-programming is not allowed at this compiler stage");
    SWAG_ERROR(Err0661, "invalid declaration: cannot begin with a type                                                          $ note: variable declarations must start with [[var]], [[let]], or [[const]]");
    SWAG_ERROR(Err0087, "invalid direct call to [[opDrop]]                                                                      $ hint: use [[@drop]] instead");
    SWAG_ERROR(Err0088, "invalid direct call to [[opPostCopy]]                                                                  $ hint: use [[@postcopy]] instead");
    SWAG_ERROR(Err0089, "invalid direct call to [[opPostMove]]                                                                  $ hint: use [[@postmove]] instead");
    SWAG_ERROR(Err0054, "invalid division: division by [[-1]] causes overflow                                                   $ ");
    SWAG_ERROR(Err0053, "invalid division: division by zero                                                                     $ ");
    SWAG_ERROR(Err0566, "invalid element type [[void]] for static array                                                         $ ");
    SWAG_ERROR(Err0070, "invalid empty statement [[;]]                                                                          $ hint: use [[{}]] instead to create an empty block");
    SWAG_ERROR(Err0587, "invalid enum base type [[cstring]]                                                                     $ hint: use [[string]] instead");
    SWAG_ERROR(Err0633, "invalid enum name                                                                                      $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0632, "invalid enum value                                                                                     $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0499, "invalid enum value [[%s]] for type [[%s]]                                                              $ ");
    SWAG_ERROR(Err0010, "invalid enum value: [[%s]] has the same underlying value as [[%s]]                                     $ ");
    SWAG_ERROR(Err0071, "invalid error propagation: escapes from [[defer]] or [[defer<err>]] block                              $ ");
    SWAG_ERROR(Err0676, "invalid escape code [['%c']]                                                                           $ ");
    SWAG_ERROR(Err0183, "invalid expression: [[%s]] is statement-only                                                           $ ");
    SWAG_ERROR(Err0040, "invalid expression: not a compile-time constant                                                        $ ");
    SWAG_ERROR(Err0185, "invalid expression: replaced by type                                                                   $ ");
    SWAG_ERROR(Err0510, "invalid field name [[%s]]: reserved by the language                                                    $ note: names beginning with [[item]] are reserved");
    SWAG_ERROR(Err0726, "invalid file encoding                                                                                  $ note: supported encodings are [[ASCII]], [[UTF-8]], or [[UTF-8-BOM]]");
    SWAG_ERROR(Err0480, "invalid first argument of [[%s]]                                                                       $ note: expected %s [[%s]] as the first argument");
    SWAG_ERROR(Err0157, "invalid first argument to [[%s]]: requires [[variable]] when the second [[@init]] argument is omitted   $ ");
    SWAG_ERROR(Err0203, "invalid first parameter [[%s]]; expected [[me]]                                                        $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0262, "invalid first parameter type for [[%s]]: expected [[%s]], got [[%s]]                                   $ ");
    SWAG_ERROR(Err0397, "invalid function declaration placement                                                                 $ note: a function cannot be declared directly inside a [[struct]] $ hint: move the declaration inside an [[impl]] block instead");
    SWAG_ERROR(Err0511, "invalid function name [[%s]]: reserved by the compiler                                                 $ ");
    SWAG_ERROR(Err0745, "invalid function return type [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0194, "invalid generic argument: %s ([[%s]])                                                                  $ hint: generic arguments must be literals or types");
    SWAG_ERROR(Err0400, "invalid generic arguments                                                                              $ note: %s [[%s]] is not generic and cannot be specialized");
    SWAG_ERROR(Err0197, "invalid generic type: type starting with [[:]] not allowed                                             $ ");
    SWAG_ERROR(Err0643, "invalid hexadecimal digit $$TKN$$                                                                      $ note: hexadecimal digits must be [[0-9]], [[A-F]], or [[a-f]]");
    SWAG_ERROR(Err0291, "invalid hexadecimal literal: exceeds 64-bit range                                                      $ ");
    SWAG_ERROR(Err0645, "invalid identifier [[%s]] at file level                                                                $ note: only mixin function calls are allowed at the top level");
    SWAG_ERROR(Err0513, "invalid identifier [[%s]]: uses reserved [[__]] prefix                                                 $ note: the [[__]] prefix is reserved for compiler use");
    SWAG_ERROR(Err0512, "invalid identifier [[_]]: reserved by the compiler                                                     $ ");
    SWAG_ERROR(Err0224, "invalid index operation on [[%s]]: pointer arithmetic disallowed on [[%s]]                             $ ");
    SWAG_ERROR(Err0524, "invalid initialization count for type [[%s]]                                                           $ note: expected [[1]] value, found [[%d]]");
    SWAG_ERROR(Err0042, "invalid initialization: not a compile-time constant                                                    $ ");
    SWAG_ERROR(Err0043, "invalid initialization: not a compile-time constant                                                    $ hint: add the [[#[Swag.ConstExpr]]] attribute to [[opAffect]] to allow this");
    SWAG_ERROR(Err0592, "invalid input: expected [[%s]], found [[%s]]                                                           $ ");
    SWAG_ERROR(Err0647, "invalid instruction modifier [[%s]] for [[%s]]                                                         $ ");
    SWAG_ERROR(Err0686, "invalid intrinsic [[%s]]                                                                               $ ");
    SWAG_ERROR(Err0388, "invalid lambda parameters default values                                                               $ note: the parameters of a lambda cannot have default values");
    SWAG_ERROR(Err0208, "invalid literal suffix [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0207, "invalid literal suffix [[%s]] for float literals                                                       $ note: only [[f32]] and [[f64]] suffixes are allowed");
    SWAG_ERROR(Err0242, "invalid literal suffix [[%s]] for this literal                                                         $ note: suffixes are only valid for struct conversions");
    SWAG_ERROR(Err0206, "invalid literal suffix for [[%s]]: [[%s]]                                                              $ note: suffix must correspond to a valid type");
    SWAG_ERROR(Err0210, "invalid logical operator: expected [[%s]] but found [[%s]]                                             $ ");
    SWAG_ERROR(Err0332, "invalid match variable: used with multiple [[case]] values                                             $ hint: each [[case]] must have exactly one value");
    SWAG_ERROR(Err0333, "invalid match variable: used without [[switch]] expression                                             $ ");
    SWAG_ERROR(Err0190, "invalid member in interface: [[%s]]; requires [[func]] or [[mtd]]                                      $ hint: declare interface functions with [[func]] or [[mtd]]");
    SWAG_ERROR(Err0036, "invalid message [[%s]]: not a compile-time constant                                                    $ ");
    SWAG_ERROR(Err0402, "invalid move reference                                                                                 $ note: a move reference [[&&]] is only valid for function parameters");
    SWAG_ERROR(Err0514, "invalid namespace name [[%s]]: reserved                                                                $ ");
    SWAG_ERROR(Err0293, "invalid negation: [[%I64d]] exceeds [[s64]]; [[%I64u]] too large                                       $ ");
    SWAG_ERROR(Err0294, "invalid negation: [[%d]] exceeds [[%s]] range; [[%u]] too large                                        $ ");
    SWAG_ERROR(Err0649, "invalid number of [[foreach]] alias names                                                              $ note: [[foreach]] allows a maximum of [[2]] alias names, got [[%u]]  $ note: valid forms are [[foreach value in expr]] or [[foreach value, index in expr]]");
    SWAG_ERROR(Err0650, "invalid number prefix [[0]]$$TKN$$                                                                     $ note: valid numeric prefixes are [[0x]] for hexadecimal or [[0b]] for binary");
    SWAG_ERROR(Err0389, "invalid numeric literal syntax                                                                         $ note: a [['_']] cannot end the number");
    SWAG_ERROR(Err0392, "invalid numeric literal syntax                                                                         $ note: consecutive [['__']] are not permitted in numeric literals $ hint: remove extra underscores or use a single [[_]] for digit grouping");
    SWAG_ERROR(Err0390, "invalid numeric literal syntax                                                                         $ note: the exponent part cannot start with [['_']]");
    SWAG_ERROR(Err0391, "invalid numeric literal syntax                                                                         $ note: the fractional part cannot start with [['_']]");
    SWAG_ERROR(Err0292, "invalid numeric literal: exceeds 64-bit range                                                          $ ");
    SWAG_ERROR(Err0222, "invalid operation [['%s']] on [[null]] value                                                           $ ");
    SWAG_ERROR(Err0767, "invalid operation [['%s']]: left enum [[%s]] not marked [[#[Swag.EnumFlags]]]                          $ hint: add the [[#[Swag.EnumFlags]]] attribute to the left enum");
    SWAG_ERROR(Err0768, "invalid operation [['%s']]: right enum [[%s]] not marked [[#[Swag.EnumFlags]]]                         $ hint: add the [[#[Swag.EnumFlags]]] attribute to the right enum");
    SWAG_ERROR(Err0044, "invalid operation on [[%s]]: not a compile-time constant                                               $ hint: add the [[#[Swag.ConstExpr]]] attribute to the struct to allow this");
    SWAG_ERROR(Err0241, "invalid operator [['%s']] for [[%s]] in [[%s]]                                                         $ ");
    SWAG_ERROR(Err0597, "invalid operator [['%s']] for left operand type [[%s]]                                                 $ ");
    SWAG_ERROR(Err0598, "invalid operator [['%s']] for right operand type [[%s]]                                                $ ");
    SWAG_ERROR(Err0599, "invalid operator [['%s']] for tuple types                                                              $ ");
    SWAG_ERROR(Err0596, "invalid operator [['%s']] for type [[%s]]                                                              $ ");
    SWAG_ERROR(Err0041, "invalid parameter [[%s]] of type [[%s]]: not a compile-time constant                                   $ ");
    SWAG_ERROR(Err0258, "invalid parameter for [[%s]]: requires [[bool]], got [[%s]]                                            $ ");
    SWAG_ERROR(Err0259, "invalid parameter for [[%s]]: requires [[string]], got [[%s]]                                          $ ");
    SWAG_ERROR(Err0651, "invalid parameter name                                                                                 $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0225, "invalid pointer arithmetic                                                                             $ ");
    SWAG_ERROR(Err0226, "invalid pointer arithmetic on [[void*]]                                                                $ note: [[void]] has no size");
    SWAG_ERROR(Err0227, "invalid pointer arithmetic: requires integer, got [[%s]]                                               $ ");
    SWAG_ERROR(Err0228, "invalid pointer slicing: type not supported                                                            $ ");
    SWAG_ERROR(Err0503, "invalid range expression                                                                               $ note: the lower bound [[%I64u]] exceeds the upper bound [[%I64u]]");
    SWAG_ERROR(Err0504, "invalid range expression                                                                               $ note: the upper bound of an [[until]] range must be greater than zero");
    SWAG_ERROR(Err0230, "invalid range type [[%s]]                                                                              $ note: only integer, rune, or float types can form ranges");
    SWAG_ERROR(Err0229, "invalid range: lower bound [[%lld]] exceeds upper bound [[%lld]]                                       $ hint: use [[#reverse]] for descending ranges");
    SWAG_ERROR(Err0532, "invalid range: mixes signed and unsigned bounds                                                        $ note: both range bounds must use the same sign");
    SWAG_ERROR(Err0072, "invalid reference: %s [[%s]] resides in a different stack frame                                        $ ");
    SWAG_ERROR(Err0655, "invalid return type                                                                                    $ hint: missing [[->]] before $$TKN$$");
    SWAG_ERROR(Err0656, "invalid return type                                                                                    $ note: expected [[->]] but found $$TKN$$");
    SWAG_ERROR(Err0657, "invalid return type [[%s]]                                                                             $ note: function has no declared return type");
    SWAG_ERROR(Err0658, "invalid return type [[%s]] for function [[%s]]                                                         $ note: function has no declared return type");
    SWAG_ERROR(Err0624, "invalid return type [[->]] in attribute definition                                                     $ note: attributes are not functions; remove the return type");
    SWAG_ERROR(Err0232, "invalid return type [[void]]: a value is required                                                      $ hint: remove the return type if the function returns nothing");
    SWAG_ERROR(Err0473, "invalid return type: already inferred as [[%s]]                                                        $ ");
    SWAG_ERROR(Err0646, "invalid scope before intrinsic                                                                         $ note: intrinsics are defined in the top-level scope");
    SWAG_ERROR(Err0612, "invalid scope name                                                                                     $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0515, "invalid semantic dependency cycle during %s [[%s]] evaluation                                          $ ");
    SWAG_ERROR(Err0595, "invalid shift operator [['%s']] for type [[%s]]                                                        $ note: operator [[%s]] requires an integer operand");
    SWAG_ERROR(Err0681, "invalid shorthand to [[%s]]                                                                            $ note: cannot find a corresponding [[enum]], [[with]], or [[mtd]] context");
    SWAG_ERROR(Err0299, "invalid signature in [[%s.%s]]                                                                         $ ");
    SWAG_ERROR(Err0534, "invalid slice bound type [[%s]]                                                                        $ note: slice bounds must be of integer type");
    SWAG_ERROR(Err0236, "invalid slicing: type [[%s]] does not support slicing                                                  $ ");
    SWAG_ERROR(Err0398, "invalid specialization: type required but value provided                                               $ ");
    SWAG_ERROR(Err0399, "invalid specialization: value required but type provided                                               $ ");
    SWAG_ERROR(Err0630, "invalid statement                                                                                      $ note: $$TKN$$ cannot appear at the start of an instruction");
    SWAG_ERROR(Err0615, "invalid statement inside [[switch]]                                                                    $ note: a [[switch]] body may only contain a [[case]] or a [[default]] section, found $$TKN$$");
    SWAG_ERROR(Err0056, "invalid struct initialization: both type syntax and assignment                                         $ ");
    SWAG_ERROR(Err0237, "invalid struct initialization: used [[()]] instead of [[{}]]                                           $ hint: use [[{}]] for struct initialization; [[()]] is for function calls");
    SWAG_ERROR(Err0542, "invalid switch expression type [[%s]]                                                                  $ ");
    SWAG_ERROR(Err0659, "invalid symbol [['%s']] after %s                                                                       $ ");
    SWAG_ERROR(Err0244, "invalid symbol [['%s']] detected                                                                       $ ");
    SWAG_ERROR(Err0466, "invalid syntax after parameter declaration                                                             $ note: expected an assignment or [[:]], found $$TKN$$");
    SWAG_ERROR(Err0479, "invalid syntax after variable declaration                                                              $ note: expected an assignment or [[:]], found $$TKN$$");
    SWAG_ERROR(Err0073, "invalid syntax: unexpected $$TKN$$, expected [[%s]]                                                    $ ");
    SWAG_ERROR(Err0265, "invalid token $$TKN$$ after array dimensions                                                           $ ");
    SWAG_ERROR(Err0407, "invalid top-level [[using]]                                                                            $ note: a top-level [[using]] must not appear after other declarations");
    SWAG_ERROR(Err0310, "invalid top-level call [[%s]]: not marked [[#[Swag.Mixin]]]                                            $ hint: only mixin calls are allowed at the top level");
    SWAG_ERROR(Err0247, "invalid top-level instruction: token $$TKN$$                                                           $ ");
    SWAG_ERROR(Err0593, "invalid tuple type as generic parameter                                                                $ ");
    SWAG_ERROR(Err0408, "invalid tuple unpacking in %s scope                                                                    $ ");
    SWAG_ERROR(Err0257, "invalid type [[%s]] for [[@cvaarg]]                                                                    $ ");
    SWAG_ERROR(Err0263, "invalid type [[%s]]: is %s                                                                             $ ");
    SWAG_ERROR(Err0663, "invalid type declaration after [[me]]                                                                  $ note: [[me]] is implicitly typed");
    SWAG_ERROR(Err0664, "invalid type declaration after unnamed parameter                                                       $ note: unnamed parameters ([['?']]) cannot have an explicit type $ hint: give the parameter a name or remove the type annotation");
    SWAG_ERROR(Err0264, "invalid type declaration: token $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0478, "invalid type expression after [[#type]]                                                                $ note: expected a type, found $$TKN$$");
    SWAG_ERROR(Err0665, "invalid type suffix %s                                                                                 $ note: type suffixes are allowed only on [[integer]], [[float]], or [[character]] literals");
    SWAG_ERROR(Err0251, "invalid unpacking: type [[%s]] does not support unpacking                                              $ note: only struct or tuple types can be unpacked");
    SWAG_ERROR(Err0516, "invalid unused expression                                                                              $ ");
    SWAG_ERROR(Err0384, "invalid use of [[#callerfunction]] outside a parameter list                                            $ note: this can only be used as a default function parameter value");
    SWAG_ERROR(Err0385, "invalid use of [[#callerlocation]] outside a parameter list                                            $ note: this can only be used as a default function parameter value");
    SWAG_ERROR(Err0301, "invalid use of [[#dependencies]]                                                                       $ note: can only be used in [[module.swg]] or in a [[.swgs]] file");
    SWAG_ERROR(Err0750, "invalid use of [[#global testerror]] outside test files ([[./tests]] folder)                           $ ");
    SWAG_ERROR(Err0751, "invalid use of [[#global testwarning]] outside test files ([[./tests]] folder)                         $ ");
    SWAG_ERROR(Err0302, "invalid use of [[#global using]]                                                                       $ note: can only be used in [[module.swg]] or in a [[.swgs]] file");
    SWAG_ERROR(Err0304, "invalid use of [[#import]]                                                                             $ note: can only be used in [[module.swg]] or in a [[.swgs]] file");
    SWAG_ERROR(Err0752, "invalid use of [[#import]] outside a [[#dependencies]] block                                           $ ");
    SWAG_ERROR(Err0306, "invalid use of [[#inject]] outside loop blocks                                                         $ ");
    SWAG_ERROR(Err0307, "invalid use of [[#load]]                                                                               $ note: can only be used in [[module.swg]] or in a [[.swgs]] file");
    SWAG_ERROR(Err0753, "invalid use of [[#load]] outside a [[#dependencies]] block                                             $ ");
    SWAG_ERROR(Err0308, "invalid use of [[#macro]] outside [[#[Swag.Macro]]] functions                                          $ ");
    SWAG_ERROR(Err0754, "invalid use of [[#test]] outside test modules ([[./tests]] folder)                                     $ ");
    SWAG_ERROR(Err0311, "invalid use of [[#up]] outside [[#[Swag.Macro]]] functions                                             $ ");
    SWAG_ERROR(Err0315, "invalid use of [[%s]]                                                                                  $ note: function [[%s]] is not marked with [[throw]]");
    SWAG_ERROR(Err0314, "invalid use of [[%s]] in struct special function [[%s]]                                                $ ");
    SWAG_ERROR(Err0393, "invalid use of [[%s]] on %s [[%s]]                                                                     $ ");
    SWAG_ERROR(Err0359, "invalid use of [[%s]] outside global scope                                                             $ ");
    SWAG_ERROR(Err0786, "invalid use of [[%s]] with arguments                                                                   $ hint: [[%s]] is a value, not a function call, remove the parentheses");
    SWAG_ERROR(Err0317, "invalid use of [[@cvastart]] in function without [[cvarargs]] parameter                                $ ");
    SWAG_ERROR(Err0305, "invalid use of [[@index]] outside loop blocks                                                          $ ");
    SWAG_ERROR(Err0321, "invalid use of [[alias]] on struct members                                                             $ ");
    SWAG_ERROR(Err0322, "invalid use of [[break]] outside loop blocks                                                           $ ");
    SWAG_ERROR(Err0325, "invalid use of [[continue]] outside loop blocks                                                        $ ");
    SWAG_ERROR(Err0328, "invalid use of [[fallthrough]] outside [[case]] blocks                                                 $ ");
    SWAG_ERROR(Err0329, "invalid use of [[fallthrough]] outside [[switch]] statement                                            $ ");
    SWAG_ERROR(Err0330, "invalid use of [[for]] in [[enum]] implementation                                                      $ ");
    SWAG_ERROR(Err0345, "invalid use of [[me]] outside enum or struct [[impl]] blocks                                           $ ");
    SWAG_ERROR(Err0338, "invalid use of [[mtd]] outside struct [[impl]] blocks                                                  $ hint: use [[func]] instead");
    SWAG_ERROR(Err0340, "invalid use of [[mtd]] outside struct [[impl]] blocks                                                  $ hint: use [[func]] instead");
    SWAG_ERROR(Err0344, "invalid use of [[retval]] for return type                                                              $ ");
    SWAG_ERROR(Err0342, "invalid use of [[retval]] in function without return value                                             $ ");
    SWAG_ERROR(Err0343, "invalid use of [[retval]] outside function body                                                        $ ");
    SWAG_ERROR(Err0395, "invalid use of [[try]] outside a function, macro, or mixin                                             $ note: [[try]] can only appear inside executable code blocks");
    SWAG_ERROR(Err0543, "invalid use of [[with]] on enum variable [[%s]]                                                        $ note: [[with]] applies to enum types, not enum variables");
    SWAG_ERROR(Err0544, "invalid use of [[with]] on type [[%s]]                                                                 $ note: [[with]] applies only to namespaces, enums, structs, or struct pointers");
    SWAG_ERROR(Err0289, "invalid value: [[%I64u]] does not fit in [[%s]]                                                        $ ");
    SWAG_ERROR(Err0620, "invalid variable alias name                                                                            $ note: expected an identifier, found $$TKN$$");
    SWAG_ERROR(Err0621, "invalid variable aliasing for [[%s]]                                                                   $ note: variable aliasing is only allowed for macros or mixins");
    SWAG_ERROR(Err0660, "invalid variable name ($$TKN$$)                                                                        $ note: tuple unpacking requires valid identifiers or [[?]] $ hint: replace with a variable name or [[?]] if the value should be ignored");
    SWAG_ERROR(Err0748, "invalid variable name [[%s]]: starts with [[#]]                                                        $ hint: only [[#uniq]] and [[#alias]] are allowed");
    SWAG_ERROR(Err0274, "invalid variable type [[void]]                                                                         $ ");
    SWAG_ERROR(Err0411, "invalid variadic argument position                                                                     $ note: a variadic argument must be the last one");
    SWAG_ERROR(Err0629, "invalid variadic parameter default value                                                               $ note: variadic parameters cannot have a default value");
    SWAG_ERROR(Err0412, "invalid variadic parameter position                                                                    $ note: a variadic parameter must be the last one");
    SWAG_ERROR(Err0508, "invalid visibility specifier [[%s]]: conflicts with [[#global export]]                                 $ hint: remove [[public]] since [[#global export]] already makes all declarations public");
    SWAG_ERROR(Err0458, "missing %s [[%s]] initialization                                                                       $ note: [[%s]] has no zero value, so a value must be explicitly specified");
    SWAG_ERROR(Err0211, "missing [[#[Swag.Foreign]]] module name                                                                $ ");
    SWAG_ERROR(Err0440, "missing [[#[Swag.Macro]]] attribute on [[opVisit]]                                                     $ note: [[opVisit]] functions must be declared as macros");
    SWAG_ERROR(Err0414, "missing [[#alias]] trailing number                                                                     $ hint: syntax is [[#alias0]], [[#alias1]], etc.");
    SWAG_ERROR(Err0415, "missing [[#foreignlib]] library name                                                                   $ ");
    SWAG_ERROR(Err0420, "missing [[#uniq]] trailing number                                                                      $ hint: syntax is [[#uniq0]], [[#uniq1]], etc.");
    SWAG_ERROR(Err0460, "missing [[%s]] arguments between [[()]]                                                                $ ");
    SWAG_ERROR(Err0425, "missing [[(]] to start [[%s]] arguments                                                                $ note: found $$TKN$$");
    SWAG_ERROR(Err0426, "missing [[(]] to start parameters                                                                      $ note: found $$TKN$$");
    SWAG_ERROR(Err0098, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0102, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0106, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0108, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0112, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0114, "missing [[,]] or [[')']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0104, "missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0110, "missing [[,]] or [[']']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0100, "missing [[,]] or [[']']] before $$TKN$$                                                                $ hint: add a dimension or close the list with [[']']]");
    SWAG_ERROR(Err0096, "missing [[,]] or [['|']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0111, "missing [[,]] or [['}']] before $$TKN$$                                                                $ ");
    SWAG_ERROR(Err0094, "missing [[,]] or [[:]] before $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0074, "missing [[;]] or default implementation for interface member [[%s]]                                    $ ");
    SWAG_ERROR(Err0419, "missing [[Swag.CompilerMsgMask]] parameter for [[#message]]                                            $ ");
    SWAG_ERROR(Err0429, "missing [[case]] expression before $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0424, "missing [[do]] or [[{]] after [[%s]]                                                                   $ note: the [[%s]] block must start with [[do]] or be enclosed in [['{']] $ hint: add [[do]] or wrap the block in [['{']] and [['}']]");
    SWAG_ERROR(Err0435, "missing [[for]] count before [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0431, "missing [[foreach]] expression before $$TKN$$                                                          $ ");
    SWAG_ERROR(Err0432, "missing [[foreach]] variable after [[,]]                                                               $ note: the syntax is [[foreach value, index]]");
    SWAG_ERROR(Err0418, "missing [[if]] boolean expression before $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0433, "missing [[if]] boolean expression before $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0434, "missing [[impl]] before [[%s]] to mark implementation of [[%s]]                                        $ ");
    SWAG_ERROR(Err0427, "missing [[in]] after [[for]] variable [[%s]]                                                           $ hint: syntax is [[for variable in count]]");
    SWAG_ERROR(Err0454, "missing [[let]] variable initialization                                                                $ ");
    SWAG_ERROR(Err0778, "missing [[location]] for module [[%s]] dependency                                                      $ ");
    SWAG_ERROR(Err0323, "missing [[me]] after [[const]] in parameter                                                            $ note: found $$TKN$$");
    SWAG_ERROR(Err0204, "missing [[me]] as first parameter in interface function [[%s]]                                         $ hint: use [[mtd]] instead of [[func]] for interface methods");
    SWAG_ERROR(Err0667, "missing [[mtd]] lambda capture parameters                                                              $ note: [[mtd]] lambdas require a capture list between [[||]] $ hint: use [[func]] instead of [[mtd]] or declare the capture list between [[||]]");
    SWAG_ERROR(Err0175, "missing [[opIndex]] for [[%s]] in [[%s]]                                                               $ ");
    SWAG_ERROR(Err0234, "missing [[opSlice]] implementation for type [[%s]] in [[%s]]                                           $ ");
    SWAG_ERROR(Err0221, "missing [[public]] access for [[#[Swag.Opaque]]]                                                       $ ");
    SWAG_ERROR(Err0063, "missing [[switch]] body                                                                                $ hint: add one or more [[case]] statements, or remove the [[switch]]");
    SWAG_ERROR(Err0437, "missing [[while]] boolean expression before $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0076, "missing [[{]] to start %s body, found [[;]]                                                            $ ");
    SWAG_ERROR(Err0077, "missing [[{]] to start [[#inject]] block, found $$TKN$$                                                $ ");
    SWAG_ERROR(Err0075, "missing [[{]] to start function body, found $$TKN$$                                                    $ ");
    SWAG_ERROR(Err0445, "missing access index                                                                                   $ note: [[%s]] has type [[%s]]");
    SWAG_ERROR(Err0097, "missing alias name after [[,]] before $$TKN$$                                                          $ hint: add an alias name or remove the trailing [[,]]");
    SWAG_ERROR(Err0107, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add a generic argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0099, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0103, "missing argument after [[,]] before $$TKN$$                                                            $ hint: add an argument or remove the trailing [[,]]");
    SWAG_ERROR(Err0439, "missing arguments between [[()]] for %s [[%s]]                                                         $ ");
    SWAG_ERROR(Err0438, "missing assignment after %s                                                                            $ note: found $$TKN$$");
    SWAG_ERROR(Err0105, "missing attribute after [[,]] before $$TKN$$                                                           $ hint: add an attribute or remove the trailing [[,]]");
    SWAG_ERROR(Err0441, "missing attribute name before [[(]]                                                                    $ ");
    SWAG_ERROR(Err0065, "missing attribute value                                                                                $ hint: specify the attribute name or remove it");
    SWAG_ERROR(Err0188, "missing call arguments for [[%s]] of type [[%s]]                                                       $ ");
    SWAG_ERROR(Err0430, "missing capture variable between [[,]] and [['|']]                                                     $ hint: add a variable or remove the trailing comma");
    SWAG_ERROR(Err0423, "missing closing [[%s]] %s                                                                              $ ");
    SWAG_ERROR(Err0608, "missing closing [['*/']]                                                                               $ ");
    SWAG_ERROR(Err0609, "missing closing [['\"']] before line end                                                               $ hint: use [[\"\"\"string\"\"\"]] for multi-line strings");
    SWAG_ERROR(Err0606, "missing closing [[)]] in attribute arguments                                                           $ ");
    SWAG_ERROR(Err0607, "missing closing quote before line end                                                                  $ ");
    SWAG_ERROR(Err0455, "missing constant initialization                                                                        $ ");
    SWAG_ERROR(Err0174, "missing constant name after [[const]], found $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0061, "missing content in [[case]] statement                                                                  $ ");
    SWAG_ERROR(Err0062, "missing content in [[default]] statement                                                               $ ");
    SWAG_ERROR(Err0444, "missing default value of %s                                                                            $ note: the previous parameter has a default value, so this one must have as well");
    SWAG_ERROR(Err0186, "missing definition for [[%s]]                                                                          $ ");
    SWAG_ERROR(Err0066, "missing digits in binary literal ([[0]] or [[1]])                                                      $ ");
    SWAG_ERROR(Err0069, "missing digits in hexadecimal literal ([[0-9]], [[A-F]], [[a-f]])                                      $ ");
    SWAG_ERROR(Err0101, "missing dimension after [[,]] before $$TKN$$                                                           $ hint: add a dimension or remove the trailing [[,]]");
    SWAG_ERROR(Err0179, "missing dimensions for enum array type [[%s]]                                                          $ ");
    SWAG_ERROR(Err0182, "missing eight hexadecimal digits after [['\\U']]                                                       $ ");
    SWAG_ERROR(Err0064, "missing elements in array literal                                                                      $ ");
    SWAG_ERROR(Err0631, "missing embedded instruction after [[%s]]                                                              $ ");
    SWAG_ERROR(Err0448, "missing enum name before [[':']]                                                                       $ ");
    SWAG_ERROR(Err0447, "missing enum name before [['{']]                                                                       $ ");
    SWAG_ERROR(Err0457, "missing enum value [[%s]] initialization                                                               $ note: an enum value of type [[%s]] must be explicitly initialized");
    SWAG_ERROR(Err0442, "missing error handling                                                                                 $ note: the function [[%s]] is marked with [[throw]] and may raise errors that must be handled $ hint: add [[try]], [[catch]], or [[assume]] to handle it");
    SWAG_ERROR(Err0416, "missing error string after [[#global testerror]]                                                       $ note: found $$TKN$$");
    SWAG_ERROR(Err0184, "missing expression after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0095, "missing expression after [[,]] before $$TKN$$                                                          $ hint: add a case expression or remove the trailing [[,]]");
    SWAG_ERROR(Err0067, "missing expression inside [[()]]                                                                       $ ");
    SWAG_ERROR(Err0756, "missing filename after [[#include]], found $$TKN$$                                                     $ ");
    SWAG_ERROR(Err0068, "missing float exponent value                                                                           $ ");
    SWAG_ERROR(Err0181, "missing four hexadecimal digits after [['\\u']]                                                        $ ");
    SWAG_ERROR(Err0191, "missing function name, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0129, "missing function parameter name                                                                        $ ");
    SWAG_ERROR(Err0721, "missing generic arguments for %s                                                                       $ ");
    SWAG_ERROR(Err0081, "missing generic arguments for function [[%s]]                                                          $ ");
    SWAG_ERROR(Err0722, "missing generic arguments for function [[%s]]                                                          $ ");
    SWAG_ERROR(Err0082, "missing generic arguments for struct [[%s]]                                                            $ ");
    SWAG_ERROR(Err0723, "missing generic arguments for struct [[%s]]                                                            $ ");
    SWAG_ERROR(Err0196, "missing generic name identifier, found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0453, "missing generic parameters between [[()]]                                                              $ hint: remove [[()]] if this is not generic");
    SWAG_ERROR(Err0450, "missing generic parameters in [[%s]] declaration                                                       $ ");
    SWAG_ERROR(Err0198, "missing identifier %s, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0199, "missing identifier after [[%s]], found $$TKN$$                                                         $ ");
    SWAG_ERROR(Err0141, "missing identifier after [[.]] reference, found $$TKN$$                                                $ ");
    SWAG_ERROR(Err0243, "missing identifier or type after suffix start, found $$TKN$$                                           $ ");
    SWAG_ERROR(Err0200, "missing identifier, found $$TKN$$                                                                      $ ");
    SWAG_ERROR(Err0109, "missing index after [[,]] before $$TKN$$                                                               $ hint: add an index or remove the trailing [[,]]");
    SWAG_ERROR(Err0758, "missing initialization for immutable variable                                                          $ ");
    SWAG_ERROR(Err0446, "missing line break or [[;]] after %s                                                                   $ note: found $$TKN$$");
    SWAG_ERROR(Err0769, "missing location path after [[#import]], found $$TKN$$                                                 $ ");
    SWAG_ERROR(Err0741, "missing major version                                                                                  $ note: revision set to [[%d]]");
    SWAG_ERROR(Err0272, "missing match variable name, found $$TKN$$                                                             $ ");
    SWAG_ERROR(Err0755, "missing module name after [[#import]], found $$TKN$$                                                   $ ");
    SWAG_ERROR(Err0462, "missing name of %s                                                                                     $ note: the previous arguments are named, so this one must be as well");
    SWAG_ERROR(Err0214, "missing namespace body; found [[;]]                                                                    $ ");
    SWAG_ERROR(Err0464, "missing namespace name before [['{']]                                                                  $ ");
    SWAG_ERROR(Err0463, "missing namespace name before [[;]]                                                                    $ ");
    SWAG_ERROR(Err0215, "missing namespace name, found $$TKN$$                                                                  $ ");
    SWAG_ERROR(Err0738, "missing or invalid expression                                                                          $ note: found $$TKN$$");
    SWAG_ERROR(Err0785, "missing or invalid second [[#import]] argument                                                         $ note: found $$TKN$$ $ hint: use [[location:\"location\"]]");
    SWAG_ERROR(Err0773, "missing or invalid third [[#import]] argument                                                          $ note: found $$TKN$$ $ hint: use [[version:\"version\"]]");
    SWAG_ERROR(Err0113, "missing parameter after [[,]] before $$TKN$$                                                           $ hint: add a parameter or remove the trailing [[,]]");
    SWAG_ERROR(Err0465, "missing parameter name and [[:]] before [[%s]]                                                         $ ");
    SWAG_ERROR(Err0461, "missing parameter type or assignment                                                                   $ note: cannot mix inferred and explicit types");
    SWAG_ERROR(Err0449, "missing parameters [[()]] before [[{]]                                                                 $ hint: add [[()]] after [[%s]] if there are no parameters");
    SWAG_ERROR(Err0467, "missing parameters for function [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0456, "missing reference initialization                                                                       $ ");
    SWAG_ERROR(Err0759, "missing required error: none detected                                                                  $ ");
    SWAG_ERROR(Err0760, "missing required warning: none detected                                                                $ ");
    SWAG_ERROR(Err0472, "missing return statement of type [[%s]] in %s                                                          $ ");
    SWAG_ERROR(Err0471, "missing return type                                                                                    $ note: a function with the [[#[Swag.Discardable]]] attribute must return a value");
    SWAG_ERROR(Err0470, "missing return type [[%s]] for function [[%s]]                                                         $ ");
    SWAG_ERROR(Err0469, "missing return type for function [[%s]]                                                                $ ");
    SWAG_ERROR(Err0474, "missing return value of type [[%s]]                                                                    $ ");
    SWAG_ERROR(Err0742, "missing revision                                                                                       $ note: build number set to [[%d]]");
    SWAG_ERROR(Err0137, "missing struct name after [[for]], found %s [[%s]]                                                     $ ");
    SWAG_ERROR(Err0477, "missing struct name before [['{']]                                                                     $ ");
    SWAG_ERROR(Err0238, "missing struct name, found $$TKN$$                                                                     $ ");
    SWAG_ERROR(Err0180, "missing two hexadecimal digits after [['\\x']]                                                         $ ");
    SWAG_ERROR(Err0319, "missing type after [[code]]                                                                            $ note: [[code]] requires a type or [[void]], found $$TKN$$");
    SWAG_ERROR(Err0476, "missing upper bound after [[until]]                                                                    $ hint: use [[to]] to slice until the end");
    SWAG_ERROR(Err0436, "missing value [[%s.%s]] in [[switch]]                                                                  $ ");
    SWAG_ERROR(Err0273, "missing variable name after [[%s]], found $$TKN$$                                                      $ ");
    SWAG_ERROR(Err0115, "missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0116, "missing variable name after [[,]] before $$TKN$$                                                       $ hint: add a variable name or remove the trailing [[,]]");
    SWAG_ERROR(Err0271, "missing variable name after [[,]], found $$TKN$$                                                       $ ");
    SWAG_ERROR(Err0270, "missing variable name, found $$TKN$$                                                                   $ ");
    SWAG_ERROR(Err0770, "missing version string after [[#import]], found $$TKN$$                                                $ ");
    SWAG_ERROR(Err0417, "missing warning string after [[#global testwarning]]                                                   $ note: found $$TKN$$");
    SWAG_ERROR(Err0486, "not enough arguments for attribute [[%s]]                                                              $ ");
    SWAG_ERROR(Err0487, "not enough call arguments for %s [[%s]]                                                                $ ");
    SWAG_ERROR(Err0488, "not enough generic arguments for %s [[%s]]                                                             $ ");
    SWAG_ERROR(Err0489, "not enough generic parameters for [[%s]]                                                               $ ");
    SWAG_ERROR(Err0490, "not enough initializers for array                                                                      $ note: expected [[%d]] values, found [[%d]]");
    SWAG_ERROR(Err0492, "not enough parameters in [[%s]] declaration                                                            $ note: [[%s]] requires [[%d]] parameters, found [[%d]]");
    SWAG_ERROR(Err0493, "not enough parameters in [[%s]] declaration                                                            $ note: [[%s]] requires at least [[%d]] parameters, found [[%d]]");
    SWAG_ERROR(Err0491, "not enough tuple initializers                                                                          $ note: the tuple requires [[%d]] values, found [[%d]] ");
    SWAG_ERROR(Err0494, "too many [[#alias]] numbers                                                                            $ note: the valid range is [0, 31], found [[%u]]");
    SWAG_ERROR(Err0495, "too many [[#uniq]] numbers                                                                             $ note: the valid range is [0, 31], found [[%u]]");
    SWAG_ERROR(Err0496, "too many [[#up]] count                                                                                 $ note: the valid range is [1, 255], found [[%u]]");
    SWAG_ERROR(Err0517, "too many arguments                                                                                     $ note: expected [[%d]], found [[%d]]");
    SWAG_ERROR(Err0497, "too many array dimensions                                                                              $ note: maximum is [[254]]");
    SWAG_ERROR(Err0518, "too many generic arguments for %s [[%s]]                                                               $ note: expected [[%d]], found [[%d]]");
    SWAG_ERROR(Err0520, "too many generic parameters for [[%s]]                                                                 $ ");
    SWAG_ERROR(Err0519, "too many generic parameters for [[%s]]                                                                 $ note: expected [[1]], found [[%d]]");
    SWAG_ERROR(Err0172, "too many identifiers: expected single %s                                                               $ hint: remove the [['.']] separator");
    SWAG_ERROR(Err0521, "too many initializers for [[%s]]                                                                       $ note: expected [[%d]] values, found [[%d]]");
    SWAG_ERROR(Err0522, "too many initializers for array                                                                        $ note: expected [[%d]] values, found [[%d]]");
    SWAG_ERROR(Err0523, "too many initializers for tuple                                                                        $ note: expected [[%d]] values, found [[%d]]");
    SWAG_ERROR(Err0525, "too many parameters in [[%s]] declaration                                                              $ note: [[%s]] requires [[%d]] parameters, found [[%d]]");
    SWAG_ERROR(Err0505, "too many variadic arguments                                                                            $ note: the maximum number of arguments is [[%d]], found [[%d]]");
    SWAG_ERROR(Err0561, "type mismatch                                                                                          $ note: expected type [[%s]], found [[%s]]");
    SWAG_ERROR(Err0591, "type mismatch [[%s]] for field [[%s]]                                                                  $ note: field [[%s]] requires [[%s]]");
    SWAG_ERROR(Err0569, "type mismatch in tuple assignment                                                                      $ ");
    SWAG_ERROR(Err0652, "unexpected parameters                                                                                  $ note: a %s cannot have parameters $ hint: replace [[(]] with [[{]] to start the block");
    SWAG_ERROR(Err0653, "unexpected return type                                                                                 $ note: a function with the [[#[Swag.CalleeReturn]]] attribute cannot declare a return type");
    SWAG_ERROR(Err0654, "unexpected return value                                                                                $ note: a %s cannot return a value");
    SWAG_ERROR(Err0281, "unmatched [[)]]: missing matching [[(]]                                                                $ ");
    SWAG_ERROR(Err0285, "unmatched [[}]]: missing matching [[{]]                                                                $ ");
    SWAG_ERROR(Err0286, "unmatched comment terminator [['*/']] after %s: missing matching [['/*']]                              $ ");
    SWAG_ERROR(Err0452, "unresolved generic struct [[%s]]                                                                       $ note: field [[%s]] is generic but cannot be specialized");
    SWAG_ERROR(Err0605, "unsupported callback return type                                                                       $ note: cannot use [[@mkcallback]] on a function returning type [[%s]]");
    SWAG_ERROR(Err0126, "unsupported variadic argument type [[%s]]                                                              $ note: argument is promoted to [[%s]] at the call site");

    SWAG_ERROR(Err0386, nullptr);
    SWAG_ERROR(Err0404, nullptr);
    SWAG_ERROR(Err0405, nullptr);
    SWAG_ERROR(Err0409, nullptr);
    SWAG_ERROR(Err0451, nullptr);
    SWAG_ERROR(Err0443, nullptr);
    SWAG_ERROR(Err0502, nullptr);
    SWAG_ERROR(Err0536, nullptr);
    SWAG_ERROR(Err0546, nullptr);
    SWAG_ERROR(Err0554, nullptr);
    SWAG_ERROR(Err0574, nullptr);
    SWAG_ERROR(Err0575, nullptr);
    SWAG_ERROR(Err0576, nullptr);
    SWAG_ERROR(Err0577, nullptr);
    SWAG_ERROR(Err0668, nullptr);
    SWAG_ERROR(Err0695, nullptr);
    SWAG_ERROR(Err0696, nullptr);
    SWAG_ERROR(Err0702, nullptr);
    SWAG_ERROR(Err0697, nullptr);
    SWAG_ERROR(Err0698, nullptr);
    SWAG_ERROR(Err0167, nullptr);
    SWAG_ERROR(Err0421, nullptr);
    SWAG_ERROR(Err0309, nullptr);
    SWAG_ERROR(Err0422, nullptr);
    SWAG_ERROR(Err0468, nullptr);
    SWAG_ERROR(Err0060, nullptr);
    SWAG_ERROR(Err0079, nullptr);
    SWAG_ERROR(Err0320, nullptr);
    SWAG_ERROR(Err0481, nullptr);

    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////
}

Utf8 formErr(ErrorID idx, ...)
{
    va_list args;
    va_start(args, idx);
    auto result = form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
    result      = form(result.cstr(), args);
    va_end(args);
    return result;
}

Utf8 toErr(ErrorID idx)
{
    return form("[%s] %s", g_ErrList[idx], g_E[idx].cstr());
}
